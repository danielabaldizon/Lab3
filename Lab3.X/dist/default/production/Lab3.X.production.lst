

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 08 01:10:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391                           
   392                           	psect	strings
   393  1800                     __pstrings:	
   394  1800                     stringtab:	
   395  1800                     __stringtab:	
   396                           
   397                           ;	String table - string pointers are 1 byte each
   398  1800  1BFF               	btfsc	btemp+1,7
   399  1801  280A               	ljmp	stringcode
   400  1802  1383               	bcf	3,7
   401  1803  187F               	btfsc	btemp+1,0
   402  1804  1783               	bsf	3,7
   403  1805  0800               	movf	0,w
   404  1806  0A84               	incf	4,f
   405  1807  1903               	skipnz
   406  1808  0AFF               	incf	btemp+1,f
   407  1809  0008               	return
   408  180A                     stringcode:	
   409  180A                     stringdir:	
   410  180A  3018               	movlw	high stringdir
   411  180B  008A               	movwf	10
   412  180C  0804               	movf	4,w
   413  180D  0A84               	incf	4,f
   414  180E  0782               	addwf	2,f
   415  180F                     __stringbase:	
   416  180F  3400               	retlw	0
   417  1810                     __end_of__stringtab:	
   418  1810                     __powers_:	
   419  1810  3400               	retlw	0
   420  1811  3400               	retlw	0
   421  1812  3480               	retlw	128
   422  1813  343F               	retlw	63
   423  1814  3400               	retlw	0
   424  1815  3400               	retlw	0
   425  1816  3420               	retlw	32
   426  1817  3441               	retlw	65
   427  1818  3400               	retlw	0
   428  1819  3400               	retlw	0
   429  181A  34C8               	retlw	200
   430  181B  3442               	retlw	66
   431  181C  3400               	retlw	0
   432  181D  3400               	retlw	0
   433  181E  347A               	retlw	122
   434  181F  3444               	retlw	68
   435  1820  3400               	retlw	0
   436  1821  3440               	retlw	64
   437  1822  341C               	retlw	28
   438  1823  3446               	retlw	70
   439  1824  3400               	retlw	0
   440  1825  3450               	retlw	80
   441  1826  34C3               	retlw	195
   442  1827  3447               	retlw	71
   443  1828  3400               	retlw	0
   444  1829  3424               	retlw	36
   445  182A  3474               	retlw	116
   446  182B  3449               	retlw	73
   447  182C  3480               	retlw	128
   448  182D  3496               	retlw	150
   449  182E  3418               	retlw	24
   450  182F  344B               	retlw	75
   451  1830  3420               	retlw	32
   452  1831  34BC               	retlw	188
   453  1832  34BE               	retlw	190
   454  1833  344C               	retlw	76
   455  1834  3428               	retlw	40
   456  1835  346B               	retlw	107
   457  1836  346E               	retlw	110
   458  1837  344E               	retlw	78
   459  1838  34F9               	retlw	249
   460  1839  3402               	retlw	2
   461  183A  3415               	retlw	21
   462  183B  3450               	retlw	80
   463  183C  34EC               	retlw	236
   464  183D  3478               	retlw	120
   465  183E  34AD               	retlw	173
   466  183F  3460               	retlw	96
   467  1840  34CA               	retlw	202
   468  1841  34F2               	retlw	242
   469  1842  3449               	retlw	73
   470  1843  3471               	retlw	113
   471  1844                     __end_of__powers_:	
   472  1844                     __npowers_:	
   473  1844  3400               	retlw	0
   474  1845  3400               	retlw	0
   475  1846  3480               	retlw	128
   476  1847  343F               	retlw	63
   477  1848  34CD               	retlw	205
   478  1849  34CC               	retlw	204
   479  184A  34CC               	retlw	204
   480  184B  343D               	retlw	61
   481  184C  340A               	retlw	10
   482  184D  34D7               	retlw	215
   483  184E  3423               	retlw	35
   484  184F  343C               	retlw	60
   485  1850  346F               	retlw	111
   486  1851  3412               	retlw	18
   487  1852  3483               	retlw	131
   488  1853  343A               	retlw	58
   489  1854  3417               	retlw	23
   490  1855  34B7               	retlw	183
   491  1856  34D1               	retlw	209
   492  1857  3438               	retlw	56
   493  1858  34AC               	retlw	172
   494  1859  34C5               	retlw	197
   495  185A  3427               	retlw	39
   496  185B  3437               	retlw	55
   497  185C  34BD               	retlw	189
   498  185D  3437               	retlw	55
   499  185E  3486               	retlw	134
   500  185F  3435               	retlw	53
   501  1860  3495               	retlw	149
   502  1861  34BF               	retlw	191
   503  1862  34D6               	retlw	214
   504  1863  3433               	retlw	51
   505  1864  3477               	retlw	119
   506  1865  34CC               	retlw	204
   507  1866  342B               	retlw	43
   508  1867  3432               	retlw	50
   509  1868  345F               	retlw	95
   510  1869  3470               	retlw	112
   511  186A  3489               	retlw	137
   512  186B  3430               	retlw	48
   513  186C  34FF               	retlw	255
   514  186D  34E6               	retlw	230
   515  186E  34DB               	retlw	219
   516  186F  342E               	retlw	46
   517  1870  3408               	retlw	8
   518  1871  34E5               	retlw	229
   519  1872  343C               	retlw	60
   520  1873  341E               	retlw	30
   521  1874  3460               	retlw	96
   522  1875  3442               	retlw	66
   523  1876  34A2               	retlw	162
   524  1877  340D               	retlw	13
   525  1878                     __end_of__npowers_:	
   526  1878                     _dpowers:	
   527  1878  3401               	retlw	1
   528  1879  3400               	retlw	0
   529  187A  3400               	retlw	0
   530  187B  3400               	retlw	0
   531  187C  340A               	retlw	10
   532  187D  3400               	retlw	0
   533  187E  3400               	retlw	0
   534  187F  3400               	retlw	0
   535  1880  3464               	retlw	100
   536  1881  3400               	retlw	0
   537  1882  3400               	retlw	0
   538  1883  3400               	retlw	0
   539  1884  34E8               	retlw	232
   540  1885  3403               	retlw	3
   541  1886  3400               	retlw	0
   542  1887  3400               	retlw	0
   543  1888  3410               	retlw	16
   544  1889  3427               	retlw	39
   545  188A  3400               	retlw	0
   546  188B  3400               	retlw	0
   547  188C  34A0               	retlw	160
   548  188D  3486               	retlw	134
   549  188E  3401               	retlw	1
   550  188F  3400               	retlw	0
   551  1890  3440               	retlw	64
   552  1891  3442               	retlw	66
   553  1892  340F               	retlw	15
   554  1893  3400               	retlw	0
   555  1894  3480               	retlw	128
   556  1895  3496               	retlw	150
   557  1896  3498               	retlw	152
   558  1897  3400               	retlw	0
   559  1898  3400               	retlw	0
   560  1899  34E1               	retlw	225
   561  189A  34F5               	retlw	245
   562  189B  3405               	retlw	5
   563  189C  3400               	retlw	0
   564  189D  34CA               	retlw	202
   565  189E  349A               	retlw	154
   566  189F  343B               	retlw	59
   567  18A0                     __end_of_dpowers:	
   568  000B                     _INTCONbits	set	11
   569  000C                     _PIR1bits	set	12
   570  001E                     _ADRESH	set	30
   571  001F                     _ADCON0bits	set	31
   572  0038                     _RC0	set	56
   573  0039                     _RC1	set	57
   574  002F                     _RA7	set	47
   575  002E                     _RA6	set	46
   576  002D                     _RA5	set	45
   577  002C                     _RA4	set	44
   578  002B                     _RA3	set	43
   579  002A                     _RA2	set	42
   580  0029                     _RA1	set	41
   581  0028                     _RA0	set	40
   582  009E                     _ADRESL	set	158
   583  008C                     _PIE1bits	set	140
   584  0086                     _TRISBbits	set	134
   585  0089                     _TRISEbits	set	137
   586  0085                     _TRISAbits	set	133
   587  009F                     _ADCON1bits	set	159
   588  0087                     _TRISC	set	135
   589  0086                     _TRISB	set	134
   590  0085                     _TRISA	set	133
   591  0189                     _ANSELHbits	set	393
   592  0188                     _ANSELbits	set	392
   593  0188                     _ANSEL	set	392
   594  0189                     _ANSELH	set	393
   595  18A0                     STR_4:	
   596  18A0  3425               	retlw	37	;'%'
   597  18A1  342E               	retlw	46	;'.'
   598  18A2  3432               	retlw	50	;'2'
   599  18A3  3466               	retlw	102	;'f'
   600  18A4  3400               	retlw	0
   601  18A5                     STR_1:	
   602  18A5  3450               	retlw	80	;'P'
   603  18A6  3431               	retlw	49	;'1'
   604  18A7  343A               	retlw	58	;':'
   605  18A8  3400               	retlw	0
   606  18A9                     STR_2:	
   607  18A9  3450               	retlw	80	;'P'
   608  18AA  3432               	retlw	50	;'2'
   609  18AB  343A               	retlw	58	;':'
   610  18AC  3400               	retlw	0
   611  18AD                     STR_3:	
   612  18AD  3450               	retlw	80	;'P'
   613  18AE  3433               	retlw	51	;'3'
   614  18AF  343A               	retlw	58	;':'
   615  18B0  3400               	retlw	0
   616  18A0                     
   617                           ; #config settings
   618  0000                     
   619                           	psect	cinit
   620  07EC                     start_initialization:	
   621  07EC                     __initialization:	
   622                           
   623                           ; Clear objects allocated to BANK0
   624  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   625  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   626  07EE  01EE               	clrf	__pbssBANK0& (0+127)
   627  07EF  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   628                           
   629                           ; Clear objects allocated to BANK1
   630  07F0  1683               	bsf	3,5	;RP0=1, select bank1
   631  07F1  1303               	bcf	3,6	;RP1=0, select bank1
   632  07F2  01D5               	clrf	__pbssBANK1& (0+127)
   633  07F3  01D6               	clrf	(__pbssBANK1+1)& (0+127)
   634  07F4  01D7               	clrf	(__pbssBANK1+2)& (0+127)
   635  07F5  01D8               	clrf	(__pbssBANK1+3)& (0+127)
   636  07F6  01D9               	clrf	(__pbssBANK1+4)& (0+127)
   637  07F7  01DA               	clrf	(__pbssBANK1+5)& (0+127)
   638  07F8  01DB               	clrf	(__pbssBANK1+6)& (0+127)
   639  07F9  01DC               	clrf	(__pbssBANK1+7)& (0+127)
   640  07FA  01DD               	clrf	(__pbssBANK1+8)& (0+127)
   641  07FB  01DE               	clrf	(__pbssBANK1+9)& (0+127)
   642  07FC                     end_of_initialization:	
   643                           ;End of C runtime variable initialization code
   644                           
   645  07FC                     __end_of__initialization:	
   646  07FC  0183               	clrf	3
   647  07FD  120A  118A  2810   	ljmp	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  006E                     __pbssBANK0:	
   651  006E                     _ctrl2:	
   652  006E                     	ds	1
   653  006F                     _ctrl:	
   654  006F                     	ds	1
   655                           
   656                           	psect	bssBANK1
   657  00D5                     __pbssBANK1:	
   658  00D5                     _adc22:	
   659  00D5                     	ds	4
   660  00D9                     _adc11:	
   661  00D9                     	ds	4
   662  00DD                     _adc2:	
   663  00DD                     	ds	1
   664  00DE                     _adc1:	
   665  00DE                     	ds	1
   666                           
   667                           	psect	cstackBANK1
   668  00A0                     __pcstackBANK1:	
   669  00A0                     ?_sprintf:	
   670  00A0                     sprintf@f:	
   671                           ; 2 bytes @ 0x0
   672                           
   673                           
   674                           ; 1 bytes @ 0x0
   675  00A0                     	ds	5
   676  00A5                     ??_sprintf:	
   677                           
   678                           ; 1 bytes @ 0x5
   679  00A5                     	ds	5
   680  00AA                     _sprintf$1130:	
   681                           
   682                           ; 4 bytes @ 0xA
   683  00AA                     	ds	4
   684  00AE                     sprintf@ap:	
   685                           
   686                           ; 1 bytes @ 0xE
   687  00AE                     	ds	1
   688  00AF                     sprintf@flag:	
   689                           
   690                           ; 2 bytes @ 0xF
   691  00AF                     	ds	2
   692  00B1                     sprintf@val:	
   693                           
   694                           ; 4 bytes @ 0x11
   695  00B1                     	ds	4
   696  00B5                     sprintf@eexp:	
   697                           
   698                           ; 2 bytes @ 0x15
   699  00B5                     	ds	2
   700  00B7                     sprintf@tmpval:	
   701                           
   702                           ; 4 bytes @ 0x17
   703  00B7                     	ds	4
   704  00BB                     sprintf@sp:	
   705                           
   706                           ; 1 bytes @ 0x1B
   707  00BB                     	ds	1
   708  00BC                     sprintf@prec:	
   709                           
   710                           ; 2 bytes @ 0x1C
   711  00BC                     	ds	2
   712  00BE                     sprintf@fval:	
   713                           
   714                           ; 4 bytes @ 0x1E
   715  00BE                     	ds	4
   716  00C2                     sprintf@c:	
   717                           
   718                           ; 1 bytes @ 0x22
   719  00C2                     	ds	1
   720  00C3                     ??_main:	
   721                           
   722                           ; 1 bytes @ 0x23
   723  00C3                     	ds	4
   724  00C7                     main@s1:	
   725                           
   726                           ; 7 bytes @ 0x27
   727  00C7                     	ds	7
   728  00CE                     main@s2:	
   729                           
   730                           ; 7 bytes @ 0x2E
   731  00CE                     	ds	7
   732                           
   733                           	psect	cstackCOMMON
   734  0070                     __pcstackCOMMON:	
   735  0070                     ?_isdigit:	
   736  0070                     ?___fleq:	
   737                           ; 1 bit 
   738                           
   739  0070                     ?___flge:	
   740                           ; 1 bit 
   741                           
   742  0070                     ?_ADC_CONFIG:	
   743                           ; 1 bit 
   744                           
   745  0070                     ??_isdigit:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_Lcd_Port:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ??_Lcd_Port:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_Lcd_Cmd:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_Lcd_Clear:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_Lcd_Init:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_Lcd_Write_Char:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_main:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?__Umul8_16:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?___wmul:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0070                     ?___awmod:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ?___lwmod:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ?__tdiv_to_l_:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ?__div_to_l_:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0070                     ?___lldiv:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0070                     ?___flneg:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0070                     ?___llmod:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     ?___xxtofl:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0070                     Lcd_Port@a:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0070                     ADC_CONFIG@justif:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     _isdigit$930:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     __Umul8_16@multiplicand:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ___wmul@multiplier:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ___awmod@divisor:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0070                     ___lwmod@divisor:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0070                     ___lldiv@divisor:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0070                     __div_to_l_@f1:	
   824                           ; 4 bytes @ 0x0
   825                           
   826  0070                     ___fleq@ff1:	
   827                           ; 4 bytes @ 0x0
   828                           
   829  0070                     ___flge@ff1:	
   830                           ; 4 bytes @ 0x0
   831                           
   832  0070                     ___flneg@f1:	
   833                           ; 4 bytes @ 0x0
   834                           
   835  0070                     __tdiv_to_l_@f1:	
   836                           ; 4 bytes @ 0x0
   837                           
   838  0070                     ___llmod@divisor:	
   839                           ; 4 bytes @ 0x0
   840                           
   841  0070                     ___xxtofl@val:	
   842                           ; 4 bytes @ 0x0
   843                           
   844                           
   845                           ; 4 bytes @ 0x0
   846  0070                     	ds	1
   847  0071                     ??_ADC_CONFIG:	
   848  0071                     ??_Lcd_Cmd:	
   849                           ; 1 bytes @ 0x1
   850                           
   851  0071                     ??_Lcd_Write_Char:	
   852                           ; 1 bytes @ 0x1
   853                           
   854  0071                     isdigit@c:	
   855                           ; 1 bytes @ 0x1
   856                           
   857                           
   858                           ; 1 bytes @ 0x1
   859  0071                     	ds	1
   860  0072                     ??__Umul8_16:	
   861  0072                     Lcd_Write_Char@a:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0072                     ___wmul@multiplicand:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0072                     ___awmod@dividend:	
   868                           ; 2 bytes @ 0x2
   869                           
   870  0072                     ___lwmod@dividend:	
   871                           ; 2 bytes @ 0x2
   872                           
   873                           
   874                           ; 2 bytes @ 0x2
   875  0072                     	ds	1
   876  0073                     ?_Lcd_Write_String:	
   877  0073                     Lcd_Cmd@a:	
   878                           ; 1 bytes @ 0x3
   879                           
   880  0073                     ADC_CONFIG@canal:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0073                     Lcd_Write_String@a:	
   884                           ; 1 bytes @ 0x3
   885                           
   886                           
   887                           ; 2 bytes @ 0x3
   888  0073                     	ds	1
   889  0074                     ??_Lcd_Clear:	
   890  0074                     ?_Lcd_Set_Cursor:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0074                     ??_Lcd_Init:	
   894                           ; 1 bytes @ 0x4
   895                           
   896  0074                     ??___wmul:	
   897                           ; 1 bytes @ 0x4
   898                           
   899  0074                     ??___awmod:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0074                     ??___flneg:	
   903                           ; 1 bytes @ 0x4
   904                           
   905  0074                     ??___lwmod:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??___xxtofl:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     Lcd_Set_Cursor@b:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ___wmul@product:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     __Umul8_16@product:	
   918                           ; 2 bytes @ 0x4
   919                           
   920  0074                     ___lldiv@dividend:	
   921                           ; 2 bytes @ 0x4
   922                           
   923  0074                     __div_to_l_@f2:	
   924                           ; 4 bytes @ 0x4
   925                           
   926  0074                     ___fleq@ff2:	
   927                           ; 4 bytes @ 0x4
   928                           
   929  0074                     ___flge@ff2:	
   930                           ; 4 bytes @ 0x4
   931                           
   932  0074                     __tdiv_to_l_@f2:	
   933                           ; 4 bytes @ 0x4
   934                           
   935  0074                     ___llmod@dividend:	
   936                           ; 4 bytes @ 0x4
   937                           
   938                           
   939                           ; 4 bytes @ 0x4
   940  0074                     	ds	1
   941  0075                     ??_Lcd_Set_Cursor:	
   942  0075                     ??_Lcd_Write_String:	
   943                           ; 1 bytes @ 0x5
   944                           
   945  0075                     Lcd_Set_Cursor@a:	
   946                           ; 1 bytes @ 0x5
   947                           
   948  0075                     ___awmod@counter:	
   949                           ; 1 bytes @ 0x5
   950                           
   951  0075                     ___lwmod@counter:	
   952                           ; 1 bytes @ 0x5
   953                           
   954                           
   955                           ; 1 bytes @ 0x5
   956  0075                     	ds	1
   957  0076                     ?___lwdiv:	
   958  0076                     ___awmod@sign:	
   959                           ; 2 bytes @ 0x6
   960                           
   961  0076                     ___lwdiv@divisor:	
   962                           ; 1 bytes @ 0x6
   963                           
   964  0076                     __Umul8_16@word_mpld:	
   965                           ; 2 bytes @ 0x6
   966                           
   967                           
   968                           ; 2 bytes @ 0x6
   969  0076                     	ds	1
   970  0077                     ?___awdiv:	
   971  0077                     ___awdiv@divisor:	
   972                           ; 2 bytes @ 0x7
   973                           
   974                           
   975                           ; 2 bytes @ 0x7
   976  0077                     	ds	1
   977  0078                     ??__tdiv_to_l_:	
   978  0078                     ??__div_to_l_:	
   979                           ; 1 bytes @ 0x8
   980                           
   981  0078                     ??___lldiv:	
   982                           ; 1 bytes @ 0x8
   983                           
   984  0078                     ??___fleq:	
   985                           ; 1 bytes @ 0x8
   986                           
   987  0078                     ??___flge:	
   988                           ; 1 bytes @ 0x8
   989                           
   990  0078                     ??___llmod:	
   991                           ; 1 bytes @ 0x8
   992                           
   993  0078                     ___xxtofl@sign:	
   994                           ; 1 bytes @ 0x8
   995                           
   996  0078                     __Umul8_16@multiplier:	
   997                           ; 1 bytes @ 0x8
   998                           
   999  0078                     Lcd_Write_String@i:	
  1000                           ; 1 bytes @ 0x8
  1001                           
  1002  0078                     ___lwdiv@dividend:	
  1003                           ; 2 bytes @ 0x8
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x8
  1007  0078                     	ds	1
  1008  0079                     ___llmod@counter:	
  1009  0079                     ___xxtofl@exp:	
  1010                           ; 1 bytes @ 0x9
  1011                           
  1012  0079                     ___awdiv@dividend:	
  1013                           ; 1 bytes @ 0x9
  1014                           
  1015  0079                     ___lldiv@quotient:	
  1016                           ; 2 bytes @ 0x9
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x9
  1020  0079                     	ds	1
  1021  007A                     ??___lwdiv:	
  1022  007A                     ___xxtofl@arg:	
  1023                           ; 1 bytes @ 0xA
  1024                           
  1025                           
  1026                           ; 4 bytes @ 0xA
  1027  007A                     	ds	1
  1028  007B                     ??___awdiv:	
  1029  007B                     ___lwdiv@quotient:	
  1030                           ; 1 bytes @ 0xB
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0xB
  1034  007B                     	ds	2
  1035  007D                     ___lldiv@counter:	
  1036  007D                     ___lwdiv@counter:	
  1037                           ; 1 bytes @ 0xD
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0xD
  1041  007D                     	ds	1
  1042  007E                     ??___flsub:	
  1043                           
  1044                           	psect	cstackBANK0
  1045  0020                     __pcstackBANK0:	
  1046                           ; 1 bytes @ 0xE
  1047                           
  1048  0020                     ?___fldiv:	
  1049  0020                     ___awdiv@counter:	
  1050                           ; 4 bytes @ 0x0
  1051                           
  1052  0020                     __div_to_l_@quot:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0020                     __tdiv_to_l_@quot:	
  1056                           ; 4 bytes @ 0x0
  1057                           
  1058  0020                     ___fldiv@a:	
  1059                           ; 4 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x0
  1063  0020                     	ds	1
  1064  0021                     ___awdiv@sign:	
  1065                           
  1066                           ; 1 bytes @ 0x1
  1067  0021                     	ds	1
  1068  0022                     ___awdiv@quotient:	
  1069                           
  1070                           ; 2 bytes @ 0x2
  1071  0022                     	ds	2
  1072  0024                     ?___flmul:	
  1073  0024                     __div_to_l_@cntr:	
  1074                           ; 4 bytes @ 0x4
  1075                           
  1076  0024                     __tdiv_to_l_@cntr:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0024                     ___fldiv@b:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0024                     ___flmul@b:	
  1083                           ; 4 bytes @ 0x4
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x4
  1087  0024                     	ds	1
  1088  0025                     __div_to_l_@exp1:	
  1089  0025                     __tdiv_to_l_@exp1:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x5
  1094  0025                     	ds	3
  1095  0028                     ??___fldiv:	
  1096  0028                     ___flmul@a:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099                           
  1100                           ; 4 bytes @ 0x8
  1101  0028                     	ds	4
  1102  002C                     ??___flmul:	
  1103                           
  1104                           ; 1 bytes @ 0xC
  1105  002C                     	ds	1
  1106  002D                     ___fldiv@rem:	
  1107                           
  1108                           ; 4 bytes @ 0xD
  1109  002D                     	ds	4
  1110  0031                     ___fldiv@sign:	
  1111  0031                     ___flmul@sign:	
  1112                           ; 1 bytes @ 0x11
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0x11
  1116  0031                     	ds	1
  1117  0032                     ___fldiv@new_exp:	
  1118  0032                     ___flmul@grs:	
  1119                           ; 2 bytes @ 0x12
  1120                           
  1121                           
  1122                           ; 4 bytes @ 0x12
  1123  0032                     	ds	2
  1124  0034                     ___fldiv@grs:	
  1125                           
  1126                           ; 4 bytes @ 0x14
  1127  0034                     	ds	2
  1128  0036                     ___flmul@aexp:	
  1129                           
  1130                           ; 1 bytes @ 0x16
  1131  0036                     	ds	1
  1132  0037                     ___flmul@bexp:	
  1133                           
  1134                           ; 1 bytes @ 0x17
  1135  0037                     	ds	1
  1136  0038                     ___fldiv@bexp:	
  1137  0038                     ___flmul@prod:	
  1138                           ; 1 bytes @ 0x18
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x18
  1142  0038                     	ds	1
  1143  0039                     ___fldiv@aexp:	
  1144                           
  1145                           ; 1 bytes @ 0x19
  1146  0039                     	ds	3
  1147  003C                     ___flmul@temp:	
  1148                           
  1149                           ; 2 bytes @ 0x1C
  1150  003C                     	ds	2
  1151  003E                     ?_fround:	
  1152  003E                     ?_scale:	
  1153                           ; 4 bytes @ 0x1E
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x1E
  1157  003E                     	ds	4
  1158  0042                     ??_fround:	
  1159  0042                     ??_scale:	
  1160                           ; 1 bytes @ 0x22
  1161                           
  1162                           
  1163                           ; 1 bytes @ 0x22
  1164  0042                     	ds	7
  1165  0049                     _fround$1128:	
  1166                           
  1167                           ; 4 bytes @ 0x29
  1168  0049                     	ds	3
  1169  004C                     _scale$1129:	
  1170                           
  1171                           ; 4 bytes @ 0x2C
  1172  004C                     	ds	1
  1173  004D                     _fround$1127:	
  1174                           
  1175                           ; 4 bytes @ 0x2D
  1176  004D                     	ds	3
  1177  0050                     scale@scl:	
  1178                           
  1179                           ; 1 bytes @ 0x30
  1180  0050                     	ds	1
  1181  0051                     ?___fltol:	
  1182  0051                     fround@prec:	
  1183                           ; 4 bytes @ 0x31
  1184                           
  1185  0051                     ___fltol@f1:	
  1186                           ; 1 bytes @ 0x31
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x31
  1190  0051                     	ds	1
  1191  0052                     ?___fladd:	
  1192  0052                     ___fladd@b:	
  1193                           ; 4 bytes @ 0x32
  1194                           
  1195                           
  1196                           ; 4 bytes @ 0x32
  1197  0052                     	ds	3
  1198  0055                     ??___fltol:	
  1199                           
  1200                           ; 1 bytes @ 0x35
  1201  0055                     	ds	1
  1202  0056                     ___fladd@a:	
  1203                           
  1204                           ; 4 bytes @ 0x36
  1205  0056                     	ds	4
  1206  005A                     ??___fladd:	
  1207  005A                     ___fltol@sign1:	
  1208                           ; 1 bytes @ 0x3A
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0x3A
  1212  005A                     	ds	1
  1213  005B                     ___fltol@exp1:	
  1214                           
  1215                           ; 1 bytes @ 0x3B
  1216  005B                     	ds	7
  1217  0062                     ___fladd@signs:	
  1218                           
  1219                           ; 1 bytes @ 0x42
  1220  0062                     	ds	1
  1221  0063                     ___fladd@aexp:	
  1222                           
  1223                           ; 1 bytes @ 0x43
  1224  0063                     	ds	1
  1225  0064                     ___fladd@bexp:	
  1226                           
  1227                           ; 1 bytes @ 0x44
  1228  0064                     	ds	1
  1229  0065                     ___fladd@grs:	
  1230                           
  1231                           ; 1 bytes @ 0x45
  1232  0065                     	ds	1
  1233  0066                     ?___flsub:	
  1234  0066                     ___flsub@a:	
  1235                           ; 4 bytes @ 0x46
  1236                           
  1237                           
  1238                           ; 4 bytes @ 0x46
  1239  0066                     	ds	4
  1240  006A                     ___flsub@b:	
  1241                           
  1242                           ; 4 bytes @ 0x4A
  1243  006A                     	ds	4
  1244                           
  1245                           	psect	maintext
  1246  0010                     __pmaintext:	
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 53 in file "Lab3.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  s2              7   46[BANK1 ] unsigned char [7]
  1257 ;;  s1              7   39[BANK1 ] unsigned char [7]
  1258 ;;  a               2    0        unsigned int 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : B00/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       0      14       0       0
  1270 ;;      Temps:          0       0       4       0       0
  1271 ;;      Totals:         0       0      18       0       0
  1272 ;;Total ram usage:       18 bytes
  1273 ;; Hardware stack levels required when called:    4
  1274 ;; This function calls:
  1275 ;;		_ADC_CONFIG
  1276 ;;		_Lcd_Clear
  1277 ;;		_Lcd_Init
  1278 ;;		_Lcd_Set_Cursor
  1279 ;;		_Lcd_Write_String
  1280 ;;		___fldiv
  1281 ;;		___xxtofl
  1282 ;;		_sprintf
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _main
  1290  0010                     _main:	
  1291  0010                     l3770:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1294                           
  1295                           
  1296                           ;Lab3.c: 54:     unsigned int a;;Lab3.c: 55:     ANSELH = 0;
  1297  0010  1683               	bsf	3,5	;RP0=1, select bank3
  1298  0011  1703               	bsf	3,6	;RP1=1, select bank3
  1299  0012  0189               	clrf	9	;volatile
  1300                           
  1301                           ;Lab3.c: 56:     ANSEL = 0;
  1302  0013  0188               	clrf	8	;volatile
  1303                           
  1304                           ;Lab3.c: 57:     TRISA = 0x00;
  1305  0014  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0015  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0016  0185               	clrf	5	;volatile
  1308                           
  1309                           ;Lab3.c: 58:     TRISB = 0x00;
  1310  0017  0186               	clrf	6	;volatile
  1311                           
  1312                           ;Lab3.c: 59:     TRISC = 0x00;
  1313  0018  0187               	clrf	7	;volatile
  1314  0019                     l3772:	
  1315                           
  1316                           ;Lab3.c: 62:     ADC_CONFIG(12,0);
  1317  0019  01F0               	clrf	ADC_CONFIG@justif
  1318  001A  300C               	movlw	12
  1319  001B  120A  158A  2035  120A  118A  	fcall	_ADC_CONFIG
  1320  0020                     l3774:	
  1321                           
  1322                           ;Lab3.c: 63:     ADC_CONFIG(10,0);
  1323  0020  01F0               	clrf	ADC_CONFIG@justif
  1324  0021  300A               	movlw	10
  1325  0022  120A  158A  2035  120A  118A  	fcall	_ADC_CONFIG
  1326  0027                     l3776:	
  1327                           
  1328                           ;Lab3.c: 65:     Lcd_Init();
  1329  0027  160A  158A  2418  120A  118A  	fcall	_Lcd_Init
  1330  002C                     l3778:	
  1331                           
  1332                           ;Lab3.c: 74:         ADCON0bits.CHS = 10;
  1333  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1334  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1335  002E  081F               	movf	31,w	;volatile
  1336  002F  39C3               	andlw	-61
  1337  0030  3828               	iorlw	40
  1338  0031  009F               	movwf	31	;volatile
  1339  0032                     l3780:	
  1340                           
  1341                           ;Lab3.c: 75:         _delay((unsigned long)((500)*(4000000/4000000.0)));
  1342  0032  30A5               	movlw	165
  1343  0033  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0034  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0035  00C3               	movwf	??_main^(0+128)
  1346  0036                     u6057:	
  1347  0036  0BC3               	decfsz	??_main^(0+128),f
  1348  0037  2836               	goto	u6057
  1349  0038  2839               	nop2
  1350  0039                     l3782:	
  1351                           
  1352                           ;Lab3.c: 76:         ADCON0bits.GO = 1;
  1353  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1354  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1355  003B  149F               	bsf	31,1	;volatile
  1356  003C                     l119:	
  1357                           ;Lab3.c: 77:         while(ADCON0bits.GO == 1){};
  1358                           
  1359  003C  189F               	btfsc	31,1	;volatile
  1360  003D  283F               	goto	u6031
  1361  003E  2840               	goto	u6030
  1362  003F                     u6031:	
  1363  003F  283C               	goto	l119
  1364  0040                     u6030:	
  1365  0040                     l3784:	
  1366                           
  1367                           ;Lab3.c: 78:         adc1 = ADRESH;
  1368  0040  081E               	movf	30,w	;volatile
  1369  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1371  0043  00C3               	movwf	??_main^(0+128)
  1372  0044  0843               	movf	??_main^(0+128),w
  1373  0045  00DE               	movwf	_adc1^(0+128)
  1374  0046                     l3786:	
  1375                           
  1376                           ;Lab3.c: 79:         adc11 = adc1/51.0;
  1377  0046  3042               	movlw	66
  1378  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0049  00A3               	movwf	___fldiv@a+3
  1381  004A  304C               	movlw	76
  1382  004B  00A2               	movwf	___fldiv@a+2
  1383  004C  3000               	movlw	0
  1384  004D  00A1               	movwf	___fldiv@a+1
  1385  004E  3000               	movlw	0
  1386  004F  00A0               	movwf	___fldiv@a
  1387  0050  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0051  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0052  085E               	movf	_adc1^(0+128),w
  1390  0053  00C3               	movwf	??_main^(0+128)
  1391  0054  01C4               	clrf	(??_main^(0+128)+1)
  1392  0055  01C5               	clrf	(??_main^(0+128)+2)
  1393  0056  01C6               	clrf	(??_main^(0+128)+3)
  1394  0057  0846               	movf	(??_main+3)^(0+128),w
  1395  0058  00F3               	movwf	___xxtofl@val+3
  1396  0059  0845               	movf	(??_main+2)^(0+128),w
  1397  005A  00F2               	movwf	___xxtofl@val+2
  1398  005B  0844               	movf	(??_main+1)^(0+128),w
  1399  005C  00F1               	movwf	___xxtofl@val+1
  1400  005D  0843               	movf	??_main^(0+128),w
  1401  005E  00F0               	movwf	___xxtofl@val
  1402  005F  3001               	movlw	1
  1403  0060  160A  158A  2746  120A  118A  	fcall	___xxtofl
  1404  0065  0873               	movf	?___xxtofl+3,w
  1405  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0068  00A7               	movwf	___fldiv@b+3
  1408  0069  0872               	movf	?___xxtofl+2,w
  1409  006A  00A6               	movwf	___fldiv@b+2
  1410  006B  0871               	movf	?___xxtofl+1,w
  1411  006C  00A5               	movwf	___fldiv@b+1
  1412  006D  0870               	movf	?___xxtofl,w
  1413  006E  00A4               	movwf	___fldiv@b
  1414  006F  160A  118A  2190  120A  118A  	fcall	___fldiv
  1415  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0076  0823               	movf	?___fldiv+3,w
  1418  0077  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0078  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0079  00DC               	movwf	(_adc11+3)^(0+128)
  1421  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1422  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1423  007C  0822               	movf	?___fldiv+2,w
  1424  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1425  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1426  007F  00DB               	movwf	(_adc11+2)^(0+128)
  1427  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0082  0821               	movf	?___fldiv+1,w
  1430  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0085  00DA               	movwf	(_adc11+1)^(0+128)
  1433  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0088  0820               	movf	?___fldiv,w
  1436  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1437  008A  1303               	bcf	3,6	;RP1=0, select bank1
  1438  008B  00D9               	movwf	_adc11^(0+128)
  1439  008C                     l3788:	
  1440                           
  1441                           ;Lab3.c: 80:         PIR1bits.ADIF = 0;
  1442  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1443  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1444  008E  130C               	bcf	12,6	;volatile
  1445  008F                     l3790:	
  1446                           
  1447                           ;Lab3.c: 81:         ADCON0bits.CHS = 12;
  1448  008F  081F               	movf	31,w	;volatile
  1449  0090  39C3               	andlw	-61
  1450  0091  3830               	iorlw	48
  1451  0092  009F               	movwf	31	;volatile
  1452  0093                     l3792:	
  1453                           
  1454                           ;Lab3.c: 82:         _delay((unsigned long)((500)*(4000000/4000000.0)));
  1455  0093  30A5               	movlw	165
  1456  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0096  00C3               	movwf	??_main^(0+128)
  1459  0097                     u6067:	
  1460  0097  0BC3               	decfsz	??_main^(0+128),f
  1461  0098  2897               	goto	u6067
  1462  0099  289A               	nop2
  1463  009A                     l3794:	
  1464                           
  1465                           ;Lab3.c: 83:         ADCON0bits.GO = 1;
  1466  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1467  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1468  009C  149F               	bsf	31,1	;volatile
  1469  009D                     l122:	
  1470                           ;Lab3.c: 84:         while(ADCON0bits.GO == 1){};
  1471                           
  1472  009D  189F               	btfsc	31,1	;volatile
  1473  009E  28A0               	goto	u6041
  1474  009F  28A1               	goto	u6040
  1475  00A0                     u6041:	
  1476  00A0  289D               	goto	l122
  1477  00A1                     u6040:	
  1478  00A1                     l3796:	
  1479                           
  1480                           ;Lab3.c: 85:         adc2 = ADRESH;
  1481  00A1  081E               	movf	30,w	;volatile
  1482  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1483  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1484  00A4  00C3               	movwf	??_main^(0+128)
  1485  00A5  0843               	movf	??_main^(0+128),w
  1486  00A6  00DD               	movwf	_adc2^(0+128)
  1487  00A7                     l3798:	
  1488                           
  1489                           ;Lab3.c: 86:         adc22 = adc2/51.0;
  1490  00A7  3042               	movlw	66
  1491  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1492  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1493  00AA  00A3               	movwf	___fldiv@a+3
  1494  00AB  304C               	movlw	76
  1495  00AC  00A2               	movwf	___fldiv@a+2
  1496  00AD  3000               	movlw	0
  1497  00AE  00A1               	movwf	___fldiv@a+1
  1498  00AF  3000               	movlw	0
  1499  00B0  00A0               	movwf	___fldiv@a
  1500  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1501  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1502  00B3  085D               	movf	_adc2^(0+128),w
  1503  00B4  00C3               	movwf	??_main^(0+128)
  1504  00B5  01C4               	clrf	(??_main^(0+128)+1)
  1505  00B6  01C5               	clrf	(??_main^(0+128)+2)
  1506  00B7  01C6               	clrf	(??_main^(0+128)+3)
  1507  00B8  0846               	movf	(??_main+3)^(0+128),w
  1508  00B9  00F3               	movwf	___xxtofl@val+3
  1509  00BA  0845               	movf	(??_main+2)^(0+128),w
  1510  00BB  00F2               	movwf	___xxtofl@val+2
  1511  00BC  0844               	movf	(??_main+1)^(0+128),w
  1512  00BD  00F1               	movwf	___xxtofl@val+1
  1513  00BE  0843               	movf	??_main^(0+128),w
  1514  00BF  00F0               	movwf	___xxtofl@val
  1515  00C0  3001               	movlw	1
  1516  00C1  160A  158A  2746  120A  118A  	fcall	___xxtofl
  1517  00C6  0873               	movf	?___xxtofl+3,w
  1518  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1519  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1520  00C9  00A7               	movwf	___fldiv@b+3
  1521  00CA  0872               	movf	?___xxtofl+2,w
  1522  00CB  00A6               	movwf	___fldiv@b+2
  1523  00CC  0871               	movf	?___xxtofl+1,w
  1524  00CD  00A5               	movwf	___fldiv@b+1
  1525  00CE  0870               	movf	?___xxtofl,w
  1526  00CF  00A4               	movwf	___fldiv@b
  1527  00D0  160A  118A  2190  120A  118A  	fcall	___fldiv
  1528  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1529  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1530  00D7  0823               	movf	?___fldiv+3,w
  1531  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1532  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1533  00DA  00D8               	movwf	(_adc22+3)^(0+128)
  1534  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1535  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1536  00DD  0822               	movf	?___fldiv+2,w
  1537  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1538  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1539  00E0  00D7               	movwf	(_adc22+2)^(0+128)
  1540  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1541  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1542  00E3  0821               	movf	?___fldiv+1,w
  1543  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1544  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1545  00E6  00D6               	movwf	(_adc22+1)^(0+128)
  1546  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1547  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1548  00E9  0820               	movf	?___fldiv,w
  1549  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1550  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1551  00EC  00D5               	movwf	_adc22^(0+128)
  1552  00ED                     l3800:	
  1553                           
  1554                           ;Lab3.c: 87:         PIR1bits.ADIF = 0;
  1555  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1556  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1557  00EF  130C               	bcf	12,6	;volatile
  1558  00F0                     l3802:	
  1559                           
  1560                           ;Lab3.c: 88:         Lcd_Clear();
  1561  00F0  120A  158A  2007  120A  118A  	fcall	_Lcd_Clear
  1562  00F5                     l3804:	
  1563                           
  1564                           ;Lab3.c: 89:         Lcd_Set_Cursor(1,2);
  1565  00F5  3002               	movlw	2
  1566  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1567  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1568  00F8  00C3               	movwf	??_main^(0+128)
  1569  00F9  0843               	movf	??_main^(0+128),w
  1570  00FA  00F4               	movwf	Lcd_Set_Cursor@b
  1571  00FB  3001               	movlw	1
  1572  00FC  160A  158A  2295  120A  118A  	fcall	_Lcd_Set_Cursor
  1573  0101                     l3806:	
  1574                           
  1575                           ;Lab3.c: 90:         Lcd_Write_String("P1:");
  1576  0101  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1577  0102  00F3               	movwf	Lcd_Write_String@a
  1578  0103  3080               	movlw	128
  1579  0104  00F4               	movwf	Lcd_Write_String@a+1
  1580  0105  160A  158A  2392  120A  118A  	fcall	_Lcd_Write_String
  1581  010A                     l3808:	
  1582                           
  1583                           ;Lab3.c: 91:         Lcd_Set_Cursor(1,7);
  1584  010A  3007               	movlw	7
  1585  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1586  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1587  010D  00C3               	movwf	??_main^(0+128)
  1588  010E  0843               	movf	??_main^(0+128),w
  1589  010F  00F4               	movwf	Lcd_Set_Cursor@b
  1590  0110  3001               	movlw	1
  1591  0111  160A  158A  2295  120A  118A  	fcall	_Lcd_Set_Cursor
  1592  0116                     l3810:	
  1593                           
  1594                           ;Lab3.c: 92:         Lcd_Write_String("P2:");
  1595  0116  309A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1596  0117  00F3               	movwf	Lcd_Write_String@a
  1597  0118  3080               	movlw	128
  1598  0119  00F4               	movwf	Lcd_Write_String@a+1
  1599  011A  160A  158A  2392  120A  118A  	fcall	_Lcd_Write_String
  1600  011F                     l3812:	
  1601                           
  1602                           ;Lab3.c: 93:         Lcd_Set_Cursor(1,12);
  1603  011F  300C               	movlw	12
  1604  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1606  0122  00C3               	movwf	??_main^(0+128)
  1607  0123  0843               	movf	??_main^(0+128),w
  1608  0124  00F4               	movwf	Lcd_Set_Cursor@b
  1609  0125  3001               	movlw	1
  1610  0126  160A  158A  2295  120A  118A  	fcall	_Lcd_Set_Cursor
  1611  012B                     l3814:	
  1612                           
  1613                           ;Lab3.c: 94:         Lcd_Write_String("P3:");
  1614  012B  309E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1615  012C  00F3               	movwf	Lcd_Write_String@a
  1616  012D  3080               	movlw	128
  1617  012E  00F4               	movwf	Lcd_Write_String@a+1
  1618  012F  160A  158A  2392  120A  118A  	fcall	_Lcd_Write_String
  1619  0134                     l3816:	
  1620                           
  1621                           ;Lab3.c: 96:         sprintf(s1,"%.2f",adc11);
  1622  0134  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1623  0135  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0136  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0137  00C3               	movwf	??_main^(0+128)
  1626  0138  0843               	movf	??_main^(0+128),w
  1627  0139  00A0               	movwf	sprintf@f^(0+128)
  1628  013A  085C               	movf	(_adc11+3)^(0+128),w
  1629  013B  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1630  013C  085B               	movf	(_adc11+2)^(0+128),w
  1631  013D  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1632  013E  085A               	movf	(_adc11+1)^(0+128),w
  1633  013F  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1634  0140  0859               	movf	_adc11^(0+128),w
  1635  0141  00A1               	movwf	(?_sprintf^(0+128)+1)
  1636  0142  30C7               	movlw	(low (main@s1| 0))& (0+255)
  1637  0143  120A  118A  2194  120A  118A  	fcall	_sprintf
  1638  0148                     l3818:	
  1639                           
  1640                           ;Lab3.c: 97:         Lcd_Set_Cursor(2,1);
  1641  0148  01F4               	clrf	Lcd_Set_Cursor@b
  1642  0149  0AF4               	incf	Lcd_Set_Cursor@b,f
  1643  014A  3002               	movlw	2
  1644  014B  160A  158A  2295  120A  118A  	fcall	_Lcd_Set_Cursor
  1645  0150                     l3820:	
  1646                           
  1647                           ;Lab3.c: 98:         Lcd_Write_String(s1);
  1648  0150  30C7               	movlw	(low (main@s1| 0))& (0+255)
  1649  0151  00F3               	movwf	Lcd_Write_String@a
  1650  0152  3000               	movlw	0
  1651  0153  00F4               	movwf	Lcd_Write_String@a+1
  1652  0154  160A  158A  2392  120A  118A  	fcall	_Lcd_Write_String
  1653  0159                     l3822:	
  1654                           
  1655                           ;Lab3.c: 99:         sprintf(s2,"%.2f",adc22);
  1656  0159  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1657  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1658  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1659  015C  00C3               	movwf	??_main^(0+128)
  1660  015D  0843               	movf	??_main^(0+128),w
  1661  015E  00A0               	movwf	sprintf@f^(0+128)
  1662  015F  0858               	movf	(_adc22+3)^(0+128),w
  1663  0160  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1664  0161  0857               	movf	(_adc22+2)^(0+128),w
  1665  0162  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1666  0163  0856               	movf	(_adc22+1)^(0+128),w
  1667  0164  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1668  0165  0855               	movf	_adc22^(0+128),w
  1669  0166  00A1               	movwf	(?_sprintf^(0+128)+1)
  1670  0167  30CE               	movlw	(low (main@s2| 0))& (0+255)
  1671  0168  120A  118A  2194  120A  118A  	fcall	_sprintf
  1672  016D                     l3824:	
  1673                           
  1674                           ;Lab3.c: 100:         Lcd_Set_Cursor(2,6);
  1675  016D  3006               	movlw	6
  1676  016E  1683               	bsf	3,5	;RP0=1, select bank1
  1677  016F  1303               	bcf	3,6	;RP1=0, select bank1
  1678  0170  00C3               	movwf	??_main^(0+128)
  1679  0171  0843               	movf	??_main^(0+128),w
  1680  0172  00F4               	movwf	Lcd_Set_Cursor@b
  1681  0173  3002               	movlw	2
  1682  0174  160A  158A  2295  120A  118A  	fcall	_Lcd_Set_Cursor
  1683  0179                     l3826:	
  1684                           
  1685                           ;Lab3.c: 101:         Lcd_Write_String(s2);
  1686  0179  30CE               	movlw	(low (main@s2| 0))& (0+255)
  1687  017A  00F3               	movwf	Lcd_Write_String@a
  1688  017B  3000               	movlw	0
  1689  017C  00F4               	movwf	Lcd_Write_String@a+1
  1690  017D  160A  158A  2392  120A  118A  	fcall	_Lcd_Write_String
  1691  0182                     l3828:	
  1692                           
  1693                           ;Lab3.c: 102:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1694  0182  300B               	movlw	11
  1695  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0185  00C5               	movwf	(??_main^(0+128)+2)
  1698  0186  3026               	movlw	38
  1699  0187  00C4               	movwf	(??_main^(0+128)+1)
  1700  0188  305D               	movlw	93
  1701  0189  00C3               	movwf	??_main^(0+128)
  1702  018A                     u6077:	
  1703  018A  0BC3               	decfsz	??_main^(0+128),f
  1704  018B  298A               	goto	u6077
  1705  018C  0BC4               	decfsz	(??_main^(0+128)+1),f
  1706  018D  298A               	goto	u6077
  1707  018E  0BC5               	decfsz	(??_main^(0+128)+2),f
  1708  018F  298A               	goto	u6077
  1709  0190  282C               	goto	l3778
  1710  0191  120A  118A  2800   	ljmp	start
  1711  0194                     __end_of_main:	
  1712                           
  1713                           	psect	text1
  1714  0194                     __ptext1:	
  1715 ;; *************** function _sprintf *****************
  1716 ;; Defined at:
  1717 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  sp              1    wreg     PTR unsigned char 
  1720 ;;		 -> main@s2(7), main@s1(7), 
  1721 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1722 ;;		 -> STR_5(5), STR_4(5), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1725 ;;		 -> main@s2(7), main@s1(7), 
  1726 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1727 ;;  tmpval          4   23[BANK1 ] struct .
  1728 ;;  val             4   17[BANK1 ] unsigned long 
  1729 ;;  prec            2   28[BANK1 ] int 
  1730 ;;  eexp            2   21[BANK1 ] int 
  1731 ;;  flag            2   15[BANK1 ] unsigned short 
  1732 ;;  cp              2    0        PTR const unsigned char 
  1733 ;;  len             2    0        unsigned int 
  1734 ;;  width           2    0        int 
  1735 ;;  c               1   34[BANK1 ] unsigned char 
  1736 ;;  ap              1   14[BANK1 ] PTR void [1]
  1737 ;;		 -> ?_sprintf(2), 
  1738 ;;  d               1    0        unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2    0[BANK1 ] int 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         0       0       5       0       0
  1749 ;;      Locals:         0       0      25       0       0
  1750 ;;      Temps:          0       0       5       0       0
  1751 ;;      Totals:         0       0      35       0       0
  1752 ;;Total ram usage:       35 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		___awdiv
  1757 ;;		___fladd
  1758 ;;		___fleq
  1759 ;;		___flge
  1760 ;;		___flmul
  1761 ;;		___flneg
  1762 ;;		___flsub
  1763 ;;		___fltol
  1764 ;;		___lldiv
  1765 ;;		___llmod
  1766 ;;		___wmul
  1767 ;;		___xxtofl
  1768 ;;		__div_to_l_
  1769 ;;		__tdiv_to_l_
  1770 ;;		_fround
  1771 ;;		_isdigit
  1772 ;;		_scale
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function _sprintf
  1780  0194                     _sprintf:	
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1784                           ;sprintf@sp stored from wreg
  1785  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1786  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1787  0196  00BB               	movwf	sprintf@sp^(0+128)
  1788  0197                     l3418:	
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1791  0197  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1792  0198  00A5               	movwf	??_sprintf^(0+128)
  1793  0199  0825               	movf	??_sprintf^(0+128),w
  1794  019A  00AE               	movwf	sprintf@ap^(0+128)
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1797  019B  2FD5               	goto	l3612
  1798  019C                     l3420:	
  1799                           
  1800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1801  019C  3025               	movlw	37
  1802  019D  0642               	xorwf	sprintf@c^(0+128),w
  1803  019E  1903               	btfsc	3,2
  1804  019F  29A1               	goto	u5391
  1805  01A0  29A2               	goto	u5390
  1806  01A1                     u5391:	
  1807  01A1  29AE               	goto	l3426
  1808  01A2                     u5390:	
  1809  01A2                     l3422:	
  1810                           
  1811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1812  01A2  0842               	movf	sprintf@c^(0+128),w
  1813  01A3  00A5               	movwf	??_sprintf^(0+128)
  1814  01A4  083B               	movf	sprintf@sp^(0+128),w
  1815  01A5  0084               	movwf	4
  1816  01A6  0825               	movf	??_sprintf^(0+128),w
  1817  01A7  1383               	bcf	3,7	;select IRP bank0
  1818  01A8  0080               	movwf	0
  1819  01A9                     l3424:	
  1820  01A9  3001               	movlw	1
  1821  01AA  00A5               	movwf	??_sprintf^(0+128)
  1822  01AB  0825               	movf	??_sprintf^(0+128),w
  1823  01AC  07BB               	addwf	sprintf@sp^(0+128),f
  1824                           
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1826  01AD  2FD5               	goto	l3612
  1827  01AE                     l3426:	
  1828                           
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1830  01AE  01AF               	clrf	sprintf@flag^(0+128)
  1831  01AF  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1832  01B0                     l3428:	
  1833                           
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1835  01B0  0820               	movf	sprintf@f^(0+128),w
  1836  01B1  0084               	movwf	4
  1837  01B2  160A  158A  200A  120A  118A  	fcall	stringdir
  1838  01B7  3A2E               	xorlw	46
  1839  01B8  1D03               	skipz
  1840  01B9  29BB               	goto	u5401
  1841  01BA  29BC               	goto	u5400
  1842  01BB                     u5401:	
  1843  01BB  2A01               	goto	l3444
  1844  01BC                     u5400:	
  1845  01BC                     l3430:	
  1846                           
  1847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1848  01BC  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1849  01BD                     l3432:	
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1852  01BD  3001               	movlw	1
  1853  01BE  00A5               	movwf	??_sprintf^(0+128)
  1854  01BF  0825               	movf	??_sprintf^(0+128),w
  1855  01C0  07A0               	addwf	sprintf@f^(0+128),f
  1856  01C1                     l3434:	
  1857                           
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1859  01C1  01BC               	clrf	sprintf@prec^(0+128)
  1860  01C2  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1861                           
  1862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1863  01C3  29F0               	goto	l3442
  1864  01C4                     l3436:	
  1865                           
  1866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1867  01C4  300A               	movlw	10
  1868  01C5  00F0               	movwf	___wmul@multiplier
  1869  01C6  3000               	movlw	0
  1870  01C7  00F1               	movwf	___wmul@multiplier+1
  1871  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1872  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1873  01CA  083D               	movf	(sprintf@prec+1)^(0+128),w
  1874  01CB  00F3               	movwf	___wmul@multiplicand+1
  1875  01CC  083C               	movf	sprintf@prec^(0+128),w
  1876  01CD  00F2               	movwf	___wmul@multiplicand
  1877  01CE  160A  158A  22F5  120A  118A  	fcall	___wmul
  1878  01D3  0871               	movf	?___wmul+1,w
  1879  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  1880  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  1881  01D6  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1882  01D7  0870               	movf	?___wmul,w
  1883  01D8  00BC               	movwf	sprintf@prec^(0+128)
  1884  01D9                     l3438:	
  1885                           
  1886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1887  01D9  0820               	movf	sprintf@f^(0+128),w
  1888  01DA  0084               	movwf	4
  1889  01DB  160A  158A  200A  120A  118A  	fcall	stringdir
  1890  01E0  3ED0               	addlw	208
  1891  01E1  00A5               	movwf	??_sprintf^(0+128)
  1892  01E2  30FF               	movlw	255
  1893  01E3  1803               	skipnc
  1894  01E4  3000               	movlw	0
  1895  01E5  00A6               	movwf	(??_sprintf^(0+128)+1)
  1896  01E6  0825               	movf	??_sprintf^(0+128),w
  1897  01E7  07BC               	addwf	sprintf@prec^(0+128),f
  1898  01E8  1803               	skipnc
  1899  01E9  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1900  01EA  0826               	movf	(??_sprintf+1)^(0+128),w
  1901  01EB  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1902  01EC                     l3440:	
  1903  01EC  3001               	movlw	1
  1904  01ED  00A5               	movwf	??_sprintf^(0+128)
  1905  01EE  0825               	movf	??_sprintf^(0+128),w
  1906  01EF  07A0               	addwf	sprintf@f^(0+128),f
  1907  01F0                     l3442:	
  1908                           
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1910  01F0  0820               	movf	sprintf@f^(0+128),w
  1911  01F1  0084               	movwf	4
  1912  01F2  160A  158A  200A  120A  118A  	fcall	stringdir
  1913  01F7  160A  158A  2283  120A  118A  	fcall	_isdigit
  1914  01FC  1803               	btfsc	3,0
  1915  01FD  29FF               	goto	u5411
  1916  01FE  2A00               	goto	u5410
  1917  01FF                     u5411:	
  1918  01FF  29C4               	goto	l3436
  1919  0200                     u5410:	
  1920  0200  2A07               	goto	l3450
  1921  0201                     l3444:	
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1924  0201  01BC               	clrf	sprintf@prec^(0+128)
  1925  0202  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1926  0203                     l3446:	
  1927                           
  1928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1929  0203  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1930  0204  2A07               	goto	l3450
  1931  0205                     l308:	
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1933                           
  1934                           
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1936  0205  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1937                           
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1939  0206  2A23               	goto	l3452
  1940  0207                     l3450:	
  1941  0207  3001               	movlw	1
  1942  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0209  1303               	bcf	3,6	;RP1=0, select bank1
  1944  020A  07A0               	addwf	sprintf@f^(0+128),f
  1945  020B  30FF               	movlw	-1
  1946  020C  0720               	addwf	sprintf@f^(0+128),w
  1947  020D  0084               	movwf	4
  1948  020E  160A  158A  200A  120A  118A  	fcall	stringdir
  1949  0213  00C2               	movwf	sprintf@c^(0+128)
  1950  0214  00A5               	movwf	??_sprintf^(0+128)
  1951  0215  01A6               	clrf	(??_sprintf^(0+128)+1)
  1952                           
  1953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 1, Range of values is 0 to 0
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte            4     3 (average)
  1959                           ; direct_byte           11     8 (fixed)
  1960                           ; jumptable            260     6 (fixed)
  1961                           ;	Chosen strategy is simple_byte
  1962  0216  0826               	movf	(??_sprintf+1)^(0+128),w
  1963  0217  3A00               	xorlw	0	; case 0
  1964  0218  1903               	skipnz
  1965  0219  2A1B               	goto	l3900
  1966  021A  2FD5               	goto	l3612
  1967  021B                     l3900:	
  1968                           
  1969                           ; Switch size 1, requested type "simple"
  1970                           ; Number of cases is 2, Range of values is 0 to 102
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte            7     4 (average)
  1974                           ; jumptable            260     6 (fixed)
  1975                           ;	Chosen strategy is simple_byte
  1976  021B  0825               	movf	??_sprintf^(0+128),w
  1977  021C  3A00               	xorlw	0	; case 0
  1978  021D  1903               	skipnz
  1979  021E  2FE7               	goto	l3614
  1980  021F  3A66               	xorlw	102	; case 102
  1981  0220  1903               	skipnz
  1982  0221  2A05               	goto	l308
  1983  0222  2FD5               	goto	l3612
  1984  0223                     l3452:	
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1987  0223  3000               	movlw	0
  1988  0224  052F               	andwf	sprintf@flag^(0+128),w
  1989  0225  00A5               	movwf	??_sprintf^(0+128)
  1990  0226  3007               	movlw	7
  1991  0227  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1992  0228  00A6               	movwf	(??_sprintf+1)^(0+128)
  1993  0229  0825               	movf	??_sprintf^(0+128),w
  1994  022A  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1995  022B  1903               	btfsc	3,2
  1996  022C  2A2E               	goto	u5421
  1997  022D  2A2F               	goto	u5420
  1998  022E                     u5421:	
  1999  022E  2F90               	goto	l3594
  2000  022F                     u5420:	
  2001  022F                     l3454:	
  2002                           
  2003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2004  022F  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2005  0230  2A32               	goto	u5431
  2006  0231  2A33               	goto	u5430
  2007  0232                     u5431:	
  2008  0232  2A37               	goto	l3458
  2009  0233                     u5430:	
  2010  0233                     l3456:	
  2011                           
  2012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2013  0233  3006               	movlw	6
  2014  0234  00BC               	movwf	sprintf@prec^(0+128)
  2015  0235  3000               	movlw	0
  2016  0236  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2017  0237                     l3458:	
  2018                           
  2019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2020  0237  082E               	movf	sprintf@ap^(0+128),w
  2021  0238  0084               	movwf	4
  2022  0239  1383               	bcf	3,7	;select IRP bank0
  2023  023A  0800               	movf	0,w
  2024  023B  00BE               	movwf	sprintf@fval^(0+128)
  2025  023C  0A84               	incf	4,f
  2026  023D  0800               	movf	0,w
  2027  023E  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2028  023F  0A84               	incf	4,f
  2029  0240  0800               	movf	0,w
  2030  0241  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2031  0242  0A84               	incf	4,f
  2032  0243  0800               	movf	0,w
  2033  0244  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2034  0245                     l3460:	
  2035  0245  3004               	movlw	4
  2036  0246  00A5               	movwf	??_sprintf^(0+128)
  2037  0247  0825               	movf	??_sprintf^(0+128),w
  2038  0248  07AE               	addwf	sprintf@ap^(0+128),f
  2039  0249                     l3462:	
  2040                           
  2041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2042  0249  0841               	movf	(sprintf@fval+3)^(0+128),w
  2043  024A  00F3               	movwf	___flge@ff1+3
  2044  024B  0840               	movf	(sprintf@fval+2)^(0+128),w
  2045  024C  00F2               	movwf	___flge@ff1+2
  2046  024D  083F               	movf	(sprintf@fval+1)^(0+128),w
  2047  024E  00F1               	movwf	___flge@ff1+1
  2048  024F  083E               	movf	sprintf@fval^(0+128),w
  2049  0250  00F0               	movwf	___flge@ff1
  2050  0251  3000               	movlw	0
  2051  0252  00F7               	movwf	___flge@ff2+3
  2052  0253  3000               	movlw	0
  2053  0254  00F6               	movwf	___flge@ff2+2
  2054  0255  3000               	movlw	0
  2055  0256  00F5               	movwf	___flge@ff2+1
  2056  0257  3000               	movlw	0
  2057  0258  00F4               	movwf	___flge@ff2
  2058  0259  160A  158A  26A4  120A  118A  	fcall	___flge
  2059  025E  1803               	btfsc	3,0
  2060  025F  2A61               	goto	u5441
  2061  0260  2A62               	goto	u5440
  2062  0261                     u5441:	
  2063  0261  2A7F               	goto	l3468
  2064  0262                     u5440:	
  2065  0262                     l3464:	
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2068  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2069  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2070  0264  0841               	movf	(sprintf@fval+3)^(0+128),w
  2071  0265  00F3               	movwf	___flneg@f1+3
  2072  0266  0840               	movf	(sprintf@fval+2)^(0+128),w
  2073  0267  00F2               	movwf	___flneg@f1+2
  2074  0268  083F               	movf	(sprintf@fval+1)^(0+128),w
  2075  0269  00F1               	movwf	___flneg@f1+1
  2076  026A  083E               	movf	sprintf@fval^(0+128),w
  2077  026B  00F0               	movwf	___flneg@f1
  2078  026C  120A  118A  2005  120A  118A  	fcall	___flneg
  2079  0271  0873               	movf	?___flneg+3,w
  2080  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0273  1303               	bcf	3,6	;RP1=0, select bank1
  2082  0274  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2083  0275  0872               	movf	?___flneg+2,w
  2084  0276  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2085  0277  0871               	movf	?___flneg+1,w
  2086  0278  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2087  0279  0870               	movf	?___flneg,w
  2088  027A  00BE               	movwf	sprintf@fval^(0+128)
  2089  027B                     l3466:	
  2090                           
  2091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2092  027B  3003               	movlw	3
  2093  027C  04AF               	iorwf	sprintf@flag^(0+128),f
  2094  027D  3000               	movlw	0
  2095  027E  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2096  027F                     l3468:	
  2097                           
  2098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2099  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0281  01B5               	clrf	sprintf@eexp^(0+128)
  2102  0282  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2103  0283                     l3470:	
  2104                           
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2106  0283  0841               	movf	(sprintf@fval+3)^(0+128),w
  2107  0284  00F3               	movwf	___fleq@ff1+3
  2108  0285  0840               	movf	(sprintf@fval+2)^(0+128),w
  2109  0286  00F2               	movwf	___fleq@ff1+2
  2110  0287  083F               	movf	(sprintf@fval+1)^(0+128),w
  2111  0288  00F1               	movwf	___fleq@ff1+1
  2112  0289  083E               	movf	sprintf@fval^(0+128),w
  2113  028A  00F0               	movwf	___fleq@ff1
  2114  028B  3000               	movlw	0
  2115  028C  00F7               	movwf	___fleq@ff2+3
  2116  028D  3000               	movlw	0
  2117  028E  00F6               	movwf	___fleq@ff2+2
  2118  028F  3000               	movlw	0
  2119  0290  00F5               	movwf	___fleq@ff2+1
  2120  0291  3000               	movlw	0
  2121  0292  00F4               	movwf	___fleq@ff2
  2122  0293  160A  158A  245E  120A  118A  	fcall	___fleq
  2123  0298  1803               	btfsc	3,0
  2124  0299  2A9B               	goto	u5451
  2125  029A  2A9C               	goto	u5450
  2126  029B                     u5451:	
  2127  029B  2B8C               	goto	l3496
  2128  029C                     u5450:	
  2129  029C                     l3472:	
  2130                           
  2131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2132  029C  1003               	clrc
  2133  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2134  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2135  029F  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2136  02A0  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2137  02A1  3E82               	addlw	130
  2138  02A2  00B5               	movwf	sprintf@eexp^(0+128)
  2139  02A3  30FF               	movlw	255
  2140  02A4  1803               	skipnc
  2141  02A5  3000               	movlw	0
  2142  02A6  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2143  02A7                     l3474:	
  2144                           
  2145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2146  02A7  30FF               	movlw	255
  2147  02A8  07B5               	addwf	sprintf@eexp^(0+128),f
  2148  02A9  1803               	skipnc
  2149  02AA  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2150  02AB  30FF               	movlw	255
  2151  02AC  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2152  02AD                     l3476:	
  2153                           
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2155  02AD  3003               	movlw	3
  2156  02AE  00F0               	movwf	___wmul@multiplier
  2157  02AF  3000               	movlw	0
  2158  02B0  00F1               	movwf	___wmul@multiplier+1
  2159  02B1  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2160  02B2  00F3               	movwf	___wmul@multiplicand+1
  2161  02B3  0835               	movf	sprintf@eexp^(0+128),w
  2162  02B4  00F2               	movwf	___wmul@multiplicand
  2163  02B5  160A  158A  22F5  120A  118A  	fcall	___wmul
  2164  02BA  0871               	movf	?___wmul+1,w
  2165  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2166  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2167  02BD  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2168  02BE  0870               	movf	?___wmul,w
  2169  02BF  00B5               	movwf	sprintf@eexp^(0+128)
  2170  02C0                     l3478:	
  2171                           
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2173  02C0  300A               	movlw	10
  2174  02C1  00F7               	movwf	___awdiv@divisor
  2175  02C2  3000               	movlw	0
  2176  02C3  00F8               	movwf	___awdiv@divisor+1
  2177  02C4  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2178  02C5  00FA               	movwf	___awdiv@dividend+1
  2179  02C6  0835               	movf	sprintf@eexp^(0+128),w
  2180  02C7  00F9               	movwf	___awdiv@dividend
  2181  02C8  160A  158A  25BF  120A  118A  	fcall	___awdiv
  2182  02CD  0878               	movf	?___awdiv+1,w
  2183  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2184  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2185  02D0  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2186  02D1  0877               	movf	?___awdiv,w
  2187  02D2  00B5               	movwf	sprintf@eexp^(0+128)
  2188  02D3                     l3480:	
  2189                           
  2190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2191  02D3  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2192  02D4  2AD6               	goto	u5461
  2193  02D5  2AD7               	goto	u5460
  2194  02D6                     u5461:	
  2195  02D6  2ADD               	goto	l3484
  2196  02D7                     u5460:	
  2197  02D7                     l3482:	
  2198                           
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2200  02D7  30FF               	movlw	255
  2201  02D8  07B5               	addwf	sprintf@eexp^(0+128),f
  2202  02D9  1803               	skipnc
  2203  02DA  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2204  02DB  30FF               	movlw	255
  2205  02DC  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2206  02DD                     l3484:	
  2207                           
  2208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2209  02DD  0335               	decf	sprintf@eexp^(0+128),w
  2210  02DE  3AFF               	xorlw	255
  2211  02DF  120A  158A  2140  120A  118A  	fcall	_scale
  2212  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2213  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2214  02E6  0841               	movf	?_scale+3,w
  2215  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2216  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2217  02E9  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2218  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2220  02EC  0840               	movf	?_scale+2,w
  2221  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2222  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2223  02EF  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2224  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2225  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2226  02F2  083F               	movf	?_scale+1,w
  2227  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2228  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2229  02F5  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2230  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2231  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2232  02F8  083E               	movf	?_scale,w
  2233  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2234  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2235  02FB  00B7               	movwf	sprintf@tmpval^(0+128)
  2236  02FC                     l3486:	
  2237                           
  2238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2239  02FC  0841               	movf	(sprintf@fval+3)^(0+128),w
  2240  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2241  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2242  02FF  00A7               	movwf	___flmul@b+3
  2243  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0302  0840               	movf	(sprintf@fval+2)^(0+128),w
  2246  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0305  00A6               	movwf	___flmul@b+2
  2249  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0308  083F               	movf	(sprintf@fval+1)^(0+128),w
  2252  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2253  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2254  030B  00A5               	movwf	___flmul@b+1
  2255  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2256  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2257  030E  083E               	movf	sprintf@fval^(0+128),w
  2258  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0311  00A4               	movwf	___flmul@b
  2261  0312  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0313  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0314  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2264  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0317  00AB               	movwf	___flmul@a+3
  2267  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2268  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2269  031A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2270  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2271  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2272  031D  00AA               	movwf	___flmul@a+2
  2273  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2274  031F  1303               	bcf	3,6	;RP1=0, select bank1
  2275  0320  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2276  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0323  00A9               	movwf	___flmul@a+1
  2279  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2280  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2281  0326  0837               	movf	sprintf@tmpval^(0+128),w
  2282  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0329  00A8               	movwf	___flmul@a
  2285  032A  120A  158A  249F  120A  118A  	fcall	___flmul
  2286  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0331  0827               	movf	?___flmul+3,w
  2289  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0334  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2292  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0337  0826               	movf	?___flmul+2,w
  2295  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2297  033A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2298  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2299  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2300  033D  0825               	movf	?___flmul+1,w
  2301  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2302  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0340  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2304  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0343  0824               	movf	?___flmul,w
  2307  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2308  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2309  0346  00B7               	movwf	sprintf@tmpval^(0+128)
  2310  0347                     l3488:	
  2311                           
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2313  0347  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2314  0348  00F3               	movwf	___flge@ff1+3
  2315  0349  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2316  034A  00F2               	movwf	___flge@ff1+2
  2317  034B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2318  034C  00F1               	movwf	___flge@ff1+1
  2319  034D  0837               	movf	sprintf@tmpval^(0+128),w
  2320  034E  00F0               	movwf	___flge@ff1
  2321  034F  303F               	movlw	63
  2322  0350  00F7               	movwf	___flge@ff2+3
  2323  0351  3080               	movlw	128
  2324  0352  00F6               	movwf	___flge@ff2+2
  2325  0353  3000               	movlw	0
  2326  0354  00F5               	movwf	___flge@ff2+1
  2327  0355  3000               	movlw	0
  2328  0356  00F4               	movwf	___flge@ff2
  2329  0357  160A  158A  26A4  120A  118A  	fcall	___flge
  2330  035C  1803               	btfsc	3,0
  2331  035D  2B5F               	goto	u5471
  2332  035E  2B60               	goto	u5470
  2333  035F                     u5471:	
  2334  035F  2B69               	goto	l3492
  2335  0360                     u5470:	
  2336  0360                     l3490:	
  2337                           
  2338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2339  0360  30FF               	movlw	255
  2340  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0363  07B5               	addwf	sprintf@eexp^(0+128),f
  2343  0364  1803               	skipnc
  2344  0365  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2345  0366  30FF               	movlw	255
  2346  0367  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2347  0368  2B8C               	goto	l3496
  2348  0369                     l3492:	
  2349  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2350  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2351  036B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2352  036C  00F3               	movwf	___flge@ff1+3
  2353  036D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2354  036E  00F2               	movwf	___flge@ff1+2
  2355  036F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2356  0370  00F1               	movwf	___flge@ff1+1
  2357  0371  0837               	movf	sprintf@tmpval^(0+128),w
  2358  0372  00F0               	movwf	___flge@ff1
  2359  0373  3041               	movlw	65
  2360  0374  00F7               	movwf	___flge@ff2+3
  2361  0375  3020               	movlw	32
  2362  0376  00F6               	movwf	___flge@ff2+2
  2363  0377  3000               	movlw	0
  2364  0378  00F5               	movwf	___flge@ff2+1
  2365  0379  3000               	movlw	0
  2366  037A  00F4               	movwf	___flge@ff2
  2367  037B  160A  158A  26A4  120A  118A  	fcall	___flge
  2368  0380  1C03               	btfss	3,0
  2369  0381  2B83               	goto	u5481
  2370  0382  2B84               	goto	u5480
  2371  0383                     u5481:	
  2372  0383  2B8C               	goto	l3496
  2373  0384                     u5480:	
  2374  0384                     l3494:	
  2375                           
  2376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2377  0384  3001               	movlw	1
  2378  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0387  07B5               	addwf	sprintf@eexp^(0+128),f
  2381  0388  1803               	skipnc
  2382  0389  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2383  038A  3000               	movlw	0
  2384  038B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2385  038C                     l3496:	
  2386                           
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2388  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2389  038D  1303               	bcf	3,6	;RP1=0, select bank1
  2390  038E  083D               	movf	(sprintf@prec+1)^(0+128),w
  2391  038F  3A80               	xorlw	128
  2392  0390  00FF               	movwf	btemp+1
  2393  0391  3080               	movlw	128
  2394  0392  027F               	subwf	btemp+1,w
  2395  0393  1D03               	skipz
  2396  0394  2B97               	goto	u5495
  2397  0395  300D               	movlw	13
  2398  0396  023C               	subwf	sprintf@prec^(0+128),w
  2399  0397                     u5495:	
  2400  0397  1803               	skipnc
  2401  0398  2B9A               	goto	u5491
  2402  0399  2B9B               	goto	u5490
  2403  039A                     u5491:	
  2404  039A  2BE2               	goto	l3500
  2405  039B                     u5490:	
  2406  039B                     l3498:	
  2407                           
  2408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2409  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2410  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2411  039D  083C               	movf	sprintf@prec^(0+128),w
  2412  039E  160A  118A  236D  120A  118A  	fcall	_fround
  2413  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2414  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2415  03A5  0841               	movf	?_fround+3,w
  2416  03A6  00D5               	movwf	___fladd@b+3
  2417  03A7  0840               	movf	?_fround+2,w
  2418  03A8  00D4               	movwf	___fladd@b+2
  2419  03A9  083F               	movf	?_fround+1,w
  2420  03AA  00D3               	movwf	___fladd@b+1
  2421  03AB  083E               	movf	?_fround,w
  2422  03AC  00D2               	movwf	___fladd@b
  2423  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2424  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2425  03AF  0841               	movf	(sprintf@fval+3)^(0+128),w
  2426  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2427  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2428  03B2  00D9               	movwf	___fladd@a+3
  2429  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2430  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2431  03B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  2432  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2433  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2434  03B8  00D8               	movwf	___fladd@a+2
  2435  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2436  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2437  03BB  083F               	movf	(sprintf@fval+1)^(0+128),w
  2438  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2439  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2440  03BE  00D7               	movwf	___fladd@a+1
  2441  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2442  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2443  03C1  083E               	movf	sprintf@fval^(0+128),w
  2444  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2445  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2446  03C4  00D6               	movwf	___fladd@a
  2447  03C5  160A  118A  2578  120A  118A  	fcall	___fladd
  2448  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2449  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2450  03CC  0855               	movf	?___fladd+3,w
  2451  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2452  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2453  03CF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2454  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2455  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2456  03D2  0854               	movf	?___fladd+2,w
  2457  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2458  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2459  03D5  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2460  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03D8  0853               	movf	?___fladd+1,w
  2463  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  2464  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  2465  03DB  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2466  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2467  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2468  03DE  0852               	movf	?___fladd,w
  2469  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2470  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2471  03E1  00BE               	movwf	sprintf@fval^(0+128)
  2472  03E2                     l3500:	
  2473                           
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2475  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2476  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2477  03E4  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2478  03E5  3A80               	xorlw	128
  2479  03E6  00FF               	movwf	btemp+1
  2480  03E7  3080               	movlw	128
  2481  03E8  027F               	subwf	btemp+1,w
  2482  03E9  1D03               	skipz
  2483  03EA  2BED               	goto	u5505
  2484  03EB  300A               	movlw	10
  2485  03EC  0235               	subwf	sprintf@eexp^(0+128),w
  2486  03ED                     u5505:	
  2487  03ED  1803               	skipnc
  2488  03EE  2BF0               	goto	u5501
  2489  03EF  2BF1               	goto	u5500
  2490  03F0                     u5501:	
  2491  03F0  2C42               	goto	l3508
  2492  03F1                     u5500:	
  2493  03F1                     l3502:	
  2494  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2495  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2496  03F3  0841               	movf	(sprintf@fval+3)^(0+128),w
  2497  03F4  00F3               	movwf	___fleq@ff1+3
  2498  03F5  0840               	movf	(sprintf@fval+2)^(0+128),w
  2499  03F6  00F2               	movwf	___fleq@ff1+2
  2500  03F7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2501  03F8  00F1               	movwf	___fleq@ff1+1
  2502  03F9  083E               	movf	sprintf@fval^(0+128),w
  2503  03FA  00F0               	movwf	___fleq@ff1
  2504  03FB  3000               	movlw	0
  2505  03FC  00F7               	movwf	___fleq@ff2+3
  2506  03FD  3000               	movlw	0
  2507  03FE  00F6               	movwf	___fleq@ff2+2
  2508  03FF  3000               	movlw	0
  2509  0400  00F5               	movwf	___fleq@ff2+1
  2510  0401  3000               	movlw	0
  2511  0402  00F4               	movwf	___fleq@ff2
  2512  0403  160A  158A  245E  120A  118A  	fcall	___fleq
  2513  0408  1803               	btfsc	3,0
  2514  0409  2C0B               	goto	u5511
  2515  040A  2C0C               	goto	u5510
  2516  040B                     u5511:	
  2517  040B  2CB4               	goto	l3522
  2518  040C                     u5510:	
  2519  040C                     l3504:	
  2520  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2521  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2522  040E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2523  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0411  00D4               	movwf	___fltol@f1+3
  2526  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0414  0840               	movf	(sprintf@fval+2)^(0+128),w
  2529  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0417  00D3               	movwf	___fltol@f1+2
  2532  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2534  041A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2535  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2536  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2537  041D  00D2               	movwf	___fltol@f1+1
  2538  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2539  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0420  083E               	movf	sprintf@fval^(0+128),w
  2541  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0423  00D1               	movwf	___fltol@f1
  2544  0424  160A  158A  2628  120A  118A  	fcall	___fltol
  2545  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2546  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2547  042B  0854               	movf	?___fltol+3,w
  2548  042C  0453               	iorwf	?___fltol+2,w
  2549  042D  0452               	iorwf	?___fltol+1,w
  2550  042E  0451               	iorwf	?___fltol,w
  2551  042F  1D03               	skipz
  2552  0430  2C32               	goto	u5521
  2553  0431  2C33               	goto	u5520
  2554  0432                     u5521:	
  2555  0432  2CB4               	goto	l3522
  2556  0433                     u5520:	
  2557  0433                     l3506:	
  2558  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0435  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2561  0436  3A80               	xorlw	128
  2562  0437  00FF               	movwf	btemp+1
  2563  0438  3080               	movlw	128
  2564  0439  027F               	subwf	btemp+1,w
  2565  043A  1D03               	skipz
  2566  043B  2C3E               	goto	u5535
  2567  043C  3002               	movlw	2
  2568  043D  0235               	subwf	sprintf@eexp^(0+128),w
  2569  043E                     u5535:	
  2570  043E  1C03               	skipc
  2571  043F  2C41               	goto	u5531
  2572  0440  2C42               	goto	u5530
  2573  0441                     u5531:	
  2574  0441  2CB4               	goto	l3522
  2575  0442                     u5530:	
  2576  0442                     l3508:	
  2577                           
  2578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2579  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2580  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2581  0444  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2582  0445  00F3               	movwf	___flge@ff1+3
  2583  0446  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2584  0447  00F2               	movwf	___flge@ff1+2
  2585  0448  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2586  0449  00F1               	movwf	___flge@ff1+1
  2587  044A  0837               	movf	sprintf@tmpval^(0+128),w
  2588  044B  00F0               	movwf	___flge@ff1
  2589  044C  3040               	movlw	64
  2590  044D  00F7               	movwf	___flge@ff2+3
  2591  044E  3089               	movlw	137
  2592  044F  00F6               	movwf	___flge@ff2+2
  2593  0450  3070               	movlw	112
  2594  0451  00F5               	movwf	___flge@ff2+1
  2595  0452  305F               	movlw	95
  2596  0453  00F4               	movwf	___flge@ff2
  2597  0454  160A  158A  26A4  120A  118A  	fcall	___flge
  2598  0459  1803               	btfsc	3,0
  2599  045A  2C5C               	goto	u5541
  2600  045B  2C5D               	goto	u5540
  2601  045C                     u5541:	
  2602  045C  2C66               	goto	l3512
  2603  045D                     u5540:	
  2604  045D                     l3510:	
  2605                           
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2607  045D  30F7               	movlw	247
  2608  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2609  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2610  0460  07B5               	addwf	sprintf@eexp^(0+128),f
  2611  0461  1803               	skipnc
  2612  0462  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2613  0463  30FF               	movlw	255
  2614  0464  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2615                           
  2616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2617  0465  2C6E               	goto	l3514
  2618  0466                     l3512:	
  2619                           
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2621  0466  30F8               	movlw	248
  2622  0467  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0468  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0469  07B5               	addwf	sprintf@eexp^(0+128),f
  2625  046A  1803               	skipnc
  2626  046B  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2627  046C  30FF               	movlw	255
  2628  046D  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2629  046E                     l3514:	
  2630                           
  2631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2632  046E  0835               	movf	sprintf@eexp^(0+128),w
  2633  046F  120A  158A  2140  120A  118A  	fcall	_scale
  2634  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0476  0841               	movf	?_scale+3,w
  2637  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2638  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2639  0479  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2640  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2641  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2642  047C  0840               	movf	?_scale+2,w
  2643  047D  1683               	bsf	3,5	;RP0=1, select bank1
  2644  047E  1303               	bcf	3,6	;RP1=0, select bank1
  2645  047F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2646  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0482  083F               	movf	?_scale+1,w
  2649  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0484  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0485  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2652  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0488  083E               	movf	?_scale,w
  2655  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2656  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2657  048B  00B7               	movwf	sprintf@tmpval^(0+128)
  2658  048C                     l3516:	
  2659  048C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2660  048D  00F3               	movwf	__div_to_l_@f1+3
  2661  048E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2662  048F  00F2               	movwf	__div_to_l_@f1+2
  2663  0490  083F               	movf	(sprintf@fval+1)^(0+128),w
  2664  0491  00F1               	movwf	__div_to_l_@f1+1
  2665  0492  083E               	movf	sprintf@fval^(0+128),w
  2666  0493  00F0               	movwf	__div_to_l_@f1
  2667  0494  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2668  0495  00F7               	movwf	__div_to_l_@f2+3
  2669  0496  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2670  0497  00F6               	movwf	__div_to_l_@f2+2
  2671  0498  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2672  0499  00F5               	movwf	__div_to_l_@f2+1
  2673  049A  0837               	movf	sprintf@tmpval^(0+128),w
  2674  049B  00F4               	movwf	__div_to_l_@f2
  2675  049C  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2676  04A1  0873               	movf	?__div_to_l_+3,w
  2677  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2678  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2679  04A4  00B4               	movwf	(sprintf@val+3)^(0+128)
  2680  04A5  0872               	movf	?__div_to_l_+2,w
  2681  04A6  00B3               	movwf	(sprintf@val+2)^(0+128)
  2682  04A7  0871               	movf	?__div_to_l_+1,w
  2683  04A8  00B2               	movwf	(sprintf@val+1)^(0+128)
  2684  04A9  0870               	movf	?__div_to_l_,w
  2685  04AA  00B1               	movwf	sprintf@val^(0+128)
  2686  04AB                     l3520:	
  2687                           
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2689  04AB  3000               	movlw	0
  2690  04AC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2691  04AD  3000               	movlw	0
  2692  04AE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2693  04AF  3000               	movlw	0
  2694  04B0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2695  04B1  3000               	movlw	0
  2696  04B2  00BE               	movwf	sprintf@fval^(0+128)
  2697                           
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2699  04B3  2D38               	goto	l3528
  2700  04B4                     l3522:	
  2701                           
  2702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2703  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2704  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2705  04B6  0841               	movf	(sprintf@fval+3)^(0+128),w
  2706  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2707  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2708  04B9  00D4               	movwf	___fltol@f1+3
  2709  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2710  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2711  04BC  0840               	movf	(sprintf@fval+2)^(0+128),w
  2712  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2713  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2714  04BF  00D3               	movwf	___fltol@f1+2
  2715  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2716  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  2717  04C2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2718  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2719  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2720  04C5  00D2               	movwf	___fltol@f1+1
  2721  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2722  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2723  04C8  083E               	movf	sprintf@fval^(0+128),w
  2724  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2725  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2726  04CB  00D1               	movwf	___fltol@f1
  2727  04CC  160A  158A  2628  120A  118A  	fcall	___fltol
  2728  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2729  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2730  04D3  0854               	movf	?___fltol+3,w
  2731  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2732  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2733  04D6  00B4               	movwf	(sprintf@val+3)^(0+128)
  2734  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2735  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2736  04D9  0853               	movf	?___fltol+2,w
  2737  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2738  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2739  04DC  00B3               	movwf	(sprintf@val+2)^(0+128)
  2740  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2741  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2742  04DF  0852               	movf	?___fltol+1,w
  2743  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2744  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  2745  04E2  00B2               	movwf	(sprintf@val+1)^(0+128)
  2746  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2747  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2748  04E5  0851               	movf	?___fltol,w
  2749  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2750  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  2751  04E8  00B1               	movwf	sprintf@val^(0+128)
  2752  04E9                     l3524:	
  2753                           
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2755  04E9  0834               	movf	(sprintf@val+3)^(0+128),w
  2756  04EA  00F3               	movwf	___xxtofl@val+3
  2757  04EB  0833               	movf	(sprintf@val+2)^(0+128),w
  2758  04EC  00F2               	movwf	___xxtofl@val+2
  2759  04ED  0832               	movf	(sprintf@val+1)^(0+128),w
  2760  04EE  00F1               	movwf	___xxtofl@val+1
  2761  04EF  0831               	movf	sprintf@val^(0+128),w
  2762  04F0  00F0               	movwf	___xxtofl@val
  2763  04F1  3000               	movlw	0
  2764  04F2  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2765  04F7  0873               	movf	?___xxtofl+3,w
  2766  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2767  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2768  04FA  00E9               	movwf	___flsub@a+3
  2769  04FB  0872               	movf	?___xxtofl+2,w
  2770  04FC  00E8               	movwf	___flsub@a+2
  2771  04FD  0871               	movf	?___xxtofl+1,w
  2772  04FE  00E7               	movwf	___flsub@a+1
  2773  04FF  0870               	movf	?___xxtofl,w
  2774  0500  00E6               	movwf	___flsub@a
  2775  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2776  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2777  0503  0841               	movf	(sprintf@fval+3)^(0+128),w
  2778  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0506  00ED               	movwf	___flsub@b+3
  2781  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2782  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2783  0509  0840               	movf	(sprintf@fval+2)^(0+128),w
  2784  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2785  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2786  050C  00EC               	movwf	___flsub@b+2
  2787  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2788  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2789  050F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2790  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0512  00EB               	movwf	___flsub@b+1
  2793  0513  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0514  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0515  083E               	movf	sprintf@fval^(0+128),w
  2796  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0518  00EA               	movwf	___flsub@b
  2799  0519  160A  158A  22D1  120A  118A  	fcall	___flsub
  2800  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2801  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0520  0869               	movf	?___flsub+3,w
  2803  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0523  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2806  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0526  0868               	movf	?___flsub+2,w
  2809  0527  1683               	bsf	3,5	;RP0=1, select bank1
  2810  0528  1303               	bcf	3,6	;RP1=0, select bank1
  2811  0529  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2812  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2813  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2814  052C  0867               	movf	?___flsub+1,w
  2815  052D  1683               	bsf	3,5	;RP0=1, select bank1
  2816  052E  1303               	bcf	3,6	;RP1=0, select bank1
  2817  052F  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2818  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0532  0866               	movf	?___flsub,w
  2821  0533  1683               	bsf	3,5	;RP0=1, select bank1
  2822  0534  1303               	bcf	3,6	;RP1=0, select bank1
  2823  0535  00BE               	movwf	sprintf@fval^(0+128)
  2824  0536                     l3526:	
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2827  0536  01B5               	clrf	sprintf@eexp^(0+128)
  2828  0537  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2829  0538                     l3528:	
  2830                           
  2831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2832  0538  01C2               	clrf	sprintf@c^(0+128)
  2833  0539  0AC2               	incf	sprintf@c^(0+128),f
  2834  053A                     l3534:	
  2835                           
  2836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2837  053A  0842               	movf	sprintf@c^(0+128),w
  2838  053B  00A5               	movwf	??_sprintf^(0+128)
  2839  053C  3001               	movlw	1
  2840  053D                     u5555:	
  2841  053D  1003               	clrc
  2842  053E  0DA5               	rlf	??_sprintf^(0+128),f
  2843  053F  3EFF               	addlw	-1
  2844  0540  1D03               	skipz
  2845  0541  2D3D               	goto	u5555
  2846  0542  1003               	clrc
  2847  0543  0D25               	rlf	??_sprintf^(0+128),w
  2848  0544  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2849  0545  0084               	movwf	4
  2850  0546  160A  158A  200A  120A  118A  	fcall	stringdir
  2851  054B  00A6               	movwf	(??_sprintf+1)^(0+128)
  2852  054C  160A  158A  200A  120A  118A  	fcall	stringdir
  2853  0551  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2854  0552  160A  158A  200A  120A  118A  	fcall	stringdir
  2855  0557  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2856  0558  160A  158A  200A  120A  118A  	fcall	stringdir
  2857  055D  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2858  055E  0829               	movf	(??_sprintf+4)^(0+128),w
  2859  055F  0234               	subwf	(sprintf@val+3)^(0+128),w
  2860  0560  1D03               	skipz
  2861  0561  2D6C               	goto	u5565
  2862  0562  0828               	movf	(??_sprintf+3)^(0+128),w
  2863  0563  0233               	subwf	(sprintf@val+2)^(0+128),w
  2864  0564  1D03               	skipz
  2865  0565  2D6C               	goto	u5565
  2866  0566  0827               	movf	(??_sprintf+2)^(0+128),w
  2867  0567  0232               	subwf	(sprintf@val+1)^(0+128),w
  2868  0568  1D03               	skipz
  2869  0569  2D6C               	goto	u5565
  2870  056A  0826               	movf	(??_sprintf+1)^(0+128),w
  2871  056B  0231               	subwf	sprintf@val^(0+128),w
  2872  056C                     u5565:	
  2873  056C  1803               	skipnc
  2874  056D  2D6F               	goto	u5561
  2875  056E  2D70               	goto	u5560
  2876  056F                     u5561:	
  2877  056F  2D71               	goto	l3538
  2878  0570                     u5560:	
  2879  0570  2D7B               	goto	l3540
  2880  0571                     l3538:	
  2881  0571  3001               	movlw	1
  2882  0572  00A5               	movwf	??_sprintf^(0+128)
  2883  0573  0825               	movf	??_sprintf^(0+128),w
  2884  0574  07C2               	addwf	sprintf@c^(0+128),f
  2885  0575  300A               	movlw	10
  2886  0576  0642               	xorwf	sprintf@c^(0+128),w
  2887  0577  1D03               	btfss	3,2
  2888  0578  2D7A               	goto	u5571
  2889  0579  2D7B               	goto	u5570
  2890  057A                     u5571:	
  2891  057A  2D3A               	goto	l3534
  2892  057B                     u5570:	
  2893  057B                     l3540:	
  2894                           
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2896  057B  3003               	movlw	3
  2897  057C  052F               	andwf	sprintf@flag^(0+128),w
  2898  057D  00A5               	movwf	??_sprintf^(0+128)
  2899  057E  3000               	movlw	0
  2900  057F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2901  0580  00A6               	movwf	(??_sprintf+1)^(0+128)
  2902  0581  0825               	movf	??_sprintf^(0+128),w
  2903  0582  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2904  0583  1903               	btfsc	3,2
  2905  0584  2D86               	goto	u5581
  2906  0585  2D87               	goto	u5580
  2907  0586                     u5581:	
  2908  0586  2DF9               	goto	l334
  2909  0587                     u5580:	
  2910  0587                     l3542:	
  2911                           
  2912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2913  0587  302D               	movlw	45
  2914  0588  00A5               	movwf	??_sprintf^(0+128)
  2915  0589  083B               	movf	sprintf@sp^(0+128),w
  2916  058A  0084               	movwf	4
  2917  058B  0825               	movf	??_sprintf^(0+128),w
  2918  058C  1383               	bcf	3,7	;select IRP bank0
  2919  058D  0080               	movwf	0
  2920  058E                     l3544:	
  2921  058E  3001               	movlw	1
  2922  058F  00A5               	movwf	??_sprintf^(0+128)
  2923  0590  0825               	movf	??_sprintf^(0+128),w
  2924  0591  07BB               	addwf	sprintf@sp^(0+128),f
  2925  0592  2DF9               	goto	l334
  2926  0593                     l3546:	
  2927                           
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2929  0593  0842               	movf	sprintf@c^(0+128),w
  2930  0594  00A5               	movwf	??_sprintf^(0+128)
  2931  0595  3001               	movlw	1
  2932  0596                     u5595:	
  2933  0596  1003               	clrc
  2934  0597  0DA5               	rlf	??_sprintf^(0+128),f
  2935  0598  3EFF               	addlw	-1
  2936  0599  1D03               	skipz
  2937  059A  2D96               	goto	u5595
  2938  059B  1003               	clrc
  2939  059C  0D25               	rlf	??_sprintf^(0+128),w
  2940  059D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2941  059E  0084               	movwf	4
  2942  059F  160A  158A  200A  120A  118A  	fcall	stringdir
  2943  05A4  00F0               	movwf	___lldiv@divisor
  2944  05A5  160A  158A  200A  120A  118A  	fcall	stringdir
  2945  05AA  00F1               	movwf	___lldiv@divisor+1
  2946  05AB  160A  158A  200A  120A  118A  	fcall	stringdir
  2947  05B0  00F2               	movwf	___lldiv@divisor+2
  2948  05B1  160A  158A  200A  120A  118A  	fcall	stringdir
  2949  05B6  00F3               	movwf	___lldiv@divisor+3
  2950  05B7  0834               	movf	(sprintf@val+3)^(0+128),w
  2951  05B8  00F7               	movwf	___lldiv@dividend+3
  2952  05B9  0833               	movf	(sprintf@val+2)^(0+128),w
  2953  05BA  00F6               	movwf	___lldiv@dividend+2
  2954  05BB  0832               	movf	(sprintf@val+1)^(0+128),w
  2955  05BC  00F5               	movwf	___lldiv@dividend+1
  2956  05BD  0831               	movf	sprintf@val^(0+128),w
  2957  05BE  00F4               	movwf	___lldiv@dividend
  2958  05BF  160A  158A  2559  120A  118A  	fcall	___lldiv
  2959  05C4  0873               	movf	?___lldiv+3,w
  2960  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2961  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2962  05C7  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2963  05C8  0872               	movf	?___lldiv+2,w
  2964  05C9  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2965  05CA  0871               	movf	?___lldiv+1,w
  2966  05CB  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2967  05CC  0870               	movf	?___lldiv,w
  2968  05CD  00B7               	movwf	sprintf@tmpval^(0+128)
  2969  05CE                     l3548:	
  2970                           
  2971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2972  05CE  3000               	movlw	0
  2973  05CF  00F3               	movwf	___llmod@divisor+3
  2974  05D0  3000               	movlw	0
  2975  05D1  00F2               	movwf	___llmod@divisor+2
  2976  05D2  3000               	movlw	0
  2977  05D3  00F1               	movwf	___llmod@divisor+1
  2978  05D4  300A               	movlw	10
  2979  05D5  00F0               	movwf	___llmod@divisor
  2980  05D6  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2981  05D7  00F7               	movwf	___llmod@dividend+3
  2982  05D8  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2983  05D9  00F6               	movwf	___llmod@dividend+2
  2984  05DA  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2985  05DB  00F5               	movwf	___llmod@dividend+1
  2986  05DC  0837               	movf	sprintf@tmpval^(0+128),w
  2987  05DD  00F4               	movwf	___llmod@dividend
  2988  05DE  160A  158A  24AC  120A  118A  	fcall	___llmod
  2989  05E3  0873               	movf	?___llmod+3,w
  2990  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2991  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  2992  05E6  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2993  05E7  0872               	movf	?___llmod+2,w
  2994  05E8  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2995  05E9  0871               	movf	?___llmod+1,w
  2996  05EA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2997  05EB  0870               	movf	?___llmod,w
  2998  05EC  00B7               	movwf	sprintf@tmpval^(0+128)
  2999  05ED                     l3550:	
  3000                           
  3001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3002  05ED  0837               	movf	sprintf@tmpval^(0+128),w
  3003  05EE  3E30               	addlw	48
  3004  05EF  00A5               	movwf	??_sprintf^(0+128)
  3005  05F0  083B               	movf	sprintf@sp^(0+128),w
  3006  05F1  0084               	movwf	4
  3007  05F2  0825               	movf	??_sprintf^(0+128),w
  3008  05F3  1383               	bcf	3,7	;select IRP bank0
  3009  05F4  0080               	movwf	0
  3010  05F5  3001               	movlw	1
  3011  05F6  00A5               	movwf	??_sprintf^(0+128)
  3012  05F7  0825               	movf	??_sprintf^(0+128),w
  3013  05F8  07BB               	addwf	sprintf@sp^(0+128),f
  3014  05F9                     l334:	
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3016                           
  3017                           
  3018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3019  05F9  3001               	movlw	1
  3020  05FA  02C2               	subwf	sprintf@c^(0+128),f
  3021  05FB  0A42               	incf	sprintf@c^(0+128),w
  3022  05FC  1D03               	btfss	3,2
  3023  05FD  2DFF               	goto	u5601
  3024  05FE  2E00               	goto	u5600
  3025  05FF                     u5601:	
  3026  05FF  2D93               	goto	l3546
  3027  0600                     u5600:	
  3028  0600  2E14               	goto	l3558
  3029  0601                     l3552:	
  3030                           
  3031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3032  0601  3030               	movlw	48
  3033  0602  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0603  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0604  00A5               	movwf	??_sprintf^(0+128)
  3036  0605  083B               	movf	sprintf@sp^(0+128),w
  3037  0606  0084               	movwf	4
  3038  0607  0825               	movf	??_sprintf^(0+128),w
  3039  0608  1383               	bcf	3,7	;select IRP bank0
  3040  0609  0080               	movwf	0
  3041  060A                     l3554:	
  3042  060A  3001               	movlw	1
  3043  060B  00A5               	movwf	??_sprintf^(0+128)
  3044  060C  0825               	movf	??_sprintf^(0+128),w
  3045  060D  07BB               	addwf	sprintf@sp^(0+128),f
  3046  060E                     l3556:	
  3047                           
  3048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3049  060E  30FF               	movlw	255
  3050  060F  07B5               	addwf	sprintf@eexp^(0+128),f
  3051  0610  1803               	skipnc
  3052  0611  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3053  0612  30FF               	movlw	255
  3054  0613  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3055  0614                     l3558:	
  3056                           
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3058  0614  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3059  0615  3A80               	xorlw	128
  3060  0616  00FF               	movwf	btemp+1
  3061  0617  3080               	movlw	128
  3062  0618  027F               	subwf	btemp+1,w
  3063  0619  1D03               	skipz
  3064  061A  2E1D               	goto	u5615
  3065  061B  3001               	movlw	1
  3066  061C  0235               	subwf	sprintf@eexp^(0+128),w
  3067  061D                     u5615:	
  3068  061D  1803               	skipnc
  3069  061E  2E20               	goto	u5611
  3070  061F  2E21               	goto	u5610
  3071  0620                     u5611:	
  3072  0620  2E01               	goto	l3552
  3073  0621                     u5610:	
  3074  0621                     l3560:	
  3075                           
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3077  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3078  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3079  0623  083D               	movf	(sprintf@prec+1)^(0+128),w
  3080  0624  3A80               	xorlw	128
  3081  0625  00FF               	movwf	btemp+1
  3082  0626  3080               	movlw	128
  3083  0627  027F               	subwf	btemp+1,w
  3084  0628  1D03               	skipz
  3085  0629  2E2C               	goto	u5625
  3086  062A  3009               	movlw	9
  3087  062B  023C               	subwf	sprintf@prec^(0+128),w
  3088  062C                     u5625:	
  3089  062C  1C03               	skipc
  3090  062D  2E2F               	goto	u5621
  3091  062E  2E30               	goto	u5620
  3092  062F                     u5621:	
  3093  062F  2E37               	goto	l3564
  3094  0630                     u5620:	
  3095  0630                     l3562:	
  3096                           
  3097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3098  0630  3008               	movlw	8
  3099  0631  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0632  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0633  00A5               	movwf	??_sprintf^(0+128)
  3102  0634  0825               	movf	??_sprintf^(0+128),w
  3103  0635  00C2               	movwf	sprintf@c^(0+128)
  3104  0636  2E3D               	goto	l341
  3105  0637                     l3564:	
  3106                           
  3107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3108  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0638  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0639  083C               	movf	sprintf@prec^(0+128),w
  3111  063A  00A5               	movwf	??_sprintf^(0+128)
  3112  063B  0825               	movf	??_sprintf^(0+128),w
  3113  063C  00C2               	movwf	sprintf@c^(0+128)
  3114  063D                     l341:	
  3115                           
  3116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3117  063D  0842               	movf	sprintf@c^(0+128),w
  3118  063E  00A5               	movwf	??_sprintf^(0+128)
  3119  063F  01A6               	clrf	(??_sprintf^(0+128)+1)
  3120  0640  0825               	movf	??_sprintf^(0+128),w
  3121  0641  02BC               	subwf	sprintf@prec^(0+128),f
  3122  0642  0826               	movf	(??_sprintf+1)^(0+128),w
  3123  0643  1C03               	skipc
  3124  0644  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3125  0645  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3126  0646                     l3566:	
  3127                           
  3128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3129  0646  0842               	movf	sprintf@c^(0+128),w
  3130  0647  1903               	btfsc	3,2
  3131  0648  2E4A               	goto	u5631
  3132  0649  2E4B               	goto	u5630
  3133  064A                     u5631:	
  3134  064A  2E56               	goto	l3572
  3135  064B                     u5630:	
  3136  064B                     l3568:	
  3137                           
  3138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3139  064B  302E               	movlw	46
  3140  064C  00A5               	movwf	??_sprintf^(0+128)
  3141  064D  083B               	movf	sprintf@sp^(0+128),w
  3142  064E  0084               	movwf	4
  3143  064F  0825               	movf	??_sprintf^(0+128),w
  3144  0650  1383               	bcf	3,7	;select IRP bank0
  3145  0651  0080               	movwf	0
  3146  0652                     l3570:	
  3147  0652  3001               	movlw	1
  3148  0653  00A5               	movwf	??_sprintf^(0+128)
  3149  0654  0825               	movf	??_sprintf^(0+128),w
  3150  0655  07BB               	addwf	sprintf@sp^(0+128),f
  3151  0656                     l3572:	
  3152                           
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3154  0656  0842               	movf	sprintf@c^(0+128),w
  3155  0657  120A  158A  2140  120A  118A  	fcall	_scale
  3156  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3157  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3158  065E  0841               	movf	?_scale+3,w
  3159  065F  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0660  1303               	bcf	3,6	;RP1=0, select bank1
  3161  0661  00AD               	movwf	(_sprintf$1130+3)^(0+128)
  3162  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0664  0840               	movf	?_scale+2,w
  3165  0665  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0666  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0667  00AC               	movwf	(_sprintf$1130+2)^(0+128)
  3168  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3170  066A  083F               	movf	?_scale+1,w
  3171  066B  1683               	bsf	3,5	;RP0=1, select bank1
  3172  066C  1303               	bcf	3,6	;RP1=0, select bank1
  3173  066D  00AB               	movwf	(_sprintf$1130+1)^(0+128)
  3174  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3175  066F  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0670  083E               	movf	?_scale,w
  3177  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0673  00AA               	movwf	_sprintf$1130^(0+128)
  3180  0674                     l3574:	
  3181                           
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3183  0674  082D               	movf	(_sprintf$1130+3)^(0+128),w
  3184  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0677  00AB               	movwf	___flmul@a+3
  3187  0678  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0679  1303               	bcf	3,6	;RP1=0, select bank1
  3189  067A  082C               	movf	(_sprintf$1130+2)^(0+128),w
  3190  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3191  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3192  067D  00AA               	movwf	___flmul@a+2
  3193  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3194  067F  1303               	bcf	3,6	;RP1=0, select bank1
  3195  0680  082B               	movf	(_sprintf$1130+1)^(0+128),w
  3196  0681  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0682  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0683  00A9               	movwf	___flmul@a+1
  3199  0684  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0685  1303               	bcf	3,6	;RP1=0, select bank1
  3201  0686  082A               	movf	_sprintf$1130^(0+128),w
  3202  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0689  00A8               	movwf	___flmul@a
  3205  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3206  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3207  068C  0841               	movf	(sprintf@fval+3)^(0+128),w
  3208  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3209  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3210  068F  00A7               	movwf	___flmul@b+3
  3211  0690  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0691  1303               	bcf	3,6	;RP1=0, select bank1
  3213  0692  0840               	movf	(sprintf@fval+2)^(0+128),w
  3214  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0695  00A6               	movwf	___flmul@b+2
  3217  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3219  0698  083F               	movf	(sprintf@fval+1)^(0+128),w
  3220  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3221  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3222  069B  00A5               	movwf	___flmul@b+1
  3223  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3224  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3225  069E  083E               	movf	sprintf@fval^(0+128),w
  3226  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3227  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3228  06A1  00A4               	movwf	___flmul@b
  3229  06A2  120A  158A  249F  120A  118A  	fcall	___flmul
  3230  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3231  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3232  06A9  0827               	movf	?___flmul+3,w
  3233  06AA  00D4               	movwf	___fltol@f1+3
  3234  06AB  0826               	movf	?___flmul+2,w
  3235  06AC  00D3               	movwf	___fltol@f1+2
  3236  06AD  0825               	movf	?___flmul+1,w
  3237  06AE  00D2               	movwf	___fltol@f1+1
  3238  06AF  0824               	movf	?___flmul,w
  3239  06B0  00D1               	movwf	___fltol@f1
  3240  06B1  160A  158A  2628  120A  118A  	fcall	___fltol
  3241  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3242  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3243  06B8  0854               	movf	?___fltol+3,w
  3244  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  3245  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  3246  06BB  00B4               	movwf	(sprintf@val+3)^(0+128)
  3247  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3248  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3249  06BE  0853               	movf	?___fltol+2,w
  3250  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  3251  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  3252  06C1  00B3               	movwf	(sprintf@val+2)^(0+128)
  3253  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3254  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3255  06C4  0852               	movf	?___fltol+1,w
  3256  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  3257  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  3258  06C7  00B2               	movwf	(sprintf@val+1)^(0+128)
  3259  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3260  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3261  06CA  0851               	movf	?___fltol,w
  3262  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  3263  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  3264  06CD  00B1               	movwf	sprintf@val^(0+128)
  3265                           
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3267  06CE  2F70               	goto	l3584
  3268  06CF                     l3576:	
  3269                           
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3271  06CF  0842               	movf	sprintf@c^(0+128),w
  3272  06D0  00A5               	movwf	??_sprintf^(0+128)
  3273  06D1  3001               	movlw	1
  3274  06D2                     u5645:	
  3275  06D2  1003               	clrc
  3276  06D3  0DA5               	rlf	??_sprintf^(0+128),f
  3277  06D4  3EFF               	addlw	-1
  3278  06D5  1D03               	skipz
  3279  06D6  2ED2               	goto	u5645
  3280  06D7  1003               	clrc
  3281  06D8  0D25               	rlf	??_sprintf^(0+128),w
  3282  06D9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3283  06DA  0084               	movwf	4
  3284  06DB  160A  158A  200A  120A  118A  	fcall	stringdir
  3285  06E0  00F0               	movwf	___lldiv@divisor
  3286  06E1  160A  158A  200A  120A  118A  	fcall	stringdir
  3287  06E6  00F1               	movwf	___lldiv@divisor+1
  3288  06E7  160A  158A  200A  120A  118A  	fcall	stringdir
  3289  06EC  00F2               	movwf	___lldiv@divisor+2
  3290  06ED  160A  158A  200A  120A  118A  	fcall	stringdir
  3291  06F2  00F3               	movwf	___lldiv@divisor+3
  3292  06F3  0834               	movf	(sprintf@val+3)^(0+128),w
  3293  06F4  00F7               	movwf	___lldiv@dividend+3
  3294  06F5  0833               	movf	(sprintf@val+2)^(0+128),w
  3295  06F6  00F6               	movwf	___lldiv@dividend+2
  3296  06F7  0832               	movf	(sprintf@val+1)^(0+128),w
  3297  06F8  00F5               	movwf	___lldiv@dividend+1
  3298  06F9  0831               	movf	sprintf@val^(0+128),w
  3299  06FA  00F4               	movwf	___lldiv@dividend
  3300  06FB  160A  158A  2559  120A  118A  	fcall	___lldiv
  3301  0700  0873               	movf	?___lldiv+3,w
  3302  0701  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0702  1303               	bcf	3,6	;RP1=0, select bank1
  3304  0703  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3305  0704  0872               	movf	?___lldiv+2,w
  3306  0705  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3307  0706  0871               	movf	?___lldiv+1,w
  3308  0707  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3309  0708  0870               	movf	?___lldiv,w
  3310  0709  00B7               	movwf	sprintf@tmpval^(0+128)
  3311  070A                     l3578:	
  3312                           
  3313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3314  070A  3000               	movlw	0
  3315  070B  00F3               	movwf	___llmod@divisor+3
  3316  070C  3000               	movlw	0
  3317  070D  00F2               	movwf	___llmod@divisor+2
  3318  070E  3000               	movlw	0
  3319  070F  00F1               	movwf	___llmod@divisor+1
  3320  0710  300A               	movlw	10
  3321  0711  00F0               	movwf	___llmod@divisor
  3322  0712  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3323  0713  00F7               	movwf	___llmod@dividend+3
  3324  0714  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3325  0715  00F6               	movwf	___llmod@dividend+2
  3326  0716  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3327  0717  00F5               	movwf	___llmod@dividend+1
  3328  0718  0837               	movf	sprintf@tmpval^(0+128),w
  3329  0719  00F4               	movwf	___llmod@dividend
  3330  071A  160A  158A  24AC  120A  118A  	fcall	___llmod
  3331  071F  0873               	movf	?___llmod+3,w
  3332  0720  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0721  1303               	bcf	3,6	;RP1=0, select bank1
  3334  0722  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3335  0723  0872               	movf	?___llmod+2,w
  3336  0724  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3337  0725  0871               	movf	?___llmod+1,w
  3338  0726  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3339  0727  0870               	movf	?___llmod,w
  3340  0728  00B7               	movwf	sprintf@tmpval^(0+128)
  3341  0729                     l3580:	
  3342                           
  3343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3344  0729  0837               	movf	sprintf@tmpval^(0+128),w
  3345  072A  3E30               	addlw	48
  3346  072B  00A5               	movwf	??_sprintf^(0+128)
  3347  072C  083B               	movf	sprintf@sp^(0+128),w
  3348  072D  0084               	movwf	4
  3349  072E  0825               	movf	??_sprintf^(0+128),w
  3350  072F  1383               	bcf	3,7	;select IRP bank0
  3351  0730  0080               	movwf	0
  3352  0731  3001               	movlw	1
  3353  0732  00A5               	movwf	??_sprintf^(0+128)
  3354  0733  0825               	movf	??_sprintf^(0+128),w
  3355  0734  07BB               	addwf	sprintf@sp^(0+128),f
  3356  0735                     l3582:	
  3357                           
  3358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3359  0735  0842               	movf	sprintf@c^(0+128),w
  3360  0736  00A5               	movwf	??_sprintf^(0+128)
  3361  0737  3001               	movlw	1
  3362  0738                     u5655:	
  3363  0738  1003               	clrc
  3364  0739  0DA5               	rlf	??_sprintf^(0+128),f
  3365  073A  3EFF               	addlw	-1
  3366  073B  1D03               	skipz
  3367  073C  2F38               	goto	u5655
  3368  073D  1003               	clrc
  3369  073E  0D25               	rlf	??_sprintf^(0+128),w
  3370  073F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3371  0740  0084               	movwf	4
  3372  0741  160A  158A  200A  120A  118A  	fcall	stringdir
  3373  0746  00F0               	movwf	___llmod@divisor
  3374  0747  160A  158A  200A  120A  118A  	fcall	stringdir
  3375  074C  00F1               	movwf	___llmod@divisor+1
  3376  074D  160A  158A  200A  120A  118A  	fcall	stringdir
  3377  0752  00F2               	movwf	___llmod@divisor+2
  3378  0753  160A  158A  200A  120A  118A  	fcall	stringdir
  3379  0758  00F3               	movwf	___llmod@divisor+3
  3380  0759  0834               	movf	(sprintf@val+3)^(0+128),w
  3381  075A  00F7               	movwf	___llmod@dividend+3
  3382  075B  0833               	movf	(sprintf@val+2)^(0+128),w
  3383  075C  00F6               	movwf	___llmod@dividend+2
  3384  075D  0832               	movf	(sprintf@val+1)^(0+128),w
  3385  075E  00F5               	movwf	___llmod@dividend+1
  3386  075F  0831               	movf	sprintf@val^(0+128),w
  3387  0760  00F4               	movwf	___llmod@dividend
  3388  0761  160A  158A  24AC  120A  118A  	fcall	___llmod
  3389  0766  0873               	movf	?___llmod+3,w
  3390  0767  1683               	bsf	3,5	;RP0=1, select bank1
  3391  0768  1303               	bcf	3,6	;RP1=0, select bank1
  3392  0769  00B4               	movwf	(sprintf@val+3)^(0+128)
  3393  076A  0872               	movf	?___llmod+2,w
  3394  076B  00B3               	movwf	(sprintf@val+2)^(0+128)
  3395  076C  0871               	movf	?___llmod+1,w
  3396  076D  00B2               	movwf	(sprintf@val+1)^(0+128)
  3397  076E  0870               	movf	?___llmod,w
  3398  076F  00B1               	movwf	sprintf@val^(0+128)
  3399  0770                     l3584:	
  3400                           
  3401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3402  0770  3001               	movlw	1
  3403  0771  02C2               	subwf	sprintf@c^(0+128),f
  3404  0772  0A42               	incf	sprintf@c^(0+128),w
  3405  0773  1D03               	btfss	3,2
  3406  0774  2F76               	goto	u5661
  3407  0775  2F77               	goto	u5660
  3408  0776                     u5661:	
  3409  0776  2ECF               	goto	l3576
  3410  0777                     u5660:	
  3411  0777  2F89               	goto	l3592
  3412  0778                     l3586:	
  3413                           
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3415  0778  3030               	movlw	48
  3416  0779  00A5               	movwf	??_sprintf^(0+128)
  3417  077A  083B               	movf	sprintf@sp^(0+128),w
  3418  077B  0084               	movwf	4
  3419  077C  0825               	movf	??_sprintf^(0+128),w
  3420  077D  1383               	bcf	3,7	;select IRP bank0
  3421  077E  0080               	movwf	0
  3422  077F                     l3588:	
  3423  077F  3001               	movlw	1
  3424  0780  00A5               	movwf	??_sprintf^(0+128)
  3425  0781  0825               	movf	??_sprintf^(0+128),w
  3426  0782  07BB               	addwf	sprintf@sp^(0+128),f
  3427  0783                     l3590:	
  3428                           
  3429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3430  0783  30FF               	movlw	255
  3431  0784  07BC               	addwf	sprintf@prec^(0+128),f
  3432  0785  1803               	skipnc
  3433  0786  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3434  0787  30FF               	movlw	255
  3435  0788  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3436  0789                     l3592:	
  3437                           
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3439  0789  083C               	movf	sprintf@prec^(0+128),w
  3440  078A  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3441  078B  1D03               	btfss	3,2
  3442  078C  2F8E               	goto	u5671
  3443  078D  2F8F               	goto	u5670
  3444  078E                     u5671:	
  3445  078E  2F78               	goto	l3586
  3446  078F                     u5670:	
  3447  078F  2FD5               	goto	l3612
  3448  0790                     l3594:	
  3449                           
  3450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3451  0790  083C               	movf	sprintf@prec^(0+128),w
  3452  0791  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3453  0792  1D03               	btfss	3,2
  3454  0793  2F95               	goto	u5681
  3455  0794  2F96               	goto	u5680
  3456  0795                     u5681:	
  3457  0795  2FA4               	goto	l349
  3458  0796                     u5680:	
  3459  0796                     l3596:	
  3460  0796  0834               	movf	(sprintf@val+3)^(0+128),w
  3461  0797  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3462  0798  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3463  0799  0431               	iorwf	sprintf@val^(0+128),w
  3464  079A  1D03               	skipz
  3465  079B  2F9D               	goto	u5691
  3466  079C  2F9E               	goto	u5690
  3467  079D                     u5691:	
  3468  079D  2FA4               	goto	l349
  3469  079E                     u5690:	
  3470  079E                     l3598:	
  3471                           
  3472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3473  079E  3001               	movlw	1
  3474  079F  07BC               	addwf	sprintf@prec^(0+128),f
  3475  07A0  1803               	skipnc
  3476  07A1  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3477  07A2  3000               	movlw	0
  3478  07A3  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3479  07A4                     l349:	
  3480                           
  3481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3482  07A4  083D               	movf	(sprintf@prec+1)^(0+128),w
  3483  07A5  3A80               	xorlw	128
  3484  07A6  3C80               	sublw	128
  3485  07A7  1D03               	skipz
  3486  07A8  2FAB               	goto	u5705
  3487  07A9  083C               	movf	sprintf@prec^(0+128),w
  3488  07AA  0242               	subwf	sprintf@c^(0+128),w
  3489  07AB                     u5705:	
  3490  07AB  1803               	skipnc
  3491  07AC  2FAE               	goto	u5701
  3492  07AD  2FAF               	goto	u5700
  3493  07AE                     u5701:	
  3494  07AE  2FB0               	goto	l3602
  3495  07AF                     u5700:	
  3496  07AF                     l3600:	
  3497  07AF  2FBF               	goto	l3606
  3498  07B0                     l3602:	
  3499  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  3500  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  3501  07B2  083D               	movf	(sprintf@prec+1)^(0+128),w
  3502  07B3  3A80               	xorlw	128
  3503  07B4  00A5               	movwf	??_sprintf^(0+128)
  3504  07B5  3080               	movlw	128
  3505  07B6  0225               	subwf	??_sprintf^(0+128),w
  3506  07B7  1D03               	skipz
  3507  07B8  2FBB               	goto	u5715
  3508  07B9  0842               	movf	sprintf@c^(0+128),w
  3509  07BA  023C               	subwf	sprintf@prec^(0+128),w
  3510  07BB                     u5715:	
  3511  07BB  1803               	skipnc
  3512  07BC  2FBE               	goto	u5711
  3513  07BD  2FBF               	goto	u5710
  3514  07BE                     u5711:	
  3515  07BE  2FBF               	goto	l3606
  3516  07BF                     u5710:	
  3517  07BF                     l3604:	
  3518  07BF                     l3606:	
  3519                           
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3521  07BF  3003               	movlw	3
  3522  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  3523  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  3524  07C2  052F               	andwf	sprintf@flag^(0+128),w
  3525  07C3  00A5               	movwf	??_sprintf^(0+128)
  3526  07C4  3000               	movlw	0
  3527  07C5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3528  07C6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3529  07C7  0825               	movf	??_sprintf^(0+128),w
  3530  07C8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3531  07C9  1903               	btfsc	3,2
  3532  07CA  2FCC               	goto	u5721
  3533  07CB  2FCD               	goto	u5720
  3534  07CC                     u5721:	
  3535  07CC  2FD5               	goto	l3612
  3536  07CD                     u5720:	
  3537  07CD                     l3608:	
  3538                           
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3540  07CD  302D               	movlw	45
  3541  07CE  00A5               	movwf	??_sprintf^(0+128)
  3542  07CF  083B               	movf	sprintf@sp^(0+128),w
  3543  07D0  0084               	movwf	4
  3544  07D1  0825               	movf	??_sprintf^(0+128),w
  3545  07D2  1383               	bcf	3,7	;select IRP bank0
  3546  07D3  0080               	movwf	0
  3547  07D4  29A9               	goto	l3424
  3548  07D5                     l3612:	
  3549                           
  3550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3551  07D5  3001               	movlw	1
  3552  07D6  07A0               	addwf	sprintf@f^(0+128),f
  3553  07D7  30FF               	movlw	-1
  3554  07D8  0720               	addwf	sprintf@f^(0+128),w
  3555  07D9  0084               	movwf	4
  3556  07DA  160A  158A  200A  120A  118A  	fcall	stringdir
  3557  07DF  00A5               	movwf	??_sprintf^(0+128)
  3558  07E0  0825               	movf	??_sprintf^(0+128),w
  3559  07E1  00C2               	movwf	sprintf@c^(0+128)
  3560  07E2  0842               	movf	sprintf@c^(0+128),w
  3561  07E3  1D03               	btfss	3,2
  3562  07E4  2FE6               	goto	u5731
  3563  07E5  2FE7               	goto	u5730
  3564  07E6                     u5731:	
  3565  07E6  299C               	goto	l3420
  3566  07E7                     u5730:	
  3567  07E7                     l3614:	
  3568                           
  3569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3570  07E7  083B               	movf	sprintf@sp^(0+128),w
  3571  07E8  0084               	movwf	4
  3572  07E9  1383               	bcf	3,7	;select IRP bank0
  3573  07EA  0180               	clrf	0
  3574  07EB                     l355:	
  3575  07EB  0008               	return
  3576  07EC                     __end_of_sprintf:	
  3577                           
  3578                           	psect	text2
  3579  0940                     __ptext2:	
  3580 ;; *************** function _scale *****************
  3581 ;; Defined at:
  3582 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  scl             1    wreg     char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  scl             1   48[BANK0 ] char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  4   30[BANK0 ] char 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       4       0       0       0
  3597 ;;      Locals:         0       5       0       0       0
  3598 ;;      Temps:          0      10       0       0       0
  3599 ;;      Totals:         0      19       0       0       0
  3600 ;;Total ram usage:       19 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    2
  3603 ;; This function calls:
  3604 ;;		___awdiv
  3605 ;;		___awmod
  3606 ;;		___flmul
  3607 ;; This function is called by:
  3608 ;;		_sprintf
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _scale
  3614  0940                     _scale:	
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3618                           ;scale@scl stored from wreg
  3619  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0942  00D0               	movwf	scale@scl
  3622  0943                     l2960:	
  3623                           
  3624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3625  0943  1FD0               	btfss	scale@scl,7
  3626  0944  2946               	goto	u4371
  3627  0945  2947               	goto	u4370
  3628  0946                     u4371:	
  3629  0946  2AF4               	goto	l2982
  3630  0947                     u4370:	
  3631  0947                     l2962:	
  3632                           
  3633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3634  0947  09D0               	comf	scale@scl,f
  3635  0948  0AD0               	incf	scale@scl,f
  3636  0949                     l2964:	
  3637                           
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3639  0949  0850               	movf	scale@scl,w
  3640  094A  3A80               	xorlw	128
  3641  094B  3E12               	addlw	-238
  3642  094C  1C03               	skipc
  3643  094D  294F               	goto	u4381
  3644  094E  2950               	goto	u4380
  3645  094F                     u4381:	
  3646  094F  2A38               	goto	l2972
  3647  0950                     u4380:	
  3648  0950                     l2966:	
  3649                           
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3651  0950  300A               	movlw	10
  3652  0951  00F7               	movwf	___awdiv@divisor
  3653  0952  3000               	movlw	0
  3654  0953  00F8               	movwf	___awdiv@divisor+1
  3655  0954  0850               	movf	scale@scl,w
  3656  0955  00F2               	movwf	___awmod@dividend
  3657  0956  01F3               	clrf	___awmod@dividend+1
  3658  0957  1BF2               	btfsc	___awmod@dividend,7
  3659  0958  03F3               	decf	___awmod@dividend+1,f
  3660  0959  3064               	movlw	100
  3661  095A  00F0               	movwf	___awmod@divisor
  3662  095B  3000               	movlw	0
  3663  095C  00F1               	movwf	___awmod@divisor+1
  3664  095D  160A  158A  2500  120A  158A  	fcall	___awmod
  3665  0962  0871               	movf	?___awmod+1,w
  3666  0963  00FA               	movwf	___awdiv@dividend+1
  3667  0964  0870               	movf	?___awmod,w
  3668  0965  00F9               	movwf	___awdiv@dividend
  3669  0966  160A  158A  25BF  120A  158A  	fcall	___awdiv
  3670  096B  0877               	movf	?___awdiv,w
  3671  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3672  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3673  096E  00C2               	movwf	??_scale
  3674  096F  3001               	movlw	1
  3675  0970                     u4395:	
  3676  0970  1003               	clrc
  3677  0971  0DC2               	rlf	??_scale,f
  3678  0972  3EFF               	addlw	-1
  3679  0973  1D03               	skipz
  3680  0974  2970               	goto	u4395
  3681  0975  1003               	clrc
  3682  0976  0D42               	rlf	??_scale,w
  3683  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3684  0978  0084               	movwf	4
  3685  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  3686  097E  00C3               	movwf	??_scale+1
  3687  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  3688  0984  00C4               	movwf	??_scale+2
  3689  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  3690  098A  00C5               	movwf	??_scale+3
  3691  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  3692  0990  00C6               	movwf	??_scale+4
  3693  0991  0846               	movf	??_scale+4,w
  3694  0992  00A7               	movwf	___flmul@b+3
  3695  0993  0845               	movf	??_scale+3,w
  3696  0994  00A6               	movwf	___flmul@b+2
  3697  0995  0844               	movf	??_scale+2,w
  3698  0996  00A5               	movwf	___flmul@b+1
  3699  0997  0843               	movf	??_scale+1,w
  3700  0998  00A4               	movwf	___flmul@b
  3701  0999  3064               	movlw	100
  3702  099A  00F7               	movwf	___awdiv@divisor
  3703  099B  3000               	movlw	0
  3704  099C  00F8               	movwf	___awdiv@divisor+1
  3705  099D  0850               	movf	scale@scl,w
  3706  099E  00F9               	movwf	___awdiv@dividend
  3707  099F  01FA               	clrf	___awdiv@dividend+1
  3708  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3709  09A1  03FA               	decf	___awdiv@dividend+1,f
  3710  09A2  160A  158A  25BF  120A  158A  	fcall	___awdiv
  3711  09A7  0877               	movf	?___awdiv,w
  3712  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3713  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3714  09AA  00C7               	movwf	??_scale+5
  3715  09AB  3001               	movlw	1
  3716  09AC                     u4405:	
  3717  09AC  1003               	clrc
  3718  09AD  0DC7               	rlf	??_scale+5,f
  3719  09AE  3EFF               	addlw	-1
  3720  09AF  1D03               	skipz
  3721  09B0  29AC               	goto	u4405
  3722  09B1  1003               	clrc
  3723  09B2  0D47               	rlf	??_scale+5,w
  3724  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3725  09B4  0084               	movwf	4
  3726  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  3727  09BA  00C8               	movwf	??_scale+6
  3728  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  3729  09C0  00C9               	movwf	??_scale+7
  3730  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  3731  09C6  00CA               	movwf	??_scale+8
  3732  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  3733  09CC  00CB               	movwf	??_scale+9
  3734  09CD  084B               	movf	??_scale+9,w
  3735  09CE  00AB               	movwf	___flmul@a+3
  3736  09CF  084A               	movf	??_scale+8,w
  3737  09D0  00AA               	movwf	___flmul@a+2
  3738  09D1  0849               	movf	??_scale+7,w
  3739  09D2  00A9               	movwf	___flmul@a+1
  3740  09D3  0848               	movf	??_scale+6,w
  3741  09D4  00A8               	movwf	___flmul@a
  3742  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3743  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3744  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3745  09DC  0827               	movf	?___flmul+3,w
  3746  09DD  00CF               	movwf	_scale$1129+3
  3747  09DE  0826               	movf	?___flmul+2,w
  3748  09DF  00CE               	movwf	_scale$1129+2
  3749  09E0  0825               	movf	?___flmul+1,w
  3750  09E1  00CD               	movwf	_scale$1129+1
  3751  09E2  0824               	movf	?___flmul,w
  3752  09E3  00CC               	movwf	_scale$1129
  3753                           
  3754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3755  09E4  300A               	movlw	10
  3756  09E5  00F0               	movwf	___awmod@divisor
  3757  09E6  3000               	movlw	0
  3758  09E7  00F1               	movwf	___awmod@divisor+1
  3759  09E8  0850               	movf	scale@scl,w
  3760  09E9  00F2               	movwf	___awmod@dividend
  3761  09EA  01F3               	clrf	___awmod@dividend+1
  3762  09EB  1BF2               	btfsc	___awmod@dividend,7
  3763  09EC  03F3               	decf	___awmod@dividend+1,f
  3764  09ED  160A  158A  2500  120A  158A  	fcall	___awmod
  3765  09F2  0870               	movf	?___awmod,w
  3766  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3767  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3768  09F5  00C2               	movwf	??_scale
  3769  09F6  3001               	movlw	1
  3770  09F7                     u4415:	
  3771  09F7  1003               	clrc
  3772  09F8  0DC2               	rlf	??_scale,f
  3773  09F9  3EFF               	addlw	-1
  3774  09FA  1D03               	skipz
  3775  09FB  29F7               	goto	u4415
  3776  09FC  1003               	clrc
  3777  09FD  0D42               	rlf	??_scale,w
  3778  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3779  09FF  0084               	movwf	4
  3780  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  3781  0A05  00C3               	movwf	??_scale+1
  3782  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  3783  0A0B  00C4               	movwf	??_scale+2
  3784  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3785  0A11  00C5               	movwf	??_scale+3
  3786  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  3787  0A17  00C6               	movwf	??_scale+4
  3788  0A18  0846               	movf	??_scale+4,w
  3789  0A19  00A7               	movwf	___flmul@b+3
  3790  0A1A  0845               	movf	??_scale+3,w
  3791  0A1B  00A6               	movwf	___flmul@b+2
  3792  0A1C  0844               	movf	??_scale+2,w
  3793  0A1D  00A5               	movwf	___flmul@b+1
  3794  0A1E  0843               	movf	??_scale+1,w
  3795  0A1F  00A4               	movwf	___flmul@b
  3796  0A20  084F               	movf	_scale$1129+3,w
  3797  0A21  00AB               	movwf	___flmul@a+3
  3798  0A22  084E               	movf	_scale$1129+2,w
  3799  0A23  00AA               	movwf	___flmul@a+2
  3800  0A24  084D               	movf	_scale$1129+1,w
  3801  0A25  00A9               	movwf	___flmul@a+1
  3802  0A26  084C               	movf	_scale$1129,w
  3803  0A27  00A8               	movwf	___flmul@a
  3804  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3805  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0A2F  0827               	movf	?___flmul+3,w
  3808  0A30  00C1               	movwf	?_scale+3
  3809  0A31  0826               	movf	?___flmul+2,w
  3810  0A32  00C0               	movwf	?_scale+2
  3811  0A33  0825               	movf	?___flmul+1,w
  3812  0A34  00BF               	movwf	?_scale+1
  3813  0A35  0824               	movf	?___flmul,w
  3814  0A36  00BE               	movwf	?_scale
  3815  0A37  2C9E               	goto	l289
  3816  0A38                     l2972:	
  3817  0A38  0850               	movf	scale@scl,w
  3818  0A39  3A80               	xorlw	128
  3819  0A3A  3E75               	addlw	-139
  3820  0A3B  1C03               	skipc
  3821  0A3C  2A3E               	goto	u4421
  3822  0A3D  2A3F               	goto	u4420
  3823  0A3E                     u4421:	
  3824  0A3E  2AC7               	goto	l2978
  3825  0A3F                     u4420:	
  3826  0A3F                     l2974:	
  3827                           
  3828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3829  0A3F  300A               	movlw	10
  3830  0A40  00F0               	movwf	___awmod@divisor
  3831  0A41  3000               	movlw	0
  3832  0A42  00F1               	movwf	___awmod@divisor+1
  3833  0A43  0850               	movf	scale@scl,w
  3834  0A44  00F2               	movwf	___awmod@dividend
  3835  0A45  01F3               	clrf	___awmod@dividend+1
  3836  0A46  1BF2               	btfsc	___awmod@dividend,7
  3837  0A47  03F3               	decf	___awmod@dividend+1,f
  3838  0A48  160A  158A  2500  120A  158A  	fcall	___awmod
  3839  0A4D  0870               	movf	?___awmod,w
  3840  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0A50  00C2               	movwf	??_scale
  3843  0A51  3001               	movlw	1
  3844  0A52                     u4435:	
  3845  0A52  1003               	clrc
  3846  0A53  0DC2               	rlf	??_scale,f
  3847  0A54  3EFF               	addlw	-1
  3848  0A55  1D03               	skipz
  3849  0A56  2A52               	goto	u4435
  3850  0A57  1003               	clrc
  3851  0A58  0D42               	rlf	??_scale,w
  3852  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3853  0A5A  0084               	movwf	4
  3854  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  3855  0A60  00C3               	movwf	??_scale+1
  3856  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  3857  0A66  00C4               	movwf	??_scale+2
  3858  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  3859  0A6C  00C5               	movwf	??_scale+3
  3860  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3861  0A72  00C6               	movwf	??_scale+4
  3862  0A73  0846               	movf	??_scale+4,w
  3863  0A74  00A7               	movwf	___flmul@b+3
  3864  0A75  0845               	movf	??_scale+3,w
  3865  0A76  00A6               	movwf	___flmul@b+2
  3866  0A77  0844               	movf	??_scale+2,w
  3867  0A78  00A5               	movwf	___flmul@b+1
  3868  0A79  0843               	movf	??_scale+1,w
  3869  0A7A  00A4               	movwf	___flmul@b
  3870  0A7B  300A               	movlw	10
  3871  0A7C  00F7               	movwf	___awdiv@divisor
  3872  0A7D  3000               	movlw	0
  3873  0A7E  00F8               	movwf	___awdiv@divisor+1
  3874  0A7F  0850               	movf	scale@scl,w
  3875  0A80  00F9               	movwf	___awdiv@dividend
  3876  0A81  01FA               	clrf	___awdiv@dividend+1
  3877  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3878  0A83  03FA               	decf	___awdiv@dividend+1,f
  3879  0A84  160A  158A  25BF  120A  158A  	fcall	___awdiv
  3880  0A89  0877               	movf	?___awdiv,w
  3881  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0A8C  00C7               	movwf	??_scale+5
  3884  0A8D  3001               	movlw	1
  3885  0A8E                     u4445:	
  3886  0A8E  1003               	clrc
  3887  0A8F  0DC7               	rlf	??_scale+5,f
  3888  0A90  3EFF               	addlw	-1
  3889  0A91  1D03               	skipz
  3890  0A92  2A8E               	goto	u4445
  3891  0A93  1003               	clrc
  3892  0A94  0D47               	rlf	??_scale+5,w
  3893  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3894  0A96  0084               	movwf	4
  3895  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  3896  0A9C  00C8               	movwf	??_scale+6
  3897  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  3898  0AA2  00C9               	movwf	??_scale+7
  3899  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3900  0AA8  00CA               	movwf	??_scale+8
  3901  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3902  0AAE  00CB               	movwf	??_scale+9
  3903  0AAF  084B               	movf	??_scale+9,w
  3904  0AB0  00AB               	movwf	___flmul@a+3
  3905  0AB1  084A               	movf	??_scale+8,w
  3906  0AB2  00AA               	movwf	___flmul@a+2
  3907  0AB3  0849               	movf	??_scale+7,w
  3908  0AB4  00A9               	movwf	___flmul@a+1
  3909  0AB5  0848               	movf	??_scale+6,w
  3910  0AB6  00A8               	movwf	___flmul@a
  3911  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3912  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3913  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3914  0ABE  0827               	movf	?___flmul+3,w
  3915  0ABF  00C1               	movwf	?_scale+3
  3916  0AC0  0826               	movf	?___flmul+2,w
  3917  0AC1  00C0               	movwf	?_scale+2
  3918  0AC2  0825               	movf	?___flmul+1,w
  3919  0AC3  00BF               	movwf	?_scale+1
  3920  0AC4  0824               	movf	?___flmul,w
  3921  0AC5  00BE               	movwf	?_scale
  3922  0AC6  2C9E               	goto	l289
  3923  0AC7                     l2978:	
  3924                           
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3926  0AC7  0850               	movf	scale@scl,w
  3927  0AC8  00C2               	movwf	??_scale
  3928  0AC9  3001               	movlw	1
  3929  0ACA                     u4455:	
  3930  0ACA  1003               	clrc
  3931  0ACB  0DC2               	rlf	??_scale,f
  3932  0ACC  3EFF               	addlw	-1
  3933  0ACD  1D03               	skipz
  3934  0ACE  2ACA               	goto	u4455
  3935  0ACF  1003               	clrc
  3936  0AD0  0D42               	rlf	??_scale,w
  3937  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3938  0AD2  0084               	movwf	4
  3939  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  3940  0AD8  00C3               	movwf	??_scale+1
  3941  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  3942  0ADE  00C4               	movwf	??_scale+2
  3943  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  3944  0AE4  00C5               	movwf	??_scale+3
  3945  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3946  0AEA  00C6               	movwf	??_scale+4
  3947  0AEB  0846               	movf	??_scale+4,w
  3948  0AEC  00C1               	movwf	?_scale+3
  3949  0AED  0845               	movf	??_scale+3,w
  3950  0AEE  00C0               	movwf	?_scale+2
  3951  0AEF  0844               	movf	??_scale+2,w
  3952  0AF0  00BF               	movwf	?_scale+1
  3953  0AF1  0843               	movf	??_scale+1,w
  3954  0AF2  00BE               	movwf	?_scale
  3955  0AF3  2C9E               	goto	l289
  3956  0AF4                     l2982:	
  3957                           
  3958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3959  0AF4  0850               	movf	scale@scl,w
  3960  0AF5  3A80               	xorlw	128
  3961  0AF6  3E12               	addlw	-238
  3962  0AF7  1C03               	skipc
  3963  0AF8  2AFA               	goto	u4461
  3964  0AF9  2AFB               	goto	u4460
  3965  0AFA                     u4461:	
  3966  0AFA  2BE3               	goto	l2990
  3967  0AFB                     u4460:	
  3968  0AFB                     l2984:	
  3969                           
  3970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3971  0AFB  300A               	movlw	10
  3972  0AFC  00F7               	movwf	___awdiv@divisor
  3973  0AFD  3000               	movlw	0
  3974  0AFE  00F8               	movwf	___awdiv@divisor+1
  3975  0AFF  0850               	movf	scale@scl,w
  3976  0B00  00F2               	movwf	___awmod@dividend
  3977  0B01  01F3               	clrf	___awmod@dividend+1
  3978  0B02  1BF2               	btfsc	___awmod@dividend,7
  3979  0B03  03F3               	decf	___awmod@dividend+1,f
  3980  0B04  3064               	movlw	100
  3981  0B05  00F0               	movwf	___awmod@divisor
  3982  0B06  3000               	movlw	0
  3983  0B07  00F1               	movwf	___awmod@divisor+1
  3984  0B08  160A  158A  2500  120A  158A  	fcall	___awmod
  3985  0B0D  0871               	movf	?___awmod+1,w
  3986  0B0E  00FA               	movwf	___awdiv@dividend+1
  3987  0B0F  0870               	movf	?___awmod,w
  3988  0B10  00F9               	movwf	___awdiv@dividend
  3989  0B11  160A  158A  25BF  120A  158A  	fcall	___awdiv
  3990  0B16  0877               	movf	?___awdiv,w
  3991  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0B19  00C2               	movwf	??_scale
  3994  0B1A  3001               	movlw	1
  3995  0B1B                     u4475:	
  3996  0B1B  1003               	clrc
  3997  0B1C  0DC2               	rlf	??_scale,f
  3998  0B1D  3EFF               	addlw	-1
  3999  0B1E  1D03               	skipz
  4000  0B1F  2B1B               	goto	u4475
  4001  0B20  1003               	clrc
  4002  0B21  0D42               	rlf	??_scale,w
  4003  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4004  0B23  0084               	movwf	4
  4005  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  4006  0B29  00C3               	movwf	??_scale+1
  4007  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  4008  0B2F  00C4               	movwf	??_scale+2
  4009  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  4010  0B35  00C5               	movwf	??_scale+3
  4011  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  4012  0B3B  00C6               	movwf	??_scale+4
  4013  0B3C  0846               	movf	??_scale+4,w
  4014  0B3D  00A7               	movwf	___flmul@b+3
  4015  0B3E  0845               	movf	??_scale+3,w
  4016  0B3F  00A6               	movwf	___flmul@b+2
  4017  0B40  0844               	movf	??_scale+2,w
  4018  0B41  00A5               	movwf	___flmul@b+1
  4019  0B42  0843               	movf	??_scale+1,w
  4020  0B43  00A4               	movwf	___flmul@b
  4021  0B44  3064               	movlw	100
  4022  0B45  00F7               	movwf	___awdiv@divisor
  4023  0B46  3000               	movlw	0
  4024  0B47  00F8               	movwf	___awdiv@divisor+1
  4025  0B48  0850               	movf	scale@scl,w
  4026  0B49  00F9               	movwf	___awdiv@dividend
  4027  0B4A  01FA               	clrf	___awdiv@dividend+1
  4028  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4029  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4030  0B4D  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4031  0B52  0877               	movf	?___awdiv,w
  4032  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0B55  00C7               	movwf	??_scale+5
  4035  0B56  3001               	movlw	1
  4036  0B57                     u4485:	
  4037  0B57  1003               	clrc
  4038  0B58  0DC7               	rlf	??_scale+5,f
  4039  0B59  3EFF               	addlw	-1
  4040  0B5A  1D03               	skipz
  4041  0B5B  2B57               	goto	u4485
  4042  0B5C  1003               	clrc
  4043  0B5D  0D47               	rlf	??_scale+5,w
  4044  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4045  0B5F  0084               	movwf	4
  4046  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  4047  0B65  00C8               	movwf	??_scale+6
  4048  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  4049  0B6B  00C9               	movwf	??_scale+7
  4050  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  4051  0B71  00CA               	movwf	??_scale+8
  4052  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  4053  0B77  00CB               	movwf	??_scale+9
  4054  0B78  084B               	movf	??_scale+9,w
  4055  0B79  00AB               	movwf	___flmul@a+3
  4056  0B7A  084A               	movf	??_scale+8,w
  4057  0B7B  00AA               	movwf	___flmul@a+2
  4058  0B7C  0849               	movf	??_scale+7,w
  4059  0B7D  00A9               	movwf	___flmul@a+1
  4060  0B7E  0848               	movf	??_scale+6,w
  4061  0B7F  00A8               	movwf	___flmul@a
  4062  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4063  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0B87  0827               	movf	?___flmul+3,w
  4066  0B88  00CF               	movwf	_scale$1129+3
  4067  0B89  0826               	movf	?___flmul+2,w
  4068  0B8A  00CE               	movwf	_scale$1129+2
  4069  0B8B  0825               	movf	?___flmul+1,w
  4070  0B8C  00CD               	movwf	_scale$1129+1
  4071  0B8D  0824               	movf	?___flmul,w
  4072  0B8E  00CC               	movwf	_scale$1129
  4073                           
  4074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4075  0B8F  300A               	movlw	10
  4076  0B90  00F0               	movwf	___awmod@divisor
  4077  0B91  3000               	movlw	0
  4078  0B92  00F1               	movwf	___awmod@divisor+1
  4079  0B93  0850               	movf	scale@scl,w
  4080  0B94  00F2               	movwf	___awmod@dividend
  4081  0B95  01F3               	clrf	___awmod@dividend+1
  4082  0B96  1BF2               	btfsc	___awmod@dividend,7
  4083  0B97  03F3               	decf	___awmod@dividend+1,f
  4084  0B98  160A  158A  2500  120A  158A  	fcall	___awmod
  4085  0B9D  0870               	movf	?___awmod,w
  4086  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4087  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4088  0BA0  00C2               	movwf	??_scale
  4089  0BA1  3001               	movlw	1
  4090  0BA2                     u4495:	
  4091  0BA2  1003               	clrc
  4092  0BA3  0DC2               	rlf	??_scale,f
  4093  0BA4  3EFF               	addlw	-1
  4094  0BA5  1D03               	skipz
  4095  0BA6  2BA2               	goto	u4495
  4096  0BA7  1003               	clrc
  4097  0BA8  0D42               	rlf	??_scale,w
  4098  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4099  0BAA  0084               	movwf	4
  4100  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  4101  0BB0  00C3               	movwf	??_scale+1
  4102  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  4103  0BB6  00C4               	movwf	??_scale+2
  4104  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  4105  0BBC  00C5               	movwf	??_scale+3
  4106  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  4107  0BC2  00C6               	movwf	??_scale+4
  4108  0BC3  0846               	movf	??_scale+4,w
  4109  0BC4  00A7               	movwf	___flmul@b+3
  4110  0BC5  0845               	movf	??_scale+3,w
  4111  0BC6  00A6               	movwf	___flmul@b+2
  4112  0BC7  0844               	movf	??_scale+2,w
  4113  0BC8  00A5               	movwf	___flmul@b+1
  4114  0BC9  0843               	movf	??_scale+1,w
  4115  0BCA  00A4               	movwf	___flmul@b
  4116  0BCB  084F               	movf	_scale$1129+3,w
  4117  0BCC  00AB               	movwf	___flmul@a+3
  4118  0BCD  084E               	movf	_scale$1129+2,w
  4119  0BCE  00AA               	movwf	___flmul@a+2
  4120  0BCF  084D               	movf	_scale$1129+1,w
  4121  0BD0  00A9               	movwf	___flmul@a+1
  4122  0BD1  084C               	movf	_scale$1129,w
  4123  0BD2  00A8               	movwf	___flmul@a
  4124  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4125  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0BDA  0827               	movf	?___flmul+3,w
  4128  0BDB  00C1               	movwf	?_scale+3
  4129  0BDC  0826               	movf	?___flmul+2,w
  4130  0BDD  00C0               	movwf	?_scale+2
  4131  0BDE  0825               	movf	?___flmul+1,w
  4132  0BDF  00BF               	movwf	?_scale+1
  4133  0BE0  0824               	movf	?___flmul,w
  4134  0BE1  00BE               	movwf	?_scale
  4135  0BE2  2C9E               	goto	l289
  4136  0BE3                     l2990:	
  4137  0BE3  0850               	movf	scale@scl,w
  4138  0BE4  3A80               	xorlw	128
  4139  0BE5  3E75               	addlw	-139
  4140  0BE6  1C03               	skipc
  4141  0BE7  2BE9               	goto	u4501
  4142  0BE8  2BEA               	goto	u4500
  4143  0BE9                     u4501:	
  4144  0BE9  2C72               	goto	l2996
  4145  0BEA                     u4500:	
  4146  0BEA                     l2992:	
  4147                           
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4149  0BEA  300A               	movlw	10
  4150  0BEB  00F0               	movwf	___awmod@divisor
  4151  0BEC  3000               	movlw	0
  4152  0BED  00F1               	movwf	___awmod@divisor+1
  4153  0BEE  0850               	movf	scale@scl,w
  4154  0BEF  00F2               	movwf	___awmod@dividend
  4155  0BF0  01F3               	clrf	___awmod@dividend+1
  4156  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4157  0BF2  03F3               	decf	___awmod@dividend+1,f
  4158  0BF3  160A  158A  2500  120A  158A  	fcall	___awmod
  4159  0BF8  0870               	movf	?___awmod,w
  4160  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0BFB  00C2               	movwf	??_scale
  4163  0BFC  3001               	movlw	1
  4164  0BFD                     u4515:	
  4165  0BFD  1003               	clrc
  4166  0BFE  0DC2               	rlf	??_scale,f
  4167  0BFF  3EFF               	addlw	-1
  4168  0C00  1D03               	skipz
  4169  0C01  2BFD               	goto	u4515
  4170  0C02  1003               	clrc
  4171  0C03  0D42               	rlf	??_scale,w
  4172  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4173  0C05  0084               	movwf	4
  4174  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  4175  0C0B  00C3               	movwf	??_scale+1
  4176  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4177  0C11  00C4               	movwf	??_scale+2
  4178  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  4179  0C17  00C5               	movwf	??_scale+3
  4180  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  4181  0C1D  00C6               	movwf	??_scale+4
  4182  0C1E  0846               	movf	??_scale+4,w
  4183  0C1F  00A7               	movwf	___flmul@b+3
  4184  0C20  0845               	movf	??_scale+3,w
  4185  0C21  00A6               	movwf	___flmul@b+2
  4186  0C22  0844               	movf	??_scale+2,w
  4187  0C23  00A5               	movwf	___flmul@b+1
  4188  0C24  0843               	movf	??_scale+1,w
  4189  0C25  00A4               	movwf	___flmul@b
  4190  0C26  300A               	movlw	10
  4191  0C27  00F7               	movwf	___awdiv@divisor
  4192  0C28  3000               	movlw	0
  4193  0C29  00F8               	movwf	___awdiv@divisor+1
  4194  0C2A  0850               	movf	scale@scl,w
  4195  0C2B  00F9               	movwf	___awdiv@dividend
  4196  0C2C  01FA               	clrf	___awdiv@dividend+1
  4197  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4198  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4199  0C2F  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4200  0C34  0877               	movf	?___awdiv,w
  4201  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0C37  00C7               	movwf	??_scale+5
  4204  0C38  3001               	movlw	1
  4205  0C39                     u4525:	
  4206  0C39  1003               	clrc
  4207  0C3A  0DC7               	rlf	??_scale+5,f
  4208  0C3B  3EFF               	addlw	-1
  4209  0C3C  1D03               	skipz
  4210  0C3D  2C39               	goto	u4525
  4211  0C3E  1003               	clrc
  4212  0C3F  0D47               	rlf	??_scale+5,w
  4213  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4214  0C41  0084               	movwf	4
  4215  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  4216  0C47  00C8               	movwf	??_scale+6
  4217  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  4218  0C4D  00C9               	movwf	??_scale+7
  4219  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  4220  0C53  00CA               	movwf	??_scale+8
  4221  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  4222  0C59  00CB               	movwf	??_scale+9
  4223  0C5A  084B               	movf	??_scale+9,w
  4224  0C5B  00AB               	movwf	___flmul@a+3
  4225  0C5C  084A               	movf	??_scale+8,w
  4226  0C5D  00AA               	movwf	___flmul@a+2
  4227  0C5E  0849               	movf	??_scale+7,w
  4228  0C5F  00A9               	movwf	___flmul@a+1
  4229  0C60  0848               	movf	??_scale+6,w
  4230  0C61  00A8               	movwf	___flmul@a
  4231  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4232  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0C69  0827               	movf	?___flmul+3,w
  4235  0C6A  00C1               	movwf	?_scale+3
  4236  0C6B  0826               	movf	?___flmul+2,w
  4237  0C6C  00C0               	movwf	?_scale+2
  4238  0C6D  0825               	movf	?___flmul+1,w
  4239  0C6E  00BF               	movwf	?_scale+1
  4240  0C6F  0824               	movf	?___flmul,w
  4241  0C70  00BE               	movwf	?_scale
  4242  0C71  2C9E               	goto	l289
  4243  0C72                     l2996:	
  4244                           
  4245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4246  0C72  0850               	movf	scale@scl,w
  4247  0C73  00C2               	movwf	??_scale
  4248  0C74  3001               	movlw	1
  4249  0C75                     u4535:	
  4250  0C75  1003               	clrc
  4251  0C76  0DC2               	rlf	??_scale,f
  4252  0C77  3EFF               	addlw	-1
  4253  0C78  1D03               	skipz
  4254  0C79  2C75               	goto	u4535
  4255  0C7A  1003               	clrc
  4256  0C7B  0D42               	rlf	??_scale,w
  4257  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4258  0C7D  0084               	movwf	4
  4259  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  4260  0C83  00C3               	movwf	??_scale+1
  4261  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  4262  0C89  00C4               	movwf	??_scale+2
  4263  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  4264  0C8F  00C5               	movwf	??_scale+3
  4265  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  4266  0C95  00C6               	movwf	??_scale+4
  4267  0C96  0846               	movf	??_scale+4,w
  4268  0C97  00C1               	movwf	?_scale+3
  4269  0C98  0845               	movf	??_scale+3,w
  4270  0C99  00C0               	movwf	?_scale+2
  4271  0C9A  0844               	movf	??_scale+2,w
  4272  0C9B  00BF               	movwf	?_scale+1
  4273  0C9C  0843               	movf	??_scale+1,w
  4274  0C9D  00BE               	movwf	?_scale
  4275  0C9E                     l289:	
  4276  0C9E  0008               	return
  4277  0C9F                     __end_of_scale:	
  4278                           
  4279                           	psect	text3
  4280  1D00                     __ptext3:	
  4281 ;; *************** function ___awmod *****************
  4282 ;; Defined at:
  4283 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  divisor         2    0[COMMON] int 
  4286 ;;  dividend        2    2[COMMON] int 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  sign            1    6[COMMON] unsigned char 
  4289 ;;  counter         1    5[COMMON] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  2    0[COMMON] int 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4299 ;;      Params:         4       0       0       0       0
  4300 ;;      Locals:         2       0       0       0       0
  4301 ;;      Temps:          1       0       0       0       0
  4302 ;;      Totals:         7       0       0       0       0
  4303 ;;Total ram usage:        7 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_scale
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function ___awmod
  4314  1D00                     ___awmod:	
  4315  1D00                     l2500:	
  4316                           ;incstack = 0
  4317                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4318                           
  4319  1D00  01F6               	clrf	___awmod@sign
  4320  1D01                     l2502:	
  4321  1D01  1FF3               	btfss	___awmod@dividend+1,7
  4322  1D02  2D04               	goto	u3241
  4323  1D03  2D05               	goto	u3240
  4324  1D04                     u3241:	
  4325  1D04  2D0C               	goto	l2508
  4326  1D05                     u3240:	
  4327  1D05                     l2504:	
  4328  1D05  09F2               	comf	___awmod@dividend,f
  4329  1D06  09F3               	comf	___awmod@dividend+1,f
  4330  1D07  0AF2               	incf	___awmod@dividend,f
  4331  1D08  1903               	skipnz
  4332  1D09  0AF3               	incf	___awmod@dividend+1,f
  4333  1D0A                     l2506:	
  4334  1D0A  01F6               	clrf	___awmod@sign
  4335  1D0B  0AF6               	incf	___awmod@sign,f
  4336  1D0C                     l2508:	
  4337  1D0C  1FF1               	btfss	___awmod@divisor+1,7
  4338  1D0D  2D0F               	goto	u3251
  4339  1D0E  2D10               	goto	u3250
  4340  1D0F                     u3251:	
  4341  1D0F  2D15               	goto	l2512
  4342  1D10                     u3250:	
  4343  1D10                     l2510:	
  4344  1D10  09F0               	comf	___awmod@divisor,f
  4345  1D11  09F1               	comf	___awmod@divisor+1,f
  4346  1D12  0AF0               	incf	___awmod@divisor,f
  4347  1D13  1903               	skipnz
  4348  1D14  0AF1               	incf	___awmod@divisor+1,f
  4349  1D15                     l2512:	
  4350  1D15  0870               	movf	___awmod@divisor,w
  4351  1D16  0471               	iorwf	___awmod@divisor+1,w
  4352  1D17  1903               	btfsc	3,2
  4353  1D18  2D1A               	goto	u3261
  4354  1D19  2D1B               	goto	u3260
  4355  1D1A                     u3261:	
  4356  1D1A  2D4A               	goto	l2530
  4357  1D1B                     u3260:	
  4358  1D1B                     l2514:	
  4359  1D1B  01F5               	clrf	___awmod@counter
  4360  1D1C  0AF5               	incf	___awmod@counter,f
  4361  1D1D  2D29               	goto	l2520
  4362  1D1E                     l2516:	
  4363  1D1E  3001               	movlw	1
  4364  1D1F                     u3275:	
  4365  1D1F  1003               	clrc
  4366  1D20  0DF0               	rlf	___awmod@divisor,f
  4367  1D21  0DF1               	rlf	___awmod@divisor+1,f
  4368  1D22  3EFF               	addlw	-1
  4369  1D23  1D03               	skipz
  4370  1D24  2D1F               	goto	u3275
  4371  1D25                     l2518:	
  4372  1D25  3001               	movlw	1
  4373  1D26  00F4               	movwf	??___awmod
  4374  1D27  0874               	movf	??___awmod,w
  4375  1D28  07F5               	addwf	___awmod@counter,f
  4376  1D29                     l2520:	
  4377  1D29  1FF1               	btfss	___awmod@divisor+1,7
  4378  1D2A  2D2C               	goto	u3281
  4379  1D2B  2D2D               	goto	u3280
  4380  1D2C                     u3281:	
  4381  1D2C  2D1E               	goto	l2516
  4382  1D2D                     u3280:	
  4383  1D2D                     l2522:	
  4384  1D2D  0871               	movf	___awmod@divisor+1,w
  4385  1D2E  0273               	subwf	___awmod@dividend+1,w
  4386  1D2F  1D03               	skipz
  4387  1D30  2D33               	goto	u3295
  4388  1D31  0870               	movf	___awmod@divisor,w
  4389  1D32  0272               	subwf	___awmod@dividend,w
  4390  1D33                     u3295:	
  4391  1D33  1C03               	skipc
  4392  1D34  2D36               	goto	u3291
  4393  1D35  2D37               	goto	u3290
  4394  1D36                     u3291:	
  4395  1D36  2D3D               	goto	l2526
  4396  1D37                     u3290:	
  4397  1D37                     l2524:	
  4398  1D37  0870               	movf	___awmod@divisor,w
  4399  1D38  02F2               	subwf	___awmod@dividend,f
  4400  1D39  0871               	movf	___awmod@divisor+1,w
  4401  1D3A  1C03               	skipc
  4402  1D3B  03F3               	decf	___awmod@dividend+1,f
  4403  1D3C  02F3               	subwf	___awmod@dividend+1,f
  4404  1D3D                     l2526:	
  4405  1D3D  3001               	movlw	1
  4406  1D3E                     u3305:	
  4407  1D3E  1003               	clrc
  4408  1D3F  0CF1               	rrf	___awmod@divisor+1,f
  4409  1D40  0CF0               	rrf	___awmod@divisor,f
  4410  1D41  3EFF               	addlw	-1
  4411  1D42  1D03               	skipz
  4412  1D43  2D3E               	goto	u3305
  4413  1D44                     l2528:	
  4414  1D44  3001               	movlw	1
  4415  1D45  02F5               	subwf	___awmod@counter,f
  4416  1D46  1D03               	btfss	3,2
  4417  1D47  2D49               	goto	u3311
  4418  1D48  2D4A               	goto	u3310
  4419  1D49                     u3311:	
  4420  1D49  2D2D               	goto	l2522
  4421  1D4A                     u3310:	
  4422  1D4A                     l2530:	
  4423  1D4A  0876               	movf	___awmod@sign,w
  4424  1D4B  1903               	btfsc	3,2
  4425  1D4C  2D4E               	goto	u3321
  4426  1D4D  2D4F               	goto	u3320
  4427  1D4E                     u3321:	
  4428  1D4E  2D54               	goto	l2534
  4429  1D4F                     u3320:	
  4430  1D4F                     l2532:	
  4431  1D4F  09F2               	comf	___awmod@dividend,f
  4432  1D50  09F3               	comf	___awmod@dividend+1,f
  4433  1D51  0AF2               	incf	___awmod@dividend,f
  4434  1D52  1903               	skipnz
  4435  1D53  0AF3               	incf	___awmod@dividend+1,f
  4436  1D54                     l2534:	
  4437  1D54  0873               	movf	___awmod@dividend+1,w
  4438  1D55  00F1               	movwf	?___awmod+1
  4439  1D56  0872               	movf	___awmod@dividend,w
  4440  1D57  00F0               	movwf	?___awmod
  4441  1D58                     l525:	
  4442  1D58  0008               	return
  4443  1D59                     __end_of___awmod:	
  4444                           
  4445                           	psect	text4
  4446  1DBF                     __ptext4:	
  4447 ;; *************** function ___awdiv *****************
  4448 ;; Defined at:
  4449 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  divisor         2    7[COMMON] int 
  4452 ;;  dividend        2    9[COMMON] int 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  quotient        2    2[BANK0 ] int 
  4455 ;;  sign            1    1[BANK0 ] unsigned char 
  4456 ;;  counter         1    0[BANK0 ] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  2    7[COMMON] int 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4466 ;;      Params:         4       0       0       0       0
  4467 ;;      Locals:         0       4       0       0       0
  4468 ;;      Temps:          1       0       0       0       0
  4469 ;;      Totals:         5       4       0       0       0
  4470 ;;Total ram usage:        9 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_scale
  4476 ;;		_sprintf
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function ___awdiv
  4482  1DBF                     ___awdiv:	
  4483  1DBF                     l2456:	
  4484                           ;incstack = 0
  4485                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4486                           
  4487  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  4488  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  4489  1DC1  01A1               	clrf	___awdiv@sign
  4490  1DC2                     l2458:	
  4491  1DC2  1FF8               	btfss	___awdiv@divisor+1,7
  4492  1DC3  2DC5               	goto	u3141
  4493  1DC4  2DC6               	goto	u3140
  4494  1DC5                     u3141:	
  4495  1DC5  2DCD               	goto	l2464
  4496  1DC6                     u3140:	
  4497  1DC6                     l2460:	
  4498  1DC6  09F7               	comf	___awdiv@divisor,f
  4499  1DC7  09F8               	comf	___awdiv@divisor+1,f
  4500  1DC8  0AF7               	incf	___awdiv@divisor,f
  4501  1DC9  1903               	skipnz
  4502  1DCA  0AF8               	incf	___awdiv@divisor+1,f
  4503  1DCB                     l2462:	
  4504  1DCB  01A1               	clrf	___awdiv@sign
  4505  1DCC  0AA1               	incf	___awdiv@sign,f
  4506  1DCD                     l2464:	
  4507  1DCD  1FFA               	btfss	___awdiv@dividend+1,7
  4508  1DCE  2DD0               	goto	u3151
  4509  1DCF  2DD1               	goto	u3150
  4510  1DD0                     u3151:	
  4511  1DD0  2DDA               	goto	l2470
  4512  1DD1                     u3150:	
  4513  1DD1                     l2466:	
  4514  1DD1  09F9               	comf	___awdiv@dividend,f
  4515  1DD2  09FA               	comf	___awdiv@dividend+1,f
  4516  1DD3  0AF9               	incf	___awdiv@dividend,f
  4517  1DD4  1903               	skipnz
  4518  1DD5  0AFA               	incf	___awdiv@dividend+1,f
  4519  1DD6                     l2468:	
  4520  1DD6  3001               	movlw	1
  4521  1DD7  00FB               	movwf	??___awdiv
  4522  1DD8  087B               	movf	??___awdiv,w
  4523  1DD9  06A1               	xorwf	___awdiv@sign,f
  4524  1DDA                     l2470:	
  4525  1DDA  01A2               	clrf	___awdiv@quotient
  4526  1DDB  01A3               	clrf	___awdiv@quotient+1
  4527  1DDC                     l2472:	
  4528  1DDC  0877               	movf	___awdiv@divisor,w
  4529  1DDD  0478               	iorwf	___awdiv@divisor+1,w
  4530  1DDE  1903               	btfsc	3,2
  4531  1DDF  2DE1               	goto	u3161
  4532  1DE0  2DE2               	goto	u3160
  4533  1DE1                     u3161:	
  4534  1DE1  2E19               	goto	l2492
  4535  1DE2                     u3160:	
  4536  1DE2                     l2474:	
  4537  1DE2  01A0               	clrf	___awdiv@counter
  4538  1DE3  0AA0               	incf	___awdiv@counter,f
  4539  1DE4  2DF0               	goto	l2480
  4540  1DE5                     l2476:	
  4541  1DE5  3001               	movlw	1
  4542  1DE6                     u3175:	
  4543  1DE6  1003               	clrc
  4544  1DE7  0DF7               	rlf	___awdiv@divisor,f
  4545  1DE8  0DF8               	rlf	___awdiv@divisor+1,f
  4546  1DE9  3EFF               	addlw	-1
  4547  1DEA  1D03               	skipz
  4548  1DEB  2DE6               	goto	u3175
  4549  1DEC                     l2478:	
  4550  1DEC  3001               	movlw	1
  4551  1DED  00FB               	movwf	??___awdiv
  4552  1DEE  087B               	movf	??___awdiv,w
  4553  1DEF  07A0               	addwf	___awdiv@counter,f
  4554  1DF0                     l2480:	
  4555  1DF0  1FF8               	btfss	___awdiv@divisor+1,7
  4556  1DF1  2DF3               	goto	u3181
  4557  1DF2  2DF4               	goto	u3180
  4558  1DF3                     u3181:	
  4559  1DF3  2DE5               	goto	l2476
  4560  1DF4                     u3180:	
  4561  1DF4                     l2482:	
  4562  1DF4  3001               	movlw	1
  4563  1DF5                     u3195:	
  4564  1DF5  1003               	clrc
  4565  1DF6  0DA2               	rlf	___awdiv@quotient,f
  4566  1DF7  0DA3               	rlf	___awdiv@quotient+1,f
  4567  1DF8  3EFF               	addlw	-1
  4568  1DF9  1D03               	skipz
  4569  1DFA  2DF5               	goto	u3195
  4570  1DFB  0878               	movf	___awdiv@divisor+1,w
  4571  1DFC  027A               	subwf	___awdiv@dividend+1,w
  4572  1DFD  1D03               	skipz
  4573  1DFE  2E01               	goto	u3205
  4574  1DFF  0877               	movf	___awdiv@divisor,w
  4575  1E00  0279               	subwf	___awdiv@dividend,w
  4576  1E01                     u3205:	
  4577  1E01  1C03               	skipc
  4578  1E02  2E04               	goto	u3201
  4579  1E03  2E05               	goto	u3200
  4580  1E04                     u3201:	
  4581  1E04  2E0C               	goto	l2488
  4582  1E05                     u3200:	
  4583  1E05                     l2484:	
  4584  1E05  0877               	movf	___awdiv@divisor,w
  4585  1E06  02F9               	subwf	___awdiv@dividend,f
  4586  1E07  0878               	movf	___awdiv@divisor+1,w
  4587  1E08  1C03               	skipc
  4588  1E09  03FA               	decf	___awdiv@dividend+1,f
  4589  1E0A  02FA               	subwf	___awdiv@dividend+1,f
  4590  1E0B                     l2486:	
  4591  1E0B  1422               	bsf	___awdiv@quotient,0
  4592  1E0C                     l2488:	
  4593  1E0C  3001               	movlw	1
  4594  1E0D                     u3215:	
  4595  1E0D  1003               	clrc
  4596  1E0E  0CF8               	rrf	___awdiv@divisor+1,f
  4597  1E0F  0CF7               	rrf	___awdiv@divisor,f
  4598  1E10  3EFF               	addlw	-1
  4599  1E11  1D03               	skipz
  4600  1E12  2E0D               	goto	u3215
  4601  1E13                     l2490:	
  4602  1E13  3001               	movlw	1
  4603  1E14  02A0               	subwf	___awdiv@counter,f
  4604  1E15  1D03               	btfss	3,2
  4605  1E16  2E18               	goto	u3221
  4606  1E17  2E19               	goto	u3220
  4607  1E18                     u3221:	
  4608  1E18  2DF4               	goto	l2482
  4609  1E19                     u3220:	
  4610  1E19                     l2492:	
  4611  1E19  0821               	movf	___awdiv@sign,w
  4612  1E1A  1903               	btfsc	3,2
  4613  1E1B  2E1D               	goto	u3231
  4614  1E1C  2E1E               	goto	u3230
  4615  1E1D                     u3231:	
  4616  1E1D  2E23               	goto	l2496
  4617  1E1E                     u3230:	
  4618  1E1E                     l2494:	
  4619  1E1E  09A2               	comf	___awdiv@quotient,f
  4620  1E1F  09A3               	comf	___awdiv@quotient+1,f
  4621  1E20  0AA2               	incf	___awdiv@quotient,f
  4622  1E21  1903               	skipnz
  4623  1E22  0AA3               	incf	___awdiv@quotient+1,f
  4624  1E23                     l2496:	
  4625  1E23  0823               	movf	___awdiv@quotient+1,w
  4626  1E24  00F8               	movwf	?___awdiv+1
  4627  1E25  0822               	movf	___awdiv@quotient,w
  4628  1E26  00F7               	movwf	?___awdiv
  4629  1E27                     l512:	
  4630  1E27  0008               	return
  4631  1E28                     __end_of___awdiv:	
  4632                           
  4633                           	psect	text5
  4634  1A83                     __ptext5:	
  4635 ;; *************** function _isdigit *****************
  4636 ;; Defined at:
  4637 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  c               1    wreg     unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  c               1    1[COMMON] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;		None               void
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4651 ;;      Params:         0       0       0       0       0
  4652 ;;      Locals:         2       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0
  4654 ;;      Totals:         2       0       0       0       0
  4655 ;;Total ram usage:        2 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_sprintf
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _isdigit
  4666  1A83                     _isdigit:	
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4670                           ;isdigit@c stored from wreg
  4671  1A83  00F1               	movwf	isdigit@c
  4672  1A84                     l3000:	
  4673  1A84  01F0               	clrf	_isdigit$930
  4674  1A85                     l3002:	
  4675  1A85  303A               	movlw	58
  4676  1A86  0271               	subwf	isdigit@c,w
  4677  1A87  1803               	skipnc
  4678  1A88  2A8A               	goto	u4541
  4679  1A89  2A8B               	goto	u4540
  4680  1A8A                     u4541:	
  4681  1A8A  2A93               	goto	l3008
  4682  1A8B                     u4540:	
  4683  1A8B                     l3004:	
  4684  1A8B  3030               	movlw	48
  4685  1A8C  0271               	subwf	isdigit@c,w
  4686  1A8D  1C03               	skipc
  4687  1A8E  2A90               	goto	u4551
  4688  1A8F  2A91               	goto	u4550
  4689  1A90                     u4551:	
  4690  1A90  2A93               	goto	l3008
  4691  1A91                     u4550:	
  4692  1A91                     l3006:	
  4693  1A91  01F0               	clrf	_isdigit$930
  4694  1A92  0AF0               	incf	_isdigit$930,f
  4695  1A93                     l3008:	
  4696  1A93  0C70               	rrf	_isdigit$930,w
  4697  1A94                     l840:	
  4698  1A94  0008               	return
  4699  1A95                     __end_of_isdigit:	
  4700                           
  4701                           	psect	text6
  4702  136D                     __ptext6:	
  4703 ;; *************** function _fround *****************
  4704 ;; Defined at:
  4705 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  prec            1    wreg     unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  prec            1   49[BANK0 ] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  4   30[BANK0 ] unsigned char 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       4       0       0       0
  4720 ;;      Locals:         0       9       0       0       0
  4721 ;;      Temps:          0       7       0       0       0
  4722 ;;      Totals:         0      20       0       0       0
  4723 ;;Total ram usage:       20 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    2
  4726 ;; This function calls:
  4727 ;;		___flmul
  4728 ;;		___lwdiv
  4729 ;;		___lwmod
  4730 ;; This function is called by:
  4731 ;;		_sprintf
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function _fround
  4737  136D                     _fround:	
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4741                           ;fround@prec stored from wreg
  4742  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4743  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4744  136F  00D1               	movwf	fround@prec
  4745  1370                     l2942:	
  4746                           
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4748  1370  306E               	movlw	110
  4749  1371  0251               	subwf	fround@prec,w
  4750  1372  1C03               	skipc
  4751  1373  2B75               	goto	u4291
  4752  1374  2B76               	goto	u4290
  4753  1375                     u4291:	
  4754  1375  2C83               	goto	l2950
  4755  1376                     u4290:	
  4756  1376                     l2944:	
  4757                           
  4758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4759  1376  303F               	movlw	63
  4760  1377  00A7               	movwf	___flmul@b+3
  4761  1378  3000               	movlw	0
  4762  1379  00A6               	movwf	___flmul@b+2
  4763  137A  3000               	movlw	0
  4764  137B  00A5               	movwf	___flmul@b+1
  4765  137C  3000               	movlw	0
  4766  137D  00A4               	movwf	___flmul@b
  4767  137E  3064               	movlw	100
  4768  137F  00F6               	movwf	___lwdiv@divisor
  4769  1380  3000               	movlw	0
  4770  1381  00F7               	movwf	___lwdiv@divisor+1
  4771  1382  0851               	movf	fround@prec,w
  4772  1383  00C2               	movwf	??_fround
  4773  1384  01C3               	clrf	??_fround+1
  4774  1385  0842               	movf	??_fround,w
  4775  1386  00F8               	movwf	___lwdiv@dividend
  4776  1387  0843               	movf	??_fround+1,w
  4777  1388  00F9               	movwf	___lwdiv@dividend+1
  4778  1389  160A  158A  23D4  160A  118A  	fcall	___lwdiv
  4779  138E  0876               	movf	?___lwdiv,w
  4780  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4781  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4782  1391  00C4               	movwf	??_fround+2
  4783  1392  3001               	movlw	1
  4784  1393                     u4305:	
  4785  1393  1003               	clrc
  4786  1394  0DC4               	rlf	??_fround+2,f
  4787  1395  3EFF               	addlw	-1
  4788  1396  1D03               	skipz
  4789  1397  2B93               	goto	u4305
  4790  1398  1003               	clrc
  4791  1399  0D44               	rlf	??_fround+2,w
  4792  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4793  139B  0084               	movwf	4
  4794  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  4795  13A1  00C5               	movwf	??_fround+3
  4796  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  4797  13A7  00C6               	movwf	??_fround+4
  4798  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  4799  13AD  00C7               	movwf	??_fround+5
  4800  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  4801  13B3  00C8               	movwf	??_fround+6
  4802  13B4  0848               	movf	??_fround+6,w
  4803  13B5  00AB               	movwf	___flmul@a+3
  4804  13B6  0847               	movf	??_fround+5,w
  4805  13B7  00AA               	movwf	___flmul@a+2
  4806  13B8  0846               	movf	??_fround+4,w
  4807  13B9  00A9               	movwf	___flmul@a+1
  4808  13BA  0845               	movf	??_fround+3,w
  4809  13BB  00A8               	movwf	___flmul@a
  4810  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4811  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4812  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4813  13C3  0827               	movf	?___flmul+3,w
  4814  13C4  00D0               	movwf	_fround$1127+3
  4815  13C5  0826               	movf	?___flmul+2,w
  4816  13C6  00CF               	movwf	_fround$1127+2
  4817  13C7  0825               	movf	?___flmul+1,w
  4818  13C8  00CE               	movwf	_fround$1127+1
  4819  13C9  0824               	movf	?___flmul,w
  4820  13CA  00CD               	movwf	_fround$1127
  4821                           
  4822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4823  13CB  300A               	movlw	10
  4824  13CC  00F6               	movwf	___lwdiv@divisor
  4825  13CD  3000               	movlw	0
  4826  13CE  00F7               	movwf	___lwdiv@divisor+1
  4827  13CF  0851               	movf	fround@prec,w
  4828  13D0  00C2               	movwf	??_fround
  4829  13D1  01C3               	clrf	??_fround+1
  4830  13D2  0842               	movf	??_fround,w
  4831  13D3  00F2               	movwf	___lwmod@dividend
  4832  13D4  0843               	movf	??_fround+1,w
  4833  13D5  00F3               	movwf	___lwmod@dividend+1
  4834  13D6  3064               	movlw	100
  4835  13D7  00F0               	movwf	___lwmod@divisor
  4836  13D8  3000               	movlw	0
  4837  13D9  00F1               	movwf	___lwmod@divisor+1
  4838  13DA  160A  158A  231A  160A  118A  	fcall	___lwmod
  4839  13DF  0871               	movf	?___lwmod+1,w
  4840  13E0  00F9               	movwf	___lwdiv@dividend+1
  4841  13E1  0870               	movf	?___lwmod,w
  4842  13E2  00F8               	movwf	___lwdiv@dividend
  4843  13E3  160A  158A  23D4  160A  118A  	fcall	___lwdiv
  4844  13E8  0876               	movf	?___lwdiv,w
  4845  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4846  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4847  13EB  00C4               	movwf	??_fround+2
  4848  13EC  3001               	movlw	1
  4849  13ED                     u4315:	
  4850  13ED  1003               	clrc
  4851  13EE  0DC4               	rlf	??_fround+2,f
  4852  13EF  3EFF               	addlw	-1
  4853  13F0  1D03               	skipz
  4854  13F1  2BED               	goto	u4315
  4855  13F2  1003               	clrc
  4856  13F3  0D44               	rlf	??_fround+2,w
  4857  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4858  13F5  0084               	movwf	4
  4859  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  4860  13FB  00C5               	movwf	??_fround+3
  4861  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  4862  1401  00C6               	movwf	??_fround+4
  4863  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  4864  1407  00C7               	movwf	??_fround+5
  4865  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  4866  140D  00C8               	movwf	??_fround+6
  4867  140E  0848               	movf	??_fround+6,w
  4868  140F  00A7               	movwf	___flmul@b+3
  4869  1410  0847               	movf	??_fround+5,w
  4870  1411  00A6               	movwf	___flmul@b+2
  4871  1412  0846               	movf	??_fround+4,w
  4872  1413  00A5               	movwf	___flmul@b+1
  4873  1414  0845               	movf	??_fround+3,w
  4874  1415  00A4               	movwf	___flmul@b
  4875  1416  0850               	movf	_fround$1127+3,w
  4876  1417  00AB               	movwf	___flmul@a+3
  4877  1418  084F               	movf	_fround$1127+2,w
  4878  1419  00AA               	movwf	___flmul@a+2
  4879  141A  084E               	movf	_fround$1127+1,w
  4880  141B  00A9               	movwf	___flmul@a+1
  4881  141C  084D               	movf	_fround$1127,w
  4882  141D  00A8               	movwf	___flmul@a
  4883  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4884  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4885  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4886  1425  0827               	movf	?___flmul+3,w
  4887  1426  00CC               	movwf	_fround$1128+3
  4888  1427  0826               	movf	?___flmul+2,w
  4889  1428  00CB               	movwf	_fround$1128+2
  4890  1429  0825               	movf	?___flmul+1,w
  4891  142A  00CA               	movwf	_fround$1128+1
  4892  142B  0824               	movf	?___flmul,w
  4893  142C  00C9               	movwf	_fround$1128
  4894                           
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4896  142D  300A               	movlw	10
  4897  142E  00F0               	movwf	___lwmod@divisor
  4898  142F  3000               	movlw	0
  4899  1430  00F1               	movwf	___lwmod@divisor+1
  4900  1431  0851               	movf	fround@prec,w
  4901  1432  00C2               	movwf	??_fround
  4902  1433  01C3               	clrf	??_fround+1
  4903  1434  0842               	movf	??_fround,w
  4904  1435  00F2               	movwf	___lwmod@dividend
  4905  1436  0843               	movf	??_fround+1,w
  4906  1437  00F3               	movwf	___lwmod@dividend+1
  4907  1438  160A  158A  231A  160A  118A  	fcall	___lwmod
  4908  143D  0870               	movf	?___lwmod,w
  4909  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4910  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4911  1440  00C4               	movwf	??_fround+2
  4912  1441  3001               	movlw	1
  4913  1442                     u4325:	
  4914  1442  1003               	clrc
  4915  1443  0DC4               	rlf	??_fround+2,f
  4916  1444  3EFF               	addlw	-1
  4917  1445  1D03               	skipz
  4918  1446  2C42               	goto	u4325
  4919  1447  1003               	clrc
  4920  1448  0D44               	rlf	??_fround+2,w
  4921  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4922  144A  0084               	movwf	4
  4923  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  4924  1450  00C5               	movwf	??_fround+3
  4925  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  4926  1456  00C6               	movwf	??_fround+4
  4927  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  4928  145C  00C7               	movwf	??_fround+5
  4929  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  4930  1462  00C8               	movwf	??_fround+6
  4931  1463  0848               	movf	??_fround+6,w
  4932  1464  00A7               	movwf	___flmul@b+3
  4933  1465  0847               	movf	??_fround+5,w
  4934  1466  00A6               	movwf	___flmul@b+2
  4935  1467  0846               	movf	??_fround+4,w
  4936  1468  00A5               	movwf	___flmul@b+1
  4937  1469  0845               	movf	??_fround+3,w
  4938  146A  00A4               	movwf	___flmul@b
  4939  146B  084C               	movf	_fround$1128+3,w
  4940  146C  00AB               	movwf	___flmul@a+3
  4941  146D  084B               	movf	_fround$1128+2,w
  4942  146E  00AA               	movwf	___flmul@a+2
  4943  146F  084A               	movf	_fround$1128+1,w
  4944  1470  00A9               	movwf	___flmul@a+1
  4945  1471  0849               	movf	_fround$1128,w
  4946  1472  00A8               	movwf	___flmul@a
  4947  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  4948  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4949  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4950  147A  0827               	movf	?___flmul+3,w
  4951  147B  00C1               	movwf	?_fround+3
  4952  147C  0826               	movf	?___flmul+2,w
  4953  147D  00C0               	movwf	?_fround+2
  4954  147E  0825               	movf	?___flmul+1,w
  4955  147F  00BF               	movwf	?_fround+1
  4956  1480  0824               	movf	?___flmul,w
  4957  1481  00BE               	movwf	?_fround
  4958  1482  2D77               	goto	l282
  4959  1483                     l2950:	
  4960  1483  300B               	movlw	11
  4961  1484  0251               	subwf	fround@prec,w
  4962  1485  1C03               	skipc
  4963  1486  2C88               	goto	u4331
  4964  1487  2C89               	goto	u4330
  4965  1488                     u4331:	
  4966  1488  2D34               	goto	l2956
  4967  1489                     u4330:	
  4968  1489                     l2952:	
  4969                           
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4971  1489  303F               	movlw	63
  4972  148A  00A7               	movwf	___flmul@b+3
  4973  148B  3000               	movlw	0
  4974  148C  00A6               	movwf	___flmul@b+2
  4975  148D  3000               	movlw	0
  4976  148E  00A5               	movwf	___flmul@b+1
  4977  148F  3000               	movlw	0
  4978  1490  00A4               	movwf	___flmul@b
  4979  1491  300A               	movlw	10
  4980  1492  00F6               	movwf	___lwdiv@divisor
  4981  1493  3000               	movlw	0
  4982  1494  00F7               	movwf	___lwdiv@divisor+1
  4983  1495  0851               	movf	fround@prec,w
  4984  1496  00C2               	movwf	??_fround
  4985  1497  01C3               	clrf	??_fround+1
  4986  1498  0842               	movf	??_fround,w
  4987  1499  00F8               	movwf	___lwdiv@dividend
  4988  149A  0843               	movf	??_fround+1,w
  4989  149B  00F9               	movwf	___lwdiv@dividend+1
  4990  149C  160A  158A  23D4  160A  118A  	fcall	___lwdiv
  4991  14A1  0876               	movf	?___lwdiv,w
  4992  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4993  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4994  14A4  00C4               	movwf	??_fround+2
  4995  14A5  3001               	movlw	1
  4996  14A6                     u4345:	
  4997  14A6  1003               	clrc
  4998  14A7  0DC4               	rlf	??_fround+2,f
  4999  14A8  3EFF               	addlw	-1
  5000  14A9  1D03               	skipz
  5001  14AA  2CA6               	goto	u4345
  5002  14AB  1003               	clrc
  5003  14AC  0D44               	rlf	??_fround+2,w
  5004  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5005  14AE  0084               	movwf	4
  5006  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5007  14B4  00C5               	movwf	??_fround+3
  5008  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5009  14BA  00C6               	movwf	??_fround+4
  5010  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5011  14C0  00C7               	movwf	??_fround+5
  5012  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5013  14C6  00C8               	movwf	??_fround+6
  5014  14C7  0848               	movf	??_fround+6,w
  5015  14C8  00AB               	movwf	___flmul@a+3
  5016  14C9  0847               	movf	??_fround+5,w
  5017  14CA  00AA               	movwf	___flmul@a+2
  5018  14CB  0846               	movf	??_fround+4,w
  5019  14CC  00A9               	movwf	___flmul@a+1
  5020  14CD  0845               	movf	??_fround+3,w
  5021  14CE  00A8               	movwf	___flmul@a
  5022  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5023  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5024  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5025  14D6  0827               	movf	?___flmul+3,w
  5026  14D7  00D0               	movwf	_fround$1127+3
  5027  14D8  0826               	movf	?___flmul+2,w
  5028  14D9  00CF               	movwf	_fround$1127+2
  5029  14DA  0825               	movf	?___flmul+1,w
  5030  14DB  00CE               	movwf	_fround$1127+1
  5031  14DC  0824               	movf	?___flmul,w
  5032  14DD  00CD               	movwf	_fround$1127
  5033                           
  5034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5035  14DE  300A               	movlw	10
  5036  14DF  00F0               	movwf	___lwmod@divisor
  5037  14E0  3000               	movlw	0
  5038  14E1  00F1               	movwf	___lwmod@divisor+1
  5039  14E2  0851               	movf	fround@prec,w
  5040  14E3  00C2               	movwf	??_fround
  5041  14E4  01C3               	clrf	??_fround+1
  5042  14E5  0842               	movf	??_fround,w
  5043  14E6  00F2               	movwf	___lwmod@dividend
  5044  14E7  0843               	movf	??_fround+1,w
  5045  14E8  00F3               	movwf	___lwmod@dividend+1
  5046  14E9  160A  158A  231A  160A  118A  	fcall	___lwmod
  5047  14EE  0870               	movf	?___lwmod,w
  5048  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5049  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5050  14F1  00C4               	movwf	??_fround+2
  5051  14F2  3001               	movlw	1
  5052  14F3                     u4355:	
  5053  14F3  1003               	clrc
  5054  14F4  0DC4               	rlf	??_fround+2,f
  5055  14F5  3EFF               	addlw	-1
  5056  14F6  1D03               	skipz
  5057  14F7  2CF3               	goto	u4355
  5058  14F8  1003               	clrc
  5059  14F9  0D44               	rlf	??_fround+2,w
  5060  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5061  14FB  0084               	movwf	4
  5062  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5063  1501  00C5               	movwf	??_fround+3
  5064  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5065  1507  00C6               	movwf	??_fround+4
  5066  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5067  150D  00C7               	movwf	??_fround+5
  5068  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5069  1513  00C8               	movwf	??_fround+6
  5070  1514  0848               	movf	??_fround+6,w
  5071  1515  00A7               	movwf	___flmul@b+3
  5072  1516  0847               	movf	??_fround+5,w
  5073  1517  00A6               	movwf	___flmul@b+2
  5074  1518  0846               	movf	??_fround+4,w
  5075  1519  00A5               	movwf	___flmul@b+1
  5076  151A  0845               	movf	??_fround+3,w
  5077  151B  00A4               	movwf	___flmul@b
  5078  151C  0850               	movf	_fround$1127+3,w
  5079  151D  00AB               	movwf	___flmul@a+3
  5080  151E  084F               	movf	_fround$1127+2,w
  5081  151F  00AA               	movwf	___flmul@a+2
  5082  1520  084E               	movf	_fround$1127+1,w
  5083  1521  00A9               	movwf	___flmul@a+1
  5084  1522  084D               	movf	_fround$1127,w
  5085  1523  00A8               	movwf	___flmul@a
  5086  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5087  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5088  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5089  152B  0827               	movf	?___flmul+3,w
  5090  152C  00C1               	movwf	?_fround+3
  5091  152D  0826               	movf	?___flmul+2,w
  5092  152E  00C0               	movwf	?_fround+2
  5093  152F  0825               	movf	?___flmul+1,w
  5094  1530  00BF               	movwf	?_fround+1
  5095  1531  0824               	movf	?___flmul,w
  5096  1532  00BE               	movwf	?_fround
  5097  1533  2D77               	goto	l282
  5098  1534                     l2956:	
  5099                           
  5100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5101  1534  303F               	movlw	63
  5102  1535  00A7               	movwf	___flmul@b+3
  5103  1536  3000               	movlw	0
  5104  1537  00A6               	movwf	___flmul@b+2
  5105  1538  3000               	movlw	0
  5106  1539  00A5               	movwf	___flmul@b+1
  5107  153A  3000               	movlw	0
  5108  153B  00A4               	movwf	___flmul@b
  5109  153C  0851               	movf	fround@prec,w
  5110  153D  00C2               	movwf	??_fround
  5111  153E  3001               	movlw	1
  5112  153F                     u4365:	
  5113  153F  1003               	clrc
  5114  1540  0DC2               	rlf	??_fround,f
  5115  1541  3EFF               	addlw	-1
  5116  1542  1D03               	skipz
  5117  1543  2D3F               	goto	u4365
  5118  1544  1003               	clrc
  5119  1545  0D42               	rlf	??_fround,w
  5120  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5121  1547  0084               	movwf	4
  5122  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5123  154D  00C3               	movwf	??_fround+1
  5124  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5125  1553  00C4               	movwf	??_fround+2
  5126  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5127  1559  00C5               	movwf	??_fround+3
  5128  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5129  155F  00C6               	movwf	??_fround+4
  5130  1560  0846               	movf	??_fround+4,w
  5131  1561  00AB               	movwf	___flmul@a+3
  5132  1562  0845               	movf	??_fround+3,w
  5133  1563  00AA               	movwf	___flmul@a+2
  5134  1564  0844               	movf	??_fround+2,w
  5135  1565  00A9               	movwf	___flmul@a+1
  5136  1566  0843               	movf	??_fround+1,w
  5137  1567  00A8               	movwf	___flmul@a
  5138  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5139  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5140  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5141  156F  0827               	movf	?___flmul+3,w
  5142  1570  00C1               	movwf	?_fround+3
  5143  1571  0826               	movf	?___flmul+2,w
  5144  1572  00C0               	movwf	?_fround+2
  5145  1573  0825               	movf	?___flmul+1,w
  5146  1574  00BF               	movwf	?_fround+1
  5147  1575  0824               	movf	?___flmul,w
  5148  1576  00BE               	movwf	?_fround
  5149  1577                     l282:	
  5150  1577  0008               	return
  5151  1578                     __end_of_fround:	
  5152                           
  5153                           	psect	text7
  5154  1B1A                     __ptext7:	
  5155 ;; *************** function ___lwmod *****************
  5156 ;; Defined at:
  5157 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  divisor         2    0[COMMON] unsigned int 
  5160 ;;  dividend        2    2[COMMON] unsigned int 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  counter         1    5[COMMON] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  2    0[COMMON] unsigned int 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5172 ;;      Params:         4       0       0       0       0
  5173 ;;      Locals:         1       0       0       0       0
  5174 ;;      Temps:          1       0       0       0       0
  5175 ;;      Totals:         6       0       0       0       0
  5176 ;;Total ram usage:        6 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_fround
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           
  5186                           ;psect for function ___lwmod
  5187  1B1A                     ___lwmod:	
  5188  1B1A                     l2564:	
  5189                           ;incstack = 0
  5190                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5191                           
  5192  1B1A  0870               	movf	___lwmod@divisor,w
  5193  1B1B  0471               	iorwf	___lwmod@divisor+1,w
  5194  1B1C  1903               	btfsc	3,2
  5195  1B1D  2B1F               	goto	u3401
  5196  1B1E  2B20               	goto	u3400
  5197  1B1F                     u3401:	
  5198  1B1F  2B4F               	goto	l2582
  5199  1B20                     u3400:	
  5200  1B20                     l2566:	
  5201  1B20  01F5               	clrf	___lwmod@counter
  5202  1B21  0AF5               	incf	___lwmod@counter,f
  5203  1B22  2B2E               	goto	l2572
  5204  1B23                     l2568:	
  5205  1B23  3001               	movlw	1
  5206  1B24                     u3415:	
  5207  1B24  1003               	clrc
  5208  1B25  0DF0               	rlf	___lwmod@divisor,f
  5209  1B26  0DF1               	rlf	___lwmod@divisor+1,f
  5210  1B27  3EFF               	addlw	-1
  5211  1B28  1D03               	skipz
  5212  1B29  2B24               	goto	u3415
  5213  1B2A                     l2570:	
  5214  1B2A  3001               	movlw	1
  5215  1B2B  00F4               	movwf	??___lwmod
  5216  1B2C  0874               	movf	??___lwmod,w
  5217  1B2D  07F5               	addwf	___lwmod@counter,f
  5218  1B2E                     l2572:	
  5219  1B2E  1FF1               	btfss	___lwmod@divisor+1,7
  5220  1B2F  2B31               	goto	u3421
  5221  1B30  2B32               	goto	u3420
  5222  1B31                     u3421:	
  5223  1B31  2B23               	goto	l2568
  5224  1B32                     u3420:	
  5225  1B32                     l2574:	
  5226  1B32  0871               	movf	___lwmod@divisor+1,w
  5227  1B33  0273               	subwf	___lwmod@dividend+1,w
  5228  1B34  1D03               	skipz
  5229  1B35  2B38               	goto	u3435
  5230  1B36  0870               	movf	___lwmod@divisor,w
  5231  1B37  0272               	subwf	___lwmod@dividend,w
  5232  1B38                     u3435:	
  5233  1B38  1C03               	skipc
  5234  1B39  2B3B               	goto	u3431
  5235  1B3A  2B3C               	goto	u3430
  5236  1B3B                     u3431:	
  5237  1B3B  2B42               	goto	l2578
  5238  1B3C                     u3430:	
  5239  1B3C                     l2576:	
  5240  1B3C  0870               	movf	___lwmod@divisor,w
  5241  1B3D  02F2               	subwf	___lwmod@dividend,f
  5242  1B3E  0871               	movf	___lwmod@divisor+1,w
  5243  1B3F  1C03               	skipc
  5244  1B40  03F3               	decf	___lwmod@dividend+1,f
  5245  1B41  02F3               	subwf	___lwmod@dividend+1,f
  5246  1B42                     l2578:	
  5247  1B42  3001               	movlw	1
  5248  1B43                     u3445:	
  5249  1B43  1003               	clrc
  5250  1B44  0CF1               	rrf	___lwmod@divisor+1,f
  5251  1B45  0CF0               	rrf	___lwmod@divisor,f
  5252  1B46  3EFF               	addlw	-1
  5253  1B47  1D03               	skipz
  5254  1B48  2B43               	goto	u3445
  5255  1B49                     l2580:	
  5256  1B49  3001               	movlw	1
  5257  1B4A  02F5               	subwf	___lwmod@counter,f
  5258  1B4B  1D03               	btfss	3,2
  5259  1B4C  2B4E               	goto	u3451
  5260  1B4D  2B4F               	goto	u3450
  5261  1B4E                     u3451:	
  5262  1B4E  2B32               	goto	l2574
  5263  1B4F                     u3450:	
  5264  1B4F                     l2582:	
  5265  1B4F  0873               	movf	___lwmod@dividend+1,w
  5266  1B50  00F1               	movwf	?___lwmod+1
  5267  1B51  0872               	movf	___lwmod@dividend,w
  5268  1B52  00F0               	movwf	?___lwmod
  5269  1B53                     l675:	
  5270  1B53  0008               	return
  5271  1B54                     __end_of___lwmod:	
  5272                           
  5273                           	psect	text8
  5274  1BD4                     __ptext8:	
  5275 ;; *************** function ___lwdiv *****************
  5276 ;; Defined at:
  5277 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  divisor         2    6[COMMON] unsigned int 
  5280 ;;  dividend        2    8[COMMON] unsigned int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  quotient        2   11[COMMON] unsigned int 
  5283 ;;  counter         1   13[COMMON] unsigned char 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  2    6[COMMON] unsigned int 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5293 ;;      Params:         4       0       0       0       0
  5294 ;;      Locals:         3       0       0       0       0
  5295 ;;      Temps:          1       0       0       0       0
  5296 ;;      Totals:         8       0       0       0       0
  5297 ;;Total ram usage:        8 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_fround
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function ___lwdiv
  5308  1BD4                     ___lwdiv:	
  5309  1BD4                     l2538:	
  5310                           ;incstack = 0
  5311                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5312                           
  5313  1BD4  01FB               	clrf	___lwdiv@quotient
  5314  1BD5  01FC               	clrf	___lwdiv@quotient+1
  5315  1BD6                     l2540:	
  5316  1BD6  0876               	movf	___lwdiv@divisor,w
  5317  1BD7  0477               	iorwf	___lwdiv@divisor+1,w
  5318  1BD8  1903               	btfsc	3,2
  5319  1BD9  2BDB               	goto	u3331
  5320  1BDA  2BDC               	goto	u3330
  5321  1BDB                     u3331:	
  5322  1BDB  2C13               	goto	l2560
  5323  1BDC                     u3330:	
  5324  1BDC                     l2542:	
  5325  1BDC  01FD               	clrf	___lwdiv@counter
  5326  1BDD  0AFD               	incf	___lwdiv@counter,f
  5327  1BDE  2BEA               	goto	l2548
  5328  1BDF                     l2544:	
  5329  1BDF  3001               	movlw	1
  5330  1BE0                     u3345:	
  5331  1BE0  1003               	clrc
  5332  1BE1  0DF6               	rlf	___lwdiv@divisor,f
  5333  1BE2  0DF7               	rlf	___lwdiv@divisor+1,f
  5334  1BE3  3EFF               	addlw	-1
  5335  1BE4  1D03               	skipz
  5336  1BE5  2BE0               	goto	u3345
  5337  1BE6                     l2546:	
  5338  1BE6  3001               	movlw	1
  5339  1BE7  00FA               	movwf	??___lwdiv
  5340  1BE8  087A               	movf	??___lwdiv,w
  5341  1BE9  07FD               	addwf	___lwdiv@counter,f
  5342  1BEA                     l2548:	
  5343  1BEA  1FF7               	btfss	___lwdiv@divisor+1,7
  5344  1BEB  2BED               	goto	u3351
  5345  1BEC  2BEE               	goto	u3350
  5346  1BED                     u3351:	
  5347  1BED  2BDF               	goto	l2544
  5348  1BEE                     u3350:	
  5349  1BEE                     l2550:	
  5350  1BEE  3001               	movlw	1
  5351  1BEF                     u3365:	
  5352  1BEF  1003               	clrc
  5353  1BF0  0DFB               	rlf	___lwdiv@quotient,f
  5354  1BF1  0DFC               	rlf	___lwdiv@quotient+1,f
  5355  1BF2  3EFF               	addlw	-1
  5356  1BF3  1D03               	skipz
  5357  1BF4  2BEF               	goto	u3365
  5358  1BF5  0877               	movf	___lwdiv@divisor+1,w
  5359  1BF6  0279               	subwf	___lwdiv@dividend+1,w
  5360  1BF7  1D03               	skipz
  5361  1BF8  2BFB               	goto	u3375
  5362  1BF9  0876               	movf	___lwdiv@divisor,w
  5363  1BFA  0278               	subwf	___lwdiv@dividend,w
  5364  1BFB                     u3375:	
  5365  1BFB  1C03               	skipc
  5366  1BFC  2BFE               	goto	u3371
  5367  1BFD  2BFF               	goto	u3370
  5368  1BFE                     u3371:	
  5369  1BFE  2C06               	goto	l2556
  5370  1BFF                     u3370:	
  5371  1BFF                     l2552:	
  5372  1BFF  0876               	movf	___lwdiv@divisor,w
  5373  1C00  02F8               	subwf	___lwdiv@dividend,f
  5374  1C01  0877               	movf	___lwdiv@divisor+1,w
  5375  1C02  1C03               	skipc
  5376  1C03  03F9               	decf	___lwdiv@dividend+1,f
  5377  1C04  02F9               	subwf	___lwdiv@dividend+1,f
  5378  1C05                     l2554:	
  5379  1C05  147B               	bsf	___lwdiv@quotient,0
  5380  1C06                     l2556:	
  5381  1C06  3001               	movlw	1
  5382  1C07                     u3385:	
  5383  1C07  1003               	clrc
  5384  1C08  0CF7               	rrf	___lwdiv@divisor+1,f
  5385  1C09  0CF6               	rrf	___lwdiv@divisor,f
  5386  1C0A  3EFF               	addlw	-1
  5387  1C0B  1D03               	skipz
  5388  1C0C  2C07               	goto	u3385
  5389  1C0D                     l2558:	
  5390  1C0D  3001               	movlw	1
  5391  1C0E  02FD               	subwf	___lwdiv@counter,f
  5392  1C0F  1D03               	btfss	3,2
  5393  1C10  2C12               	goto	u3391
  5394  1C11  2C13               	goto	u3390
  5395  1C12                     u3391:	
  5396  1C12  2BEE               	goto	l2550
  5397  1C13                     u3390:	
  5398  1C13                     l2560:	
  5399  1C13  087C               	movf	___lwdiv@quotient+1,w
  5400  1C14  00F7               	movwf	?___lwdiv+1
  5401  1C15  087B               	movf	___lwdiv@quotient,w
  5402  1C16  00F6               	movwf	?___lwdiv
  5403  1C17                     l665:	
  5404  1C17  0008               	return
  5405  1C18                     __end_of___lwdiv:	
  5406                           
  5407                           	psect	text9
  5408  0C9F                     __ptext9:	
  5409 ;; *************** function ___flmul *****************
  5410 ;; Defined at:
  5411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  b               4    4[BANK0 ] unsigned int 
  5414 ;;  a               4    8[BANK0 ] unsigned int 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  prod            4   24[BANK0 ] struct .
  5417 ;;  grs             4   18[BANK0 ] unsigned long 
  5418 ;;  temp            2   28[BANK0 ] struct .
  5419 ;;  bexp            1   23[BANK0 ] unsigned char 
  5420 ;;  aexp            1   22[BANK0 ] unsigned char 
  5421 ;;  sign            1   17[BANK0 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  4    4[BANK0 ] unsigned char 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5431 ;;      Params:         0       8       0       0       0
  5432 ;;      Locals:         0      13       0       0       0
  5433 ;;      Temps:          0       5       0       0       0
  5434 ;;      Totals:         0      26       0       0       0
  5435 ;;Total ram usage:       26 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    1
  5438 ;; This function calls:
  5439 ;;		__Umul8_16
  5440 ;; This function is called by:
  5441 ;;		_fround
  5442 ;;		_scale
  5443 ;;		_sprintf
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           
  5448                           ;psect for function ___flmul
  5449  0C9F                     ___flmul:	
  5450  0C9F                     l2780:	
  5451                           ;incstack = 0
  5452                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5453                           
  5454  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5455  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5456  0CA1  0827               	movf	___flmul@b+3,w
  5457  0CA2  3980               	andlw	128
  5458  0CA3  00AC               	movwf	??___flmul
  5459  0CA4  082C               	movf	??___flmul,w
  5460  0CA5  00B1               	movwf	___flmul@sign
  5461  0CA6                     l2782:	
  5462  0CA6  0827               	movf	___flmul@b+3,w
  5463  0CA7  00AC               	movwf	??___flmul
  5464  0CA8  072C               	addwf	??___flmul,w
  5465  0CA9  00AD               	movwf	??___flmul+1
  5466  0CAA  082D               	movf	??___flmul+1,w
  5467  0CAB  00B7               	movwf	___flmul@bexp
  5468  0CAC                     l2784:	
  5469  0CAC  1FA6               	btfss	___flmul@b+2,7
  5470  0CAD  2CAF               	goto	u3921
  5471  0CAE  2CB0               	goto	u3920
  5472  0CAF                     u3921:	
  5473  0CAF  2CB1               	goto	l2788
  5474  0CB0                     u3920:	
  5475  0CB0                     l2786:	
  5476  0CB0  1437               	bsf	___flmul@bexp,0
  5477  0CB1                     l2788:	
  5478  0CB1  0837               	movf	___flmul@bexp,w
  5479  0CB2  1903               	btfsc	3,2
  5480  0CB3  2CB5               	goto	u3931
  5481  0CB4  2CB6               	goto	u3930
  5482  0CB5                     u3931:	
  5483  0CB5  2CC5               	goto	l2796
  5484  0CB6                     u3930:	
  5485  0CB6                     l2790:	
  5486  0CB6  0A37               	incf	___flmul@bexp,w
  5487  0CB7  1D03               	btfss	3,2
  5488  0CB8  2CBA               	goto	u3941
  5489  0CB9  2CBB               	goto	u3940
  5490  0CBA                     u3941:	
  5491  0CBA  2CC3               	goto	l2794
  5492  0CBB                     u3940:	
  5493  0CBB                     l2792:	
  5494  0CBB  3000               	movlw	0
  5495  0CBC  00A7               	movwf	___flmul@b+3
  5496  0CBD  3000               	movlw	0
  5497  0CBE  00A6               	movwf	___flmul@b+2
  5498  0CBF  3000               	movlw	0
  5499  0CC0  00A5               	movwf	___flmul@b+1
  5500  0CC1  3000               	movlw	0
  5501  0CC2  00A4               	movwf	___flmul@b
  5502  0CC3                     l2794:	
  5503  0CC3  17A6               	bsf	___flmul@b+2,7
  5504  0CC4  2CCD               	goto	l2798
  5505  0CC5                     l2796:	
  5506  0CC5  3000               	movlw	0
  5507  0CC6  00A7               	movwf	___flmul@b+3
  5508  0CC7  3000               	movlw	0
  5509  0CC8  00A6               	movwf	___flmul@b+2
  5510  0CC9  3000               	movlw	0
  5511  0CCA  00A5               	movwf	___flmul@b+1
  5512  0CCB  3000               	movlw	0
  5513  0CCC  00A4               	movwf	___flmul@b
  5514  0CCD                     l2798:	
  5515  0CCD  082B               	movf	___flmul@a+3,w
  5516  0CCE  3980               	andlw	128
  5517  0CCF  00AC               	movwf	??___flmul
  5518  0CD0  082C               	movf	??___flmul,w
  5519  0CD1  06B1               	xorwf	___flmul@sign,f
  5520  0CD2                     l2800:	
  5521  0CD2  082B               	movf	___flmul@a+3,w
  5522  0CD3  00AC               	movwf	??___flmul
  5523  0CD4  072C               	addwf	??___flmul,w
  5524  0CD5  00AD               	movwf	??___flmul+1
  5525  0CD6  082D               	movf	??___flmul+1,w
  5526  0CD7  00B6               	movwf	___flmul@aexp
  5527  0CD8                     l2802:	
  5528  0CD8  1FAA               	btfss	___flmul@a+2,7
  5529  0CD9  2CDB               	goto	u3951
  5530  0CDA  2CDC               	goto	u3950
  5531  0CDB                     u3951:	
  5532  0CDB  2CDD               	goto	l2806
  5533  0CDC                     u3950:	
  5534  0CDC                     l2804:	
  5535  0CDC  1436               	bsf	___flmul@aexp,0
  5536  0CDD                     l2806:	
  5537  0CDD  0836               	movf	___flmul@aexp,w
  5538  0CDE  1903               	btfsc	3,2
  5539  0CDF  2CE1               	goto	u3961
  5540  0CE0  2CE2               	goto	u3960
  5541  0CE1                     u3961:	
  5542  0CE1  2CF1               	goto	l2814
  5543  0CE2                     u3960:	
  5544  0CE2                     l2808:	
  5545  0CE2  0A36               	incf	___flmul@aexp,w
  5546  0CE3  1D03               	btfss	3,2
  5547  0CE4  2CE6               	goto	u3971
  5548  0CE5  2CE7               	goto	u3970
  5549  0CE6                     u3971:	
  5550  0CE6  2CEF               	goto	l2812
  5551  0CE7                     u3970:	
  5552  0CE7                     l2810:	
  5553  0CE7  3000               	movlw	0
  5554  0CE8  00AB               	movwf	___flmul@a+3
  5555  0CE9  3000               	movlw	0
  5556  0CEA  00AA               	movwf	___flmul@a+2
  5557  0CEB  3000               	movlw	0
  5558  0CEC  00A9               	movwf	___flmul@a+1
  5559  0CED  3000               	movlw	0
  5560  0CEE  00A8               	movwf	___flmul@a
  5561  0CEF                     l2812:	
  5562  0CEF  17AA               	bsf	___flmul@a+2,7
  5563  0CF0  2CF9               	goto	l2816
  5564  0CF1                     l2814:	
  5565  0CF1  3000               	movlw	0
  5566  0CF2  00AB               	movwf	___flmul@a+3
  5567  0CF3  3000               	movlw	0
  5568  0CF4  00AA               	movwf	___flmul@a+2
  5569  0CF5  3000               	movlw	0
  5570  0CF6  00A9               	movwf	___flmul@a+1
  5571  0CF7  3000               	movlw	0
  5572  0CF8  00A8               	movwf	___flmul@a
  5573  0CF9                     l2816:	
  5574  0CF9  0836               	movf	___flmul@aexp,w
  5575  0CFA  1903               	btfsc	3,2
  5576  0CFB  2CFD               	goto	u3981
  5577  0CFC  2CFE               	goto	u3980
  5578  0CFD                     u3981:	
  5579  0CFD  2D03               	goto	l2820
  5580  0CFE                     u3980:	
  5581  0CFE                     l2818:	
  5582  0CFE  0837               	movf	___flmul@bexp,w
  5583  0CFF  1D03               	btfss	3,2
  5584  0D00  2D02               	goto	u3991
  5585  0D01  2D03               	goto	u3990
  5586  0D02                     u3991:	
  5587  0D02  2D0C               	goto	l2824
  5588  0D03                     u3990:	
  5589  0D03                     l2820:	
  5590  0D03  3000               	movlw	0
  5591  0D04  00A7               	movwf	?___flmul+3
  5592  0D05  3000               	movlw	0
  5593  0D06  00A6               	movwf	?___flmul+2
  5594  0D07  3000               	movlw	0
  5595  0D08  00A5               	movwf	?___flmul+1
  5596  0D09  3000               	movlw	0
  5597  0D0A  00A4               	movwf	?___flmul
  5598  0D0B  2FFF               	goto	l782
  5599  0D0C                     l2824:	
  5600  0D0C  0824               	movf	___flmul@b,w
  5601  0D0D  00AC               	movwf	??___flmul
  5602  0D0E  082C               	movf	??___flmul,w
  5603  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5604  0D10  082A               	movf	___flmul@a+2,w
  5605  0D11  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5606  0D16  0871               	movf	?__Umul8_16+1,w
  5607  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0D19  00BD               	movwf	___flmul@temp+1
  5610  0D1A  0870               	movf	?__Umul8_16,w
  5611  0D1B  00BC               	movwf	___flmul@temp
  5612  0D1C                     l2826:	
  5613  0D1C  083C               	movf	___flmul@temp,w
  5614  0D1D  00AC               	movwf	??___flmul
  5615  0D1E  01AD               	clrf	??___flmul+1
  5616  0D1F  01AE               	clrf	??___flmul+2
  5617  0D20  01AF               	clrf	??___flmul+3
  5618  0D21  082F               	movf	??___flmul+3,w
  5619  0D22  00B5               	movwf	___flmul@grs+3
  5620  0D23  082E               	movf	??___flmul+2,w
  5621  0D24  00B4               	movwf	___flmul@grs+2
  5622  0D25  082D               	movf	??___flmul+1,w
  5623  0D26  00B3               	movwf	___flmul@grs+1
  5624  0D27  082C               	movf	??___flmul,w
  5625  0D28  00B2               	movwf	___flmul@grs
  5626  0D29                     l2828:	
  5627  0D29  083D               	movf	___flmul@temp+1,w
  5628  0D2A  00AC               	movwf	??___flmul
  5629  0D2B  01AD               	clrf	??___flmul+1
  5630  0D2C  01AE               	clrf	??___flmul+2
  5631  0D2D  01AF               	clrf	??___flmul+3
  5632  0D2E  082F               	movf	??___flmul+3,w
  5633  0D2F  00BB               	movwf	___flmul@prod+3
  5634  0D30  082E               	movf	??___flmul+2,w
  5635  0D31  00BA               	movwf	___flmul@prod+2
  5636  0D32  082D               	movf	??___flmul+1,w
  5637  0D33  00B9               	movwf	___flmul@prod+1
  5638  0D34  082C               	movf	??___flmul,w
  5639  0D35  00B8               	movwf	___flmul@prod
  5640  0D36  0825               	movf	___flmul@b+1,w
  5641  0D37  00AC               	movwf	??___flmul
  5642  0D38  082C               	movf	??___flmul,w
  5643  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5644  0D3A  0829               	movf	___flmul@a+1,w
  5645  0D3B  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5646  0D40  0871               	movf	?__Umul8_16+1,w
  5647  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0D43  00BD               	movwf	___flmul@temp+1
  5650  0D44  0870               	movf	?__Umul8_16,w
  5651  0D45  00BC               	movwf	___flmul@temp
  5652  0D46                     l2830:	
  5653  0D46  083C               	movf	___flmul@temp,w
  5654  0D47  00AC               	movwf	??___flmul
  5655  0D48  01AD               	clrf	??___flmul+1
  5656  0D49  01AE               	clrf	??___flmul+2
  5657  0D4A  01AF               	clrf	??___flmul+3
  5658  0D4B  082C               	movf	??___flmul,w
  5659  0D4C  07B2               	addwf	___flmul@grs,f
  5660  0D4D  082D               	movf	??___flmul+1,w
  5661  0D4E  1103               	clrz
  5662  0D4F  1803               	skipnc
  5663  0D50  3E01               	addlw	1
  5664  0D51  1903               	skipnz
  5665  0D52  2D54               	goto	u4001
  5666  0D53  07B3               	addwf	___flmul@grs+1,f
  5667  0D54                     u4001:	
  5668  0D54  082E               	movf	??___flmul+2,w
  5669  0D55  1103               	clrz
  5670  0D56  1803               	skipnc
  5671  0D57  3E01               	addlw	1
  5672  0D58  1903               	skipnz
  5673  0D59  2D5B               	goto	u4002
  5674  0D5A  07B4               	addwf	___flmul@grs+2,f
  5675  0D5B                     u4002:	
  5676  0D5B  082F               	movf	??___flmul+3,w
  5677  0D5C  1103               	clrz
  5678  0D5D  1803               	skipnc
  5679  0D5E  3E01               	addlw	1
  5680  0D5F  1903               	skipnz
  5681  0D60  2D62               	goto	u4003
  5682  0D61  07B5               	addwf	___flmul@grs+3,f
  5683  0D62                     u4003:	
  5684  0D62                     l2832:	
  5685  0D62  083D               	movf	___flmul@temp+1,w
  5686  0D63  00AC               	movwf	??___flmul
  5687  0D64  01AD               	clrf	??___flmul+1
  5688  0D65  01AE               	clrf	??___flmul+2
  5689  0D66  01AF               	clrf	??___flmul+3
  5690  0D67  082C               	movf	??___flmul,w
  5691  0D68  07B8               	addwf	___flmul@prod,f
  5692  0D69  082D               	movf	??___flmul+1,w
  5693  0D6A  1103               	clrz
  5694  0D6B  1803               	skipnc
  5695  0D6C  3E01               	addlw	1
  5696  0D6D  1903               	skipnz
  5697  0D6E  2D70               	goto	u4011
  5698  0D6F  07B9               	addwf	___flmul@prod+1,f
  5699  0D70                     u4011:	
  5700  0D70  082E               	movf	??___flmul+2,w
  5701  0D71  1103               	clrz
  5702  0D72  1803               	skipnc
  5703  0D73  3E01               	addlw	1
  5704  0D74  1903               	skipnz
  5705  0D75  2D77               	goto	u4012
  5706  0D76  07BA               	addwf	___flmul@prod+2,f
  5707  0D77                     u4012:	
  5708  0D77  082F               	movf	??___flmul+3,w
  5709  0D78  1103               	clrz
  5710  0D79  1803               	skipnc
  5711  0D7A  3E01               	addlw	1
  5712  0D7B  1903               	skipnz
  5713  0D7C  2D7E               	goto	u4013
  5714  0D7D  07BB               	addwf	___flmul@prod+3,f
  5715  0D7E                     u4013:	
  5716  0D7E  0826               	movf	___flmul@b+2,w
  5717  0D7F  00AC               	movwf	??___flmul
  5718  0D80  082C               	movf	??___flmul,w
  5719  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5720  0D82  0828               	movf	___flmul@a,w
  5721  0D83  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5722  0D88  0871               	movf	?__Umul8_16+1,w
  5723  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0D8B  00BD               	movwf	___flmul@temp+1
  5726  0D8C  0870               	movf	?__Umul8_16,w
  5727  0D8D  00BC               	movwf	___flmul@temp
  5728  0D8E                     l2834:	
  5729  0D8E  083C               	movf	___flmul@temp,w
  5730  0D8F  00AC               	movwf	??___flmul
  5731  0D90  01AD               	clrf	??___flmul+1
  5732  0D91  01AE               	clrf	??___flmul+2
  5733  0D92  01AF               	clrf	??___flmul+3
  5734  0D93  082C               	movf	??___flmul,w
  5735  0D94  07B2               	addwf	___flmul@grs,f
  5736  0D95  082D               	movf	??___flmul+1,w
  5737  0D96  1103               	clrz
  5738  0D97  1803               	skipnc
  5739  0D98  3E01               	addlw	1
  5740  0D99  1903               	skipnz
  5741  0D9A  2D9C               	goto	u4021
  5742  0D9B  07B3               	addwf	___flmul@grs+1,f
  5743  0D9C                     u4021:	
  5744  0D9C  082E               	movf	??___flmul+2,w
  5745  0D9D  1103               	clrz
  5746  0D9E  1803               	skipnc
  5747  0D9F  3E01               	addlw	1
  5748  0DA0  1903               	skipnz
  5749  0DA1  2DA3               	goto	u4022
  5750  0DA2  07B4               	addwf	___flmul@grs+2,f
  5751  0DA3                     u4022:	
  5752  0DA3  082F               	movf	??___flmul+3,w
  5753  0DA4  1103               	clrz
  5754  0DA5  1803               	skipnc
  5755  0DA6  3E01               	addlw	1
  5756  0DA7  1903               	skipnz
  5757  0DA8  2DAA               	goto	u4023
  5758  0DA9  07B5               	addwf	___flmul@grs+3,f
  5759  0DAA                     u4023:	
  5760  0DAA                     l2836:	
  5761  0DAA  083D               	movf	___flmul@temp+1,w
  5762  0DAB  00AC               	movwf	??___flmul
  5763  0DAC  01AD               	clrf	??___flmul+1
  5764  0DAD  01AE               	clrf	??___flmul+2
  5765  0DAE  01AF               	clrf	??___flmul+3
  5766  0DAF  082C               	movf	??___flmul,w
  5767  0DB0  07B8               	addwf	___flmul@prod,f
  5768  0DB1  082D               	movf	??___flmul+1,w
  5769  0DB2  1103               	clrz
  5770  0DB3  1803               	skipnc
  5771  0DB4  3E01               	addlw	1
  5772  0DB5  1903               	skipnz
  5773  0DB6  2DB8               	goto	u4031
  5774  0DB7  07B9               	addwf	___flmul@prod+1,f
  5775  0DB8                     u4031:	
  5776  0DB8  082E               	movf	??___flmul+2,w
  5777  0DB9  1103               	clrz
  5778  0DBA  1803               	skipnc
  5779  0DBB  3E01               	addlw	1
  5780  0DBC  1903               	skipnz
  5781  0DBD  2DBF               	goto	u4032
  5782  0DBE  07BA               	addwf	___flmul@prod+2,f
  5783  0DBF                     u4032:	
  5784  0DBF  082F               	movf	??___flmul+3,w
  5785  0DC0  1103               	clrz
  5786  0DC1  1803               	skipnc
  5787  0DC2  3E01               	addlw	1
  5788  0DC3  1903               	skipnz
  5789  0DC4  2DC6               	goto	u4033
  5790  0DC5  07BB               	addwf	___flmul@prod+3,f
  5791  0DC6                     u4033:	
  5792  0DC6                     l2838:	
  5793  0DC6  3008               	movlw	8
  5794  0DC7  00AC               	movwf	??___flmul
  5795  0DC8                     u4045:	
  5796  0DC8  1003               	clrc
  5797  0DC9  0DB2               	rlf	___flmul@grs,f
  5798  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5799  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5800  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5801  0DCD  0BAC               	decfsz	??___flmul,f
  5802  0DCE  2DC8               	goto	u4045
  5803  0DCF                     l2840:	
  5804  0DCF  0825               	movf	___flmul@b+1,w
  5805  0DD0  00AC               	movwf	??___flmul
  5806  0DD1  082C               	movf	??___flmul,w
  5807  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5808  0DD3  0828               	movf	___flmul@a,w
  5809  0DD4  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5810  0DD9  0871               	movf	?__Umul8_16+1,w
  5811  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5812  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5813  0DDC  00BD               	movwf	___flmul@temp+1
  5814  0DDD  0870               	movf	?__Umul8_16,w
  5815  0DDE  00BC               	movwf	___flmul@temp
  5816  0DDF                     l2842:	
  5817  0DDF  083C               	movf	___flmul@temp,w
  5818  0DE0  00AC               	movwf	??___flmul
  5819  0DE1  083D               	movf	___flmul@temp+1,w
  5820  0DE2  00AD               	movwf	??___flmul+1
  5821  0DE3  01AE               	clrf	??___flmul+2
  5822  0DE4  01AF               	clrf	??___flmul+3
  5823  0DE5  082C               	movf	??___flmul,w
  5824  0DE6  07B2               	addwf	___flmul@grs,f
  5825  0DE7  082D               	movf	??___flmul+1,w
  5826  0DE8  1103               	clrz
  5827  0DE9  1803               	skipnc
  5828  0DEA  3E01               	addlw	1
  5829  0DEB  1903               	skipnz
  5830  0DEC  2DEE               	goto	u4051
  5831  0DED  07B3               	addwf	___flmul@grs+1,f
  5832  0DEE                     u4051:	
  5833  0DEE  082E               	movf	??___flmul+2,w
  5834  0DEF  1103               	clrz
  5835  0DF0  1803               	skipnc
  5836  0DF1  3E01               	addlw	1
  5837  0DF2  1903               	skipnz
  5838  0DF3  2DF5               	goto	u4052
  5839  0DF4  07B4               	addwf	___flmul@grs+2,f
  5840  0DF5                     u4052:	
  5841  0DF5  082F               	movf	??___flmul+3,w
  5842  0DF6  1103               	clrz
  5843  0DF7  1803               	skipnc
  5844  0DF8  3E01               	addlw	1
  5845  0DF9  1903               	skipnz
  5846  0DFA  2DFC               	goto	u4053
  5847  0DFB  07B5               	addwf	___flmul@grs+3,f
  5848  0DFC                     u4053:	
  5849  0DFC                     l2844:	
  5850  0DFC  0824               	movf	___flmul@b,w
  5851  0DFD  00AC               	movwf	??___flmul
  5852  0DFE  082C               	movf	??___flmul,w
  5853  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5854  0E00  0829               	movf	___flmul@a+1,w
  5855  0E01  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5856  0E06  0871               	movf	?__Umul8_16+1,w
  5857  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0E09  00BD               	movwf	___flmul@temp+1
  5860  0E0A  0870               	movf	?__Umul8_16,w
  5861  0E0B  00BC               	movwf	___flmul@temp
  5862  0E0C                     l2846:	
  5863  0E0C  083C               	movf	___flmul@temp,w
  5864  0E0D  00AC               	movwf	??___flmul
  5865  0E0E  083D               	movf	___flmul@temp+1,w
  5866  0E0F  00AD               	movwf	??___flmul+1
  5867  0E10  01AE               	clrf	??___flmul+2
  5868  0E11  01AF               	clrf	??___flmul+3
  5869  0E12  082C               	movf	??___flmul,w
  5870  0E13  07B2               	addwf	___flmul@grs,f
  5871  0E14  082D               	movf	??___flmul+1,w
  5872  0E15  1103               	clrz
  5873  0E16  1803               	skipnc
  5874  0E17  3E01               	addlw	1
  5875  0E18  1903               	skipnz
  5876  0E19  2E1B               	goto	u4061
  5877  0E1A  07B3               	addwf	___flmul@grs+1,f
  5878  0E1B                     u4061:	
  5879  0E1B  082E               	movf	??___flmul+2,w
  5880  0E1C  1103               	clrz
  5881  0E1D  1803               	skipnc
  5882  0E1E  3E01               	addlw	1
  5883  0E1F  1903               	skipnz
  5884  0E20  2E22               	goto	u4062
  5885  0E21  07B4               	addwf	___flmul@grs+2,f
  5886  0E22                     u4062:	
  5887  0E22  082F               	movf	??___flmul+3,w
  5888  0E23  1103               	clrz
  5889  0E24  1803               	skipnc
  5890  0E25  3E01               	addlw	1
  5891  0E26  1903               	skipnz
  5892  0E27  2E29               	goto	u4063
  5893  0E28  07B5               	addwf	___flmul@grs+3,f
  5894  0E29                     u4063:	
  5895  0E29                     l2848:	
  5896  0E29  3008               	movlw	8
  5897  0E2A  00AC               	movwf	??___flmul
  5898  0E2B                     u4075:	
  5899  0E2B  1003               	clrc
  5900  0E2C  0DB2               	rlf	___flmul@grs,f
  5901  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5902  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5903  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5904  0E30  0BAC               	decfsz	??___flmul,f
  5905  0E31  2E2B               	goto	u4075
  5906  0E32  0824               	movf	___flmul@b,w
  5907  0E33  00AC               	movwf	??___flmul
  5908  0E34  082C               	movf	??___flmul,w
  5909  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5910  0E36  0828               	movf	___flmul@a,w
  5911  0E37  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5912  0E3C  0871               	movf	?__Umul8_16+1,w
  5913  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0E3F  00BD               	movwf	___flmul@temp+1
  5916  0E40  0870               	movf	?__Umul8_16,w
  5917  0E41  00BC               	movwf	___flmul@temp
  5918  0E42                     l2850:	
  5919  0E42  083C               	movf	___flmul@temp,w
  5920  0E43  00AC               	movwf	??___flmul
  5921  0E44  083D               	movf	___flmul@temp+1,w
  5922  0E45  00AD               	movwf	??___flmul+1
  5923  0E46  01AE               	clrf	??___flmul+2
  5924  0E47  01AF               	clrf	??___flmul+3
  5925  0E48  082C               	movf	??___flmul,w
  5926  0E49  07B2               	addwf	___flmul@grs,f
  5927  0E4A  082D               	movf	??___flmul+1,w
  5928  0E4B  1103               	clrz
  5929  0E4C  1803               	skipnc
  5930  0E4D  3E01               	addlw	1
  5931  0E4E  1903               	skipnz
  5932  0E4F  2E51               	goto	u4081
  5933  0E50  07B3               	addwf	___flmul@grs+1,f
  5934  0E51                     u4081:	
  5935  0E51  082E               	movf	??___flmul+2,w
  5936  0E52  1103               	clrz
  5937  0E53  1803               	skipnc
  5938  0E54  3E01               	addlw	1
  5939  0E55  1903               	skipnz
  5940  0E56  2E58               	goto	u4082
  5941  0E57  07B4               	addwf	___flmul@grs+2,f
  5942  0E58                     u4082:	
  5943  0E58  082F               	movf	??___flmul+3,w
  5944  0E59  1103               	clrz
  5945  0E5A  1803               	skipnc
  5946  0E5B  3E01               	addlw	1
  5947  0E5C  1903               	skipnz
  5948  0E5D  2E5F               	goto	u4083
  5949  0E5E  07B5               	addwf	___flmul@grs+3,f
  5950  0E5F                     u4083:	
  5951  0E5F                     l2852:	
  5952  0E5F  0825               	movf	___flmul@b+1,w
  5953  0E60  00AC               	movwf	??___flmul
  5954  0E61  082C               	movf	??___flmul,w
  5955  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5956  0E63  082A               	movf	___flmul@a+2,w
  5957  0E64  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  5958  0E69  0871               	movf	?__Umul8_16+1,w
  5959  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5960  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5961  0E6C  00BD               	movwf	___flmul@temp+1
  5962  0E6D  0870               	movf	?__Umul8_16,w
  5963  0E6E  00BC               	movwf	___flmul@temp
  5964  0E6F  083C               	movf	___flmul@temp,w
  5965  0E70  00AC               	movwf	??___flmul
  5966  0E71  083D               	movf	___flmul@temp+1,w
  5967  0E72  00AD               	movwf	??___flmul+1
  5968  0E73  01AE               	clrf	??___flmul+2
  5969  0E74  01AF               	clrf	??___flmul+3
  5970  0E75  082C               	movf	??___flmul,w
  5971  0E76  07B8               	addwf	___flmul@prod,f
  5972  0E77  082D               	movf	??___flmul+1,w
  5973  0E78  1103               	clrz
  5974  0E79  1803               	skipnc
  5975  0E7A  3E01               	addlw	1
  5976  0E7B  1903               	skipnz
  5977  0E7C  2E7E               	goto	u4091
  5978  0E7D  07B9               	addwf	___flmul@prod+1,f
  5979  0E7E                     u4091:	
  5980  0E7E  082E               	movf	??___flmul+2,w
  5981  0E7F  1103               	clrz
  5982  0E80  1803               	skipnc
  5983  0E81  3E01               	addlw	1
  5984  0E82  1903               	skipnz
  5985  0E83  2E85               	goto	u4092
  5986  0E84  07BA               	addwf	___flmul@prod+2,f
  5987  0E85                     u4092:	
  5988  0E85  082F               	movf	??___flmul+3,w
  5989  0E86  1103               	clrz
  5990  0E87  1803               	skipnc
  5991  0E88  3E01               	addlw	1
  5992  0E89  1903               	skipnz
  5993  0E8A  2E8C               	goto	u4093
  5994  0E8B  07BB               	addwf	___flmul@prod+3,f
  5995  0E8C                     u4093:	
  5996  0E8C                     l2854:	
  5997  0E8C  0826               	movf	___flmul@b+2,w
  5998  0E8D  00AC               	movwf	??___flmul
  5999  0E8E  082C               	movf	??___flmul,w
  6000  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6001  0E90  0829               	movf	___flmul@a+1,w
  6002  0E91  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  6003  0E96  0871               	movf	?__Umul8_16+1,w
  6004  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6006  0E99  00BD               	movwf	___flmul@temp+1
  6007  0E9A  0870               	movf	?__Umul8_16,w
  6008  0E9B  00BC               	movwf	___flmul@temp
  6009  0E9C                     l2856:	
  6010  0E9C  083C               	movf	___flmul@temp,w
  6011  0E9D  00AC               	movwf	??___flmul
  6012  0E9E  083D               	movf	___flmul@temp+1,w
  6013  0E9F  00AD               	movwf	??___flmul+1
  6014  0EA0  01AE               	clrf	??___flmul+2
  6015  0EA1  01AF               	clrf	??___flmul+3
  6016  0EA2  082C               	movf	??___flmul,w
  6017  0EA3  07B8               	addwf	___flmul@prod,f
  6018  0EA4  082D               	movf	??___flmul+1,w
  6019  0EA5  1103               	clrz
  6020  0EA6  1803               	skipnc
  6021  0EA7  3E01               	addlw	1
  6022  0EA8  1903               	skipnz
  6023  0EA9  2EAB               	goto	u4101
  6024  0EAA  07B9               	addwf	___flmul@prod+1,f
  6025  0EAB                     u4101:	
  6026  0EAB  082E               	movf	??___flmul+2,w
  6027  0EAC  1103               	clrz
  6028  0EAD  1803               	skipnc
  6029  0EAE  3E01               	addlw	1
  6030  0EAF  1903               	skipnz
  6031  0EB0  2EB2               	goto	u4102
  6032  0EB1  07BA               	addwf	___flmul@prod+2,f
  6033  0EB2                     u4102:	
  6034  0EB2  082F               	movf	??___flmul+3,w
  6035  0EB3  1103               	clrz
  6036  0EB4  1803               	skipnc
  6037  0EB5  3E01               	addlw	1
  6038  0EB6  1903               	skipnz
  6039  0EB7  2EB9               	goto	u4103
  6040  0EB8  07BB               	addwf	___flmul@prod+3,f
  6041  0EB9                     u4103:	
  6042  0EB9  0826               	movf	___flmul@b+2,w
  6043  0EBA  00AC               	movwf	??___flmul
  6044  0EBB  082C               	movf	??___flmul,w
  6045  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6046  0EBD  082A               	movf	___flmul@a+2,w
  6047  0EBE  120A  158A  200E  120A  158A  	fcall	__Umul8_16
  6048  0EC3  0871               	movf	?__Umul8_16+1,w
  6049  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6050  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6051  0EC6  00BD               	movwf	___flmul@temp+1
  6052  0EC7  0870               	movf	?__Umul8_16,w
  6053  0EC8  00BC               	movwf	___flmul@temp
  6054  0EC9                     l2858:	
  6055  0EC9  083C               	movf	___flmul@temp,w
  6056  0ECA  00AC               	movwf	??___flmul
  6057  0ECB  083D               	movf	___flmul@temp+1,w
  6058  0ECC  00AD               	movwf	??___flmul+1
  6059  0ECD  01AE               	clrf	??___flmul+2
  6060  0ECE  01AF               	clrf	??___flmul+3
  6061  0ECF  3008               	movlw	8
  6062  0ED0                     u4115:	
  6063  0ED0  1003               	clrc
  6064  0ED1  0DAC               	rlf	??___flmul,f
  6065  0ED2  0DAD               	rlf	??___flmul+1,f
  6066  0ED3  0DAE               	rlf	??___flmul+2,f
  6067  0ED4  0DAF               	rlf	??___flmul+3,f
  6068  0ED5                     u4110:	
  6069  0ED5  3EFF               	addlw	-1
  6070  0ED6  1D03               	skipz
  6071  0ED7  2ED0               	goto	u4115
  6072  0ED8  082C               	movf	??___flmul,w
  6073  0ED9  07B8               	addwf	___flmul@prod,f
  6074  0EDA  082D               	movf	??___flmul+1,w
  6075  0EDB  1103               	clrz
  6076  0EDC  1803               	skipnc
  6077  0EDD  3E01               	addlw	1
  6078  0EDE  1903               	skipnz
  6079  0EDF  2EE1               	goto	u4121
  6080  0EE0  07B9               	addwf	___flmul@prod+1,f
  6081  0EE1                     u4121:	
  6082  0EE1  082E               	movf	??___flmul+2,w
  6083  0EE2  1103               	clrz
  6084  0EE3  1803               	skipnc
  6085  0EE4  3E01               	addlw	1
  6086  0EE5  1903               	skipnz
  6087  0EE6  2EE8               	goto	u4122
  6088  0EE7  07BA               	addwf	___flmul@prod+2,f
  6089  0EE8                     u4122:	
  6090  0EE8  082F               	movf	??___flmul+3,w
  6091  0EE9  1103               	clrz
  6092  0EEA  1803               	skipnc
  6093  0EEB  3E01               	addlw	1
  6094  0EEC  1903               	skipnz
  6095  0EED  2EEF               	goto	u4123
  6096  0EEE  07BB               	addwf	___flmul@prod+3,f
  6097  0EEF                     u4123:	
  6098  0EEF                     l2860:	
  6099  0EEF  0832               	movf	___flmul@grs,w
  6100  0EF0  00AC               	movwf	??___flmul
  6101  0EF1  0833               	movf	___flmul@grs+1,w
  6102  0EF2  00AD               	movwf	??___flmul+1
  6103  0EF3  0834               	movf	___flmul@grs+2,w
  6104  0EF4  00AE               	movwf	??___flmul+2
  6105  0EF5  0835               	movf	___flmul@grs+3,w
  6106  0EF6  00AF               	movwf	??___flmul+3
  6107  0EF7  3018               	movlw	24
  6108  0EF8                     u4135:	
  6109  0EF8  1003               	clrc
  6110  0EF9  0CAF               	rrf	??___flmul+3,f
  6111  0EFA  0CAE               	rrf	??___flmul+2,f
  6112  0EFB  0CAD               	rrf	??___flmul+1,f
  6113  0EFC  0CAC               	rrf	??___flmul,f
  6114  0EFD                     u4130:	
  6115  0EFD  3EFF               	addlw	-1
  6116  0EFE  1D03               	skipz
  6117  0EFF  2EF8               	goto	u4135
  6118  0F00  082C               	movf	??___flmul,w
  6119  0F01  07B8               	addwf	___flmul@prod,f
  6120  0F02  082D               	movf	??___flmul+1,w
  6121  0F03  1103               	clrz
  6122  0F04  1803               	skipnc
  6123  0F05  3E01               	addlw	1
  6124  0F06  1903               	skipnz
  6125  0F07  2F09               	goto	u4141
  6126  0F08  07B9               	addwf	___flmul@prod+1,f
  6127  0F09                     u4141:	
  6128  0F09  082E               	movf	??___flmul+2,w
  6129  0F0A  1103               	clrz
  6130  0F0B  1803               	skipnc
  6131  0F0C  3E01               	addlw	1
  6132  0F0D  1903               	skipnz
  6133  0F0E  2F10               	goto	u4142
  6134  0F0F  07BA               	addwf	___flmul@prod+2,f
  6135  0F10                     u4142:	
  6136  0F10  082F               	movf	??___flmul+3,w
  6137  0F11  1103               	clrz
  6138  0F12  1803               	skipnc
  6139  0F13  3E01               	addlw	1
  6140  0F14  1903               	skipnz
  6141  0F15  2F17               	goto	u4143
  6142  0F16  07BB               	addwf	___flmul@prod+3,f
  6143  0F17                     u4143:	
  6144  0F17                     l2862:	
  6145  0F17  3008               	movlw	8
  6146  0F18  00AC               	movwf	??___flmul
  6147  0F19                     u4155:	
  6148  0F19  1003               	clrc
  6149  0F1A  0DB2               	rlf	___flmul@grs,f
  6150  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6151  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6152  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6153  0F1E  0BAC               	decfsz	??___flmul,f
  6154  0F1F  2F19               	goto	u4155
  6155  0F20                     l2864:	
  6156  0F20  0837               	movf	___flmul@bexp,w
  6157  0F21  0736               	addwf	___flmul@aexp,w
  6158  0F22  00AC               	movwf	??___flmul
  6159  0F23  01AD               	clrf	??___flmul+1
  6160  0F24  0DAD               	rlf	??___flmul+1,f
  6161  0F25  082C               	movf	??___flmul,w
  6162  0F26  3E82               	addlw	130
  6163  0F27  00BC               	movwf	___flmul@temp
  6164  0F28  082D               	movf	??___flmul+1,w
  6165  0F29  1803               	skipnc
  6166  0F2A  3E01               	addlw	1
  6167  0F2B  3EFF               	addlw	255
  6168  0F2C  00BD               	movwf	___flmul@temp+1
  6169  0F2D  2F4B               	goto	l2876
  6170  0F2E                     l2866:	
  6171  0F2E  3001               	movlw	1
  6172  0F2F  00AC               	movwf	??___flmul
  6173  0F30                     u4165:	
  6174  0F30  1003               	clrc
  6175  0F31  0DB8               	rlf	___flmul@prod,f
  6176  0F32  0DB9               	rlf	___flmul@prod+1,f
  6177  0F33  0DBA               	rlf	___flmul@prod+2,f
  6178  0F34  0DBB               	rlf	___flmul@prod+3,f
  6179  0F35  0BAC               	decfsz	??___flmul,f
  6180  0F36  2F30               	goto	u4165
  6181  0F37                     l2868:	
  6182  0F37  1FB5               	btfss	___flmul@grs+3,7
  6183  0F38  2F3A               	goto	u4171
  6184  0F39  2F3B               	goto	u4170
  6185  0F3A                     u4171:	
  6186  0F3A  2F3C               	goto	l2872
  6187  0F3B                     u4170:	
  6188  0F3B                     l2870:	
  6189  0F3B  1438               	bsf	___flmul@prod,0
  6190  0F3C                     l2872:	
  6191  0F3C  3001               	movlw	1
  6192  0F3D  00AC               	movwf	??___flmul
  6193  0F3E                     u4185:	
  6194  0F3E  1003               	clrc
  6195  0F3F  0DB2               	rlf	___flmul@grs,f
  6196  0F40  0DB3               	rlf	___flmul@grs+1,f
  6197  0F41  0DB4               	rlf	___flmul@grs+2,f
  6198  0F42  0DB5               	rlf	___flmul@grs+3,f
  6199  0F43  0BAC               	decfsz	??___flmul,f
  6200  0F44  2F3E               	goto	u4185
  6201  0F45                     l2874:	
  6202  0F45  30FF               	movlw	255
  6203  0F46  07BC               	addwf	___flmul@temp,f
  6204  0F47  1803               	skipnc
  6205  0F48  0ABD               	incf	___flmul@temp+1,f
  6206  0F49  30FF               	movlw	255
  6207  0F4A  07BD               	addwf	___flmul@temp+1,f
  6208  0F4B                     l2876:	
  6209  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6210  0F4C  2F4E               	goto	u4191
  6211  0F4D  2F4F               	goto	u4190
  6212  0F4E                     u4191:	
  6213  0F4E  2F2E               	goto	l2866
  6214  0F4F                     u4190:	
  6215  0F4F                     l2878:	
  6216  0F4F  01B6               	clrf	___flmul@aexp
  6217  0F50                     l2880:	
  6218  0F50  1FB5               	btfss	___flmul@grs+3,7
  6219  0F51  2F53               	goto	u4201
  6220  0F52  2F54               	goto	u4200
  6221  0F53                     u4201:	
  6222  0F53  2F70               	goto	l2888
  6223  0F54                     u4200:	
  6224  0F54                     l2882:	
  6225  0F54  30FF               	movlw	255
  6226  0F55  0532               	andwf	___flmul@grs,w
  6227  0F56  00AC               	movwf	??___flmul
  6228  0F57  30FF               	movlw	255
  6229  0F58  0533               	andwf	___flmul@grs+1,w
  6230  0F59  00AD               	movwf	??___flmul+1
  6231  0F5A  30FF               	movlw	255
  6232  0F5B  0534               	andwf	___flmul@grs+2,w
  6233  0F5C  00AE               	movwf	??___flmul+2
  6234  0F5D  307F               	movlw	127
  6235  0F5E  0535               	andwf	___flmul@grs+3,w
  6236  0F5F  00AF               	movwf	??___flmul+3
  6237  0F60  082F               	movf	??___flmul+3,w
  6238  0F61  042E               	iorwf	??___flmul+2,w
  6239  0F62  042D               	iorwf	??___flmul+1,w
  6240  0F63  042C               	iorwf	??___flmul,w
  6241  0F64  1903               	skipnz
  6242  0F65  2F67               	goto	u4211
  6243  0F66  2F68               	goto	u4210
  6244  0F67                     u4211:	
  6245  0F67  2F6B               	goto	l788
  6246  0F68                     u4210:	
  6247  0F68                     l2884:	
  6248  0F68  01B6               	clrf	___flmul@aexp
  6249  0F69  0AB6               	incf	___flmul@aexp,f
  6250  0F6A  2F70               	goto	l2888
  6251  0F6B                     l788:	
  6252  0F6B  1C38               	btfss	___flmul@prod,0
  6253  0F6C  2F6E               	goto	u4221
  6254  0F6D  2F6F               	goto	u4220
  6255  0F6E                     u4221:	
  6256  0F6E  2F70               	goto	l2888
  6257  0F6F                     u4220:	
  6258  0F6F  2F68               	goto	l2884
  6259  0F70                     l2888:	
  6260  0F70  0836               	movf	___flmul@aexp,w
  6261  0F71  1903               	btfsc	3,2
  6262  0F72  2F74               	goto	u4231
  6263  0F73  2F75               	goto	u4230
  6264  0F74                     u4231:	
  6265  0F74  2FA6               	goto	l2898
  6266  0F75                     u4230:	
  6267  0F75                     l2890:	
  6268  0F75  3001               	movlw	1
  6269  0F76  07B8               	addwf	___flmul@prod,f
  6270  0F77  3000               	movlw	0
  6271  0F78  1803               	skipnc
  6272  0F79  3001               	movlw	1
  6273  0F7A  07B9               	addwf	___flmul@prod+1,f
  6274  0F7B  3000               	movlw	0
  6275  0F7C  1803               	skipnc
  6276  0F7D  3001               	movlw	1
  6277  0F7E  07BA               	addwf	___flmul@prod+2,f
  6278  0F7F  3000               	movlw	0
  6279  0F80  1803               	skipnc
  6280  0F81  3001               	movlw	1
  6281  0F82  07BB               	addwf	___flmul@prod+3,f
  6282  0F83                     l2892:	
  6283  0F83  1C3B               	btfss	___flmul@prod+3,0
  6284  0F84  2F86               	goto	u4241
  6285  0F85  2F87               	goto	u4240
  6286  0F86                     u4241:	
  6287  0F86  2FA6               	goto	l2898
  6288  0F87                     u4240:	
  6289  0F87                     l2894:	
  6290  0F87  0838               	movf	___flmul@prod,w
  6291  0F88  00AC               	movwf	??___flmul
  6292  0F89  0839               	movf	___flmul@prod+1,w
  6293  0F8A  00AD               	movwf	??___flmul+1
  6294  0F8B  083A               	movf	___flmul@prod+2,w
  6295  0F8C  00AE               	movwf	??___flmul+2
  6296  0F8D  083B               	movf	___flmul@prod+3,w
  6297  0F8E  00AF               	movwf	??___flmul+3
  6298  0F8F  3001               	movlw	1
  6299  0F90  00B0               	movwf	??___flmul+4
  6300  0F91                     u4255:	
  6301  0F91  0D2F               	rlf	??___flmul+3,w
  6302  0F92  0CAF               	rrf	??___flmul+3,f
  6303  0F93  0CAE               	rrf	??___flmul+2,f
  6304  0F94  0CAD               	rrf	??___flmul+1,f
  6305  0F95  0CAC               	rrf	??___flmul,f
  6306  0F96                     u4250:	
  6307  0F96  0BB0               	decfsz	??___flmul+4,f
  6308  0F97  2F91               	goto	u4255
  6309  0F98  082F               	movf	??___flmul+3,w
  6310  0F99  00BB               	movwf	___flmul@prod+3
  6311  0F9A  082E               	movf	??___flmul+2,w
  6312  0F9B  00BA               	movwf	___flmul@prod+2
  6313  0F9C  082D               	movf	??___flmul+1,w
  6314  0F9D  00B9               	movwf	___flmul@prod+1
  6315  0F9E  082C               	movf	??___flmul,w
  6316  0F9F  00B8               	movwf	___flmul@prod
  6317  0FA0                     l2896:	
  6318  0FA0  3001               	movlw	1
  6319  0FA1  07BC               	addwf	___flmul@temp,f
  6320  0FA2  1803               	skipnc
  6321  0FA3  0ABD               	incf	___flmul@temp+1,f
  6322  0FA4  3000               	movlw	0
  6323  0FA5  07BD               	addwf	___flmul@temp+1,f
  6324  0FA6                     l2898:	
  6325  0FA6  083D               	movf	___flmul@temp+1,w
  6326  0FA7  3A80               	xorlw	128
  6327  0FA8  00FF               	movwf	btemp+1
  6328  0FA9  3080               	movlw	128
  6329  0FAA  027F               	subwf	btemp+1,w
  6330  0FAB  1D03               	skipz
  6331  0FAC  2FAF               	goto	u4265
  6332  0FAD  30FF               	movlw	255
  6333  0FAE  023C               	subwf	___flmul@temp,w
  6334  0FAF                     u4265:	
  6335  0FAF  1C03               	skipc
  6336  0FB0  2FB2               	goto	u4261
  6337  0FB1  2FB3               	goto	u4260
  6338  0FB2                     u4261:	
  6339  0FB2  2FBE               	goto	l2902
  6340  0FB3                     u4260:	
  6341  0FB3                     l2900:	
  6342  0FB3  307F               	movlw	127
  6343  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6344  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6345  0FB6  00BB               	movwf	___flmul@prod+3
  6346  0FB7  3080               	movlw	128
  6347  0FB8  00BA               	movwf	___flmul@prod+2
  6348  0FB9  3000               	movlw	0
  6349  0FBA  00B9               	movwf	___flmul@prod+1
  6350  0FBB  3000               	movlw	0
  6351  0FBC  00B8               	movwf	___flmul@prod
  6352  0FBD  2FF3               	goto	l794
  6353  0FBE                     l2902:	
  6354  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6356  0FC0  083D               	movf	___flmul@temp+1,w
  6357  0FC1  3A80               	xorlw	128
  6358  0FC2  00FF               	movwf	btemp+1
  6359  0FC3  3080               	movlw	128
  6360  0FC4  027F               	subwf	btemp+1,w
  6361  0FC5  1D03               	skipz
  6362  0FC6  2FC9               	goto	u4275
  6363  0FC7  3001               	movlw	1
  6364  0FC8  023C               	subwf	___flmul@temp,w
  6365  0FC9                     u4275:	
  6366  0FC9  1803               	skipnc
  6367  0FCA  2FCC               	goto	u4271
  6368  0FCB  2FCD               	goto	u4270
  6369  0FCC                     u4271:	
  6370  0FCC  2FD9               	goto	l2908
  6371  0FCD                     u4270:	
  6372  0FCD                     l2904:	
  6373  0FCD  3000               	movlw	0
  6374  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0FD0  00BB               	movwf	___flmul@prod+3
  6377  0FD1  3000               	movlw	0
  6378  0FD2  00BA               	movwf	___flmul@prod+2
  6379  0FD3  3000               	movlw	0
  6380  0FD4  00B9               	movwf	___flmul@prod+1
  6381  0FD5  3000               	movlw	0
  6382  0FD6  00B8               	movwf	___flmul@prod
  6383  0FD7                     l2906:	
  6384  0FD7  01B1               	clrf	___flmul@sign
  6385  0FD8  2FF3               	goto	l794
  6386  0FD9                     l2908:	
  6387  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0FDB  083C               	movf	___flmul@temp,w
  6390  0FDC  00AC               	movwf	??___flmul
  6391  0FDD  082C               	movf	??___flmul,w
  6392  0FDE  00B7               	movwf	___flmul@bexp
  6393  0FDF  30FF               	movlw	255
  6394  0FE0  05B8               	andwf	___flmul@prod,f
  6395  0FE1  30FF               	movlw	255
  6396  0FE2  05B9               	andwf	___flmul@prod+1,f
  6397  0FE3  307F               	movlw	127
  6398  0FE4  05BA               	andwf	___flmul@prod+2,f
  6399  0FE5  3000               	movlw	0
  6400  0FE6  05BB               	andwf	___flmul@prod+3,f
  6401  0FE7                     l2910:	
  6402  0FE7  1C37               	btfss	___flmul@bexp,0
  6403  0FE8  2FEA               	goto	u4281
  6404  0FE9  2FEB               	goto	u4280
  6405  0FEA                     u4281:	
  6406  0FEA  2FEC               	goto	l2914
  6407  0FEB                     u4280:	
  6408  0FEB                     l2912:	
  6409  0FEB  17BA               	bsf	___flmul@prod+2,7
  6410  0FEC                     l2914:	
  6411  0FEC  0837               	movf	___flmul@bexp,w
  6412  0FED  00AC               	movwf	??___flmul
  6413  0FEE  1003               	clrc
  6414  0FEF  0C2C               	rrf	??___flmul,w
  6415  0FF0  00AD               	movwf	??___flmul+1
  6416  0FF1  082D               	movf	??___flmul+1,w
  6417  0FF2  00BB               	movwf	___flmul@prod+3
  6418  0FF3                     l794:	
  6419  0FF3  0831               	movf	___flmul@sign,w
  6420  0FF4  00AC               	movwf	??___flmul
  6421  0FF5  082C               	movf	??___flmul,w
  6422  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6423  0FF7                     l2916:	
  6424  0FF7  083B               	movf	___flmul@prod+3,w
  6425  0FF8  00A7               	movwf	?___flmul+3
  6426  0FF9  083A               	movf	___flmul@prod+2,w
  6427  0FFA  00A6               	movwf	?___flmul+2
  6428  0FFB  0839               	movf	___flmul@prod+1,w
  6429  0FFC  00A5               	movwf	?___flmul+1
  6430  0FFD  0838               	movf	___flmul@prod,w
  6431  0FFE  00A4               	movwf	?___flmul
  6432  0FFF                     l782:	
  6433  0FFF  0008               	return
  6434  1000                     __end_of___flmul:	
  6435                           
  6436                           	psect	text10
  6437  080E                     __ptext10:	
  6438 ;; *************** function __Umul8_16 *****************
  6439 ;; Defined at:
  6440 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  multiplier      1    wreg     unsigned char 
  6443 ;;  multiplicand    1    0[COMMON] unsigned char 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;  multiplier      1    8[COMMON] unsigned char 
  6446 ;;  word_mpld       2    6[COMMON] unsigned int 
  6447 ;;  product         2    4[COMMON] unsigned int 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2    0[COMMON] unsigned int 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6457 ;;      Params:         2       0       0       0       0
  6458 ;;      Locals:         5       0       0       0       0
  6459 ;;      Temps:          2       0       0       0       0
  6460 ;;      Totals:         9       0       0       0       0
  6461 ;;Total ram usage:        9 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		___flmul
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           
  6471                           ;psect for function __Umul8_16
  6472  080E                     __Umul8_16:	
  6473                           
  6474                           ;incstack = 0
  6475                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6476                           ;__Umul8_16@multiplier stored from wreg
  6477  080E  00F8               	movwf	__Umul8_16@multiplier
  6478  080F                     l2424:	
  6479  080F  01F4               	clrf	__Umul8_16@product
  6480  0810  01F5               	clrf	__Umul8_16@product+1
  6481  0811                     l2426:	
  6482  0811  0870               	movf	__Umul8_16@multiplicand,w
  6483  0812  00F2               	movwf	??__Umul8_16
  6484  0813  01F3               	clrf	??__Umul8_16+1
  6485  0814  0872               	movf	??__Umul8_16,w
  6486  0815  00F6               	movwf	__Umul8_16@word_mpld
  6487  0816  0873               	movf	??__Umul8_16+1,w
  6488  0817  00F7               	movwf	__Umul8_16@word_mpld+1
  6489  0818                     l2428:	
  6490  0818  1C78               	btfss	__Umul8_16@multiplier,0
  6491  0819  281B               	goto	u3031
  6492  081A  281C               	goto	u3030
  6493  081B                     u3031:	
  6494  081B  2822               	goto	l848
  6495  081C                     u3030:	
  6496  081C                     l2430:	
  6497  081C  0876               	movf	__Umul8_16@word_mpld,w
  6498  081D  07F4               	addwf	__Umul8_16@product,f
  6499  081E  1803               	skipnc
  6500  081F  0AF5               	incf	__Umul8_16@product+1,f
  6501  0820  0877               	movf	__Umul8_16@word_mpld+1,w
  6502  0821  07F5               	addwf	__Umul8_16@product+1,f
  6503  0822                     l848:	
  6504  0822  3001               	movlw	1
  6505  0823                     u3045:	
  6506  0823  1003               	clrc
  6507  0824  0DF6               	rlf	__Umul8_16@word_mpld,f
  6508  0825  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6509  0826  3EFF               	addlw	-1
  6510  0827  1D03               	skipz
  6511  0828  2823               	goto	u3045
  6512  0829  1003               	clrc
  6513  082A  0CF8               	rrf	__Umul8_16@multiplier,f
  6514  082B                     l2432:	
  6515  082B  0878               	movf	__Umul8_16@multiplier,w
  6516  082C  1D03               	btfss	3,2
  6517  082D  282F               	goto	u3051
  6518  082E  2830               	goto	u3050
  6519  082F                     u3051:	
  6520  082F  2818               	goto	l2428
  6521  0830                     u3050:	
  6522  0830                     l2434:	
  6523  0830  0875               	movf	__Umul8_16@product+1,w
  6524  0831  00F1               	movwf	?__Umul8_16+1
  6525  0832  0874               	movf	__Umul8_16@product,w
  6526  0833  00F0               	movwf	?__Umul8_16
  6527  0834                     l850:	
  6528  0834  0008               	return
  6529  0835                     __end_of__Umul8_16:	
  6530                           
  6531                           	psect	text11
  6532  1015                     __ptext11:	
  6533 ;; *************** function __tdiv_to_l_ *****************
  6534 ;; Defined at:
  6535 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  f1              4    0[COMMON] float 
  6538 ;;  f2              4    4[COMMON] float 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  quot            4    0[BANK0 ] unsigned long 
  6541 ;;  exp1            1    5[BANK0 ] unsigned char 
  6542 ;;  cntr            1    4[BANK0 ] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  4    0[COMMON] unsigned long 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6552 ;;      Params:         8       0       0       0       0
  6553 ;;      Locals:         0       6       0       0       0
  6554 ;;      Temps:          4       0       0       0       0
  6555 ;;      Totals:        12       6       0       0       0
  6556 ;;Total ram usage:       18 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_sprintf
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           
  6566                           ;psect for function __tdiv_to_l_
  6567  1015                     __tdiv_to_l_:	
  6568  1015                     l3012:	
  6569                           ;incstack = 0
  6570                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6571                           
  6572  1015  0870               	movf	__tdiv_to_l_@f1,w
  6573  1016  00F8               	movwf	??__tdiv_to_l_
  6574  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  6575  1018  00F9               	movwf	??__tdiv_to_l_+1
  6576  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  6577  101A  00FA               	movwf	??__tdiv_to_l_+2
  6578  101B  1003               	clrc
  6579  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  6580  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6581  101E  00FB               	movwf	??__tdiv_to_l_+3
  6582  101F  087B               	movf	??__tdiv_to_l_+3,w
  6583  1020  1283               	bcf	3,5	;RP0=0, select bank0
  6584  1021  1303               	bcf	3,6	;RP1=0, select bank0
  6585  1022  00A5               	movwf	__tdiv_to_l_@exp1
  6586  1023  0825               	movf	__tdiv_to_l_@exp1,w
  6587  1024  1D03               	btfss	3,2
  6588  1025  2827               	goto	u4561
  6589  1026  2828               	goto	u4560
  6590  1027                     u4561:	
  6591  1027  2831               	goto	l3018
  6592  1028                     u4560:	
  6593  1028                     l3014:	
  6594  1028  3000               	movlw	0
  6595  1029  00F3               	movwf	?__tdiv_to_l_+3
  6596  102A  3000               	movlw	0
  6597  102B  00F2               	movwf	?__tdiv_to_l_+2
  6598  102C  3000               	movlw	0
  6599  102D  00F1               	movwf	?__tdiv_to_l_+1
  6600  102E  3000               	movlw	0
  6601  102F  00F0               	movwf	?__tdiv_to_l_
  6602  1030  28D1               	goto	l576
  6603  1031                     l3018:	
  6604  1031  0874               	movf	__tdiv_to_l_@f2,w
  6605  1032  00F8               	movwf	??__tdiv_to_l_
  6606  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  6607  1034  00F9               	movwf	??__tdiv_to_l_+1
  6608  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  6609  1036  00FA               	movwf	??__tdiv_to_l_+2
  6610  1037  1003               	clrc
  6611  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  6612  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  6613  103A  00FB               	movwf	??__tdiv_to_l_+3
  6614  103B  087B               	movf	??__tdiv_to_l_+3,w
  6615  103C  00A4               	movwf	__tdiv_to_l_@cntr
  6616  103D  0824               	movf	__tdiv_to_l_@cntr,w
  6617  103E  1D03               	btfss	3,2
  6618  103F  2841               	goto	u4571
  6619  1040  2842               	goto	u4570
  6620  1041                     u4571:	
  6621  1041  2843               	goto	l577
  6622  1042                     u4570:	
  6623  1042  2828               	goto	l3014
  6624  1043                     l577:	
  6625  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6626  1044                     l3024:	
  6627  1044  30FF               	movlw	255
  6628  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  6629  1046  30FF               	movlw	255
  6630  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6631  1048  3000               	movlw	0
  6632  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6633  104A                     l3026:	
  6634  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6635  104B  30FF               	movlw	255
  6636  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  6637  104D  30FF               	movlw	255
  6638  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6639  104F  3000               	movlw	0
  6640  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6641  1051  3000               	movlw	0
  6642  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  6643  1053  3000               	movlw	0
  6644  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  6645  1055  3000               	movlw	0
  6646  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  6647  1057  3000               	movlw	0
  6648  1058  00A0               	movwf	__tdiv_to_l_@quot
  6649  1059                     l3028:	
  6650  1059  307F               	movlw	127
  6651  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  6652  105B                     l3030:	
  6653  105B  3098               	movlw	152
  6654  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  6655  105D  00F8               	movwf	??__tdiv_to_l_
  6656  105E  0878               	movf	??__tdiv_to_l_,w
  6657  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6658  1060  3018               	movlw	24
  6659  1061  00F8               	movwf	??__tdiv_to_l_
  6660  1062  0878               	movf	??__tdiv_to_l_,w
  6661  1063  00A4               	movwf	__tdiv_to_l_@cntr
  6662  1064                     l3032:	
  6663  1064  3001               	movlw	1
  6664  1065  00F8               	movwf	??__tdiv_to_l_
  6665  1066                     u4585:	
  6666  1066  1003               	clrc
  6667  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  6668  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6669  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6670  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6671  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  6672  106C  2866               	goto	u4585
  6673  106D                     l3034:	
  6674  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  6675  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  6676  106F  1D03               	skipz
  6677  1070  2877               	goto	u4595
  6678  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  6679  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  6680  1073  1D03               	skipz
  6681  1074  2877               	goto	u4595
  6682  1075  0874               	movf	__tdiv_to_l_@f2,w
  6683  1076  0270               	subwf	__tdiv_to_l_@f1,w
  6684  1077                     u4595:	
  6685  1077  1C03               	skipc
  6686  1078  287A               	goto	u4591
  6687  1079  287B               	goto	u4590
  6688  107A                     u4591:	
  6689  107A  2886               	goto	l3040
  6690  107B                     u4590:	
  6691  107B                     l3036:	
  6692  107B  0874               	movf	__tdiv_to_l_@f2,w
  6693  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  6694  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  6695  107E  1C03               	skipc
  6696  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6697  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6698  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  6699  1082  1C03               	skipc
  6700  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  6701  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6702  1085                     l3038:	
  6703  1085  1420               	bsf	__tdiv_to_l_@quot,0
  6704  1086                     l3040:	
  6705  1086  3001               	movlw	1
  6706  1087                     u4605:	
  6707  1087  1003               	clrc
  6708  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  6709  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6710  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6711  108B  3EFF               	addlw	-1
  6712  108C  1D03               	skipz
  6713  108D  2887               	goto	u4605
  6714  108E                     l3042:	
  6715  108E  3001               	movlw	1
  6716  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  6717  1090  1D03               	btfss	3,2
  6718  1091  2893               	goto	u4611
  6719  1092  2894               	goto	u4610
  6720  1093                     u4611:	
  6721  1093  2864               	goto	l3032
  6722  1094                     u4610:	
  6723  1094                     l580:	
  6724  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6725  1095  2897               	goto	u4621
  6726  1096  2898               	goto	u4620
  6727  1097                     u4621:	
  6728  1097  28B2               	goto	l3052
  6729  1098                     u4620:	
  6730  1098                     l3044:	
  6731  1098  0825               	movf	__tdiv_to_l_@exp1,w
  6732  1099  3A80               	xorlw	128
  6733  109A  3E97               	addlw	151
  6734  109B  1803               	skipnc
  6735  109C  289E               	goto	u4631
  6736  109D  289F               	goto	u4630
  6737  109E                     u4631:	
  6738  109E  28A0               	goto	l3050
  6739  109F                     u4630:	
  6740  109F  2828               	goto	l3014
  6741  10A0                     l3050:	
  6742  10A0  3001               	movlw	1
  6743  10A1                     u4645:	
  6744  10A1  1003               	clrc
  6745  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6746  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6747  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6748  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  6749  10A6  3EFF               	addlw	-1
  6750  10A7  1D03               	skipz
  6751  10A8  28A1               	goto	u4645
  6752  10A9  3001               	movlw	1
  6753  10AA  00F8               	movwf	??__tdiv_to_l_
  6754  10AB  0878               	movf	??__tdiv_to_l_,w
  6755  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  6756  10AD  1D03               	btfss	3,2
  6757  10AE  28B0               	goto	u4651
  6758  10AF  28B1               	goto	u4650
  6759  10B0                     u4651:	
  6760  10B0  28A0               	goto	l3050
  6761  10B1                     u4650:	
  6762  10B1  28C9               	goto	l3060
  6763  10B2                     l3052:	
  6764  10B2  3018               	movlw	24
  6765  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  6766  10B4  1C03               	skipc
  6767  10B5  28B7               	goto	u4661
  6768  10B6  28B8               	goto	u4660
  6769  10B7                     u4661:	
  6770  10B7  28C4               	goto	l587
  6771  10B8                     u4660:	
  6772  10B8  2828               	goto	l3014
  6773  10B9                     l3058:	
  6774  10B9  3001               	movlw	1
  6775  10BA  00F8               	movwf	??__tdiv_to_l_
  6776  10BB                     u4675:	
  6777  10BB  1003               	clrc
  6778  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  6779  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6780  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6781  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6782  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  6783  10C1  28BB               	goto	u4675
  6784  10C2  3001               	movlw	1
  6785  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  6786  10C4                     l587:	
  6787  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  6788  10C5  1D03               	btfss	3,2
  6789  10C6  28C8               	goto	u4681
  6790  10C7  28C9               	goto	u4680
  6791  10C8                     u4681:	
  6792  10C8  28B9               	goto	l3058
  6793  10C9                     u4680:	
  6794  10C9                     l3060:	
  6795  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  6796  10CA  00F3               	movwf	?__tdiv_to_l_+3
  6797  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  6798  10CC  00F2               	movwf	?__tdiv_to_l_+2
  6799  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  6800  10CE  00F1               	movwf	?__tdiv_to_l_+1
  6801  10CF  0820               	movf	__tdiv_to_l_@quot,w
  6802  10D0  00F0               	movwf	?__tdiv_to_l_
  6803  10D1                     l576:	
  6804  10D1  0008               	return
  6805  10D2                     __end_of__tdiv_to_l_:	
  6806                           
  6807                           	psect	text12
  6808  10D2                     __ptext12:	
  6809 ;; *************** function __div_to_l_ *****************
  6810 ;; Defined at:
  6811 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  f1              4    0[COMMON] unsigned long 
  6814 ;;  f2              4    4[COMMON] unsigned long 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  quot            4    0[BANK0 ] unsigned long 
  6817 ;;  exp1            1    5[BANK0 ] unsigned char 
  6818 ;;  cntr            1    4[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  4    0[COMMON] unsigned long 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6828 ;;      Params:         8       0       0       0       0
  6829 ;;      Locals:         0       6       0       0       0
  6830 ;;      Temps:          1       0       0       0       0
  6831 ;;      Totals:         9       6       0       0       0
  6832 ;;Total ram usage:       15 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_sprintf
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function __div_to_l_
  6843  10D2                     __div_to_l_:	
  6844  10D2                     l3064:	
  6845                           ;incstack = 0
  6846                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6847                           
  6848  10D2  1003               	clrc
  6849  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  6850  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  6851  10D5  00F8               	movwf	??__div_to_l_
  6852  10D6  0878               	movf	??__div_to_l_,w
  6853  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  6854  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  6855  10D9  00A5               	movwf	__div_to_l_@exp1
  6856  10DA  0825               	movf	__div_to_l_@exp1,w
  6857  10DB  1D03               	btfss	3,2
  6858  10DC  28DE               	goto	u4691
  6859  10DD  28DF               	goto	u4690
  6860  10DE                     u4691:	
  6861  10DE  28E8               	goto	l3070
  6862  10DF                     u4690:	
  6863  10DF                     l3066:	
  6864  10DF  3000               	movlw	0
  6865  10E0  00F3               	movwf	?__div_to_l_+3
  6866  10E1  3000               	movlw	0
  6867  10E2  00F2               	movwf	?__div_to_l_+2
  6868  10E3  3000               	movlw	0
  6869  10E4  00F1               	movwf	?__div_to_l_+1
  6870  10E5  3000               	movlw	0
  6871  10E6  00F0               	movwf	?__div_to_l_
  6872  10E7  298F               	goto	l529
  6873  10E8                     l3070:	
  6874  10E8  1003               	clrc
  6875  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  6876  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  6877  10EB  00F8               	movwf	??__div_to_l_
  6878  10EC  0878               	movf	??__div_to_l_,w
  6879  10ED  00A4               	movwf	__div_to_l_@cntr
  6880  10EE  0824               	movf	__div_to_l_@cntr,w
  6881  10EF  1D03               	btfss	3,2
  6882  10F0  28F2               	goto	u4701
  6883  10F1  28F3               	goto	u4700
  6884  10F2                     u4701:	
  6885  10F2  28F4               	goto	l530
  6886  10F3                     u4700:	
  6887  10F3  28DF               	goto	l3066
  6888  10F4                     l530:	
  6889  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  6890  10F5                     l3076:	
  6891  10F5  30FF               	movlw	255
  6892  10F6  05F0               	andwf	__div_to_l_@f1,f
  6893  10F7  30FF               	movlw	255
  6894  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  6895  10F9  30FF               	movlw	255
  6896  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  6897  10FB  3000               	movlw	0
  6898  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  6899  10FD                     l3078:	
  6900  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  6901  10FE  30FF               	movlw	255
  6902  10FF  05F4               	andwf	__div_to_l_@f2,f
  6903  1100  30FF               	movlw	255
  6904  1101  05F5               	andwf	__div_to_l_@f2+1,f
  6905  1102  30FF               	movlw	255
  6906  1103  05F6               	andwf	__div_to_l_@f2+2,f
  6907  1104  3000               	movlw	0
  6908  1105  05F7               	andwf	__div_to_l_@f2+3,f
  6909  1106  3000               	movlw	0
  6910  1107  00A3               	movwf	__div_to_l_@quot+3
  6911  1108  3000               	movlw	0
  6912  1109  00A2               	movwf	__div_to_l_@quot+2
  6913  110A  3000               	movlw	0
  6914  110B  00A1               	movwf	__div_to_l_@quot+1
  6915  110C  3000               	movlw	0
  6916  110D  00A0               	movwf	__div_to_l_@quot
  6917  110E                     l3080:	
  6918  110E  307F               	movlw	127
  6919  110F  02A5               	subwf	__div_to_l_@exp1,f
  6920  1110                     l3082:	
  6921  1110  30A0               	movlw	160
  6922  1111  0724               	addwf	__div_to_l_@cntr,w
  6923  1112  00F8               	movwf	??__div_to_l_
  6924  1113  0878               	movf	??__div_to_l_,w
  6925  1114  02A5               	subwf	__div_to_l_@exp1,f
  6926  1115  3020               	movlw	32
  6927  1116  00F8               	movwf	??__div_to_l_
  6928  1117  0878               	movf	??__div_to_l_,w
  6929  1118  00A4               	movwf	__div_to_l_@cntr
  6930  1119                     l3084:	
  6931  1119  3001               	movlw	1
  6932  111A  00F8               	movwf	??__div_to_l_
  6933  111B                     u4715:	
  6934  111B  1003               	clrc
  6935  111C  0DA0               	rlf	__div_to_l_@quot,f
  6936  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  6937  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  6938  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  6939  1120  0BF8               	decfsz	??__div_to_l_,f
  6940  1121  291B               	goto	u4715
  6941  1122                     l3086:	
  6942  1122  0877               	movf	__div_to_l_@f2+3,w
  6943  1123  0273               	subwf	__div_to_l_@f1+3,w
  6944  1124  1D03               	skipz
  6945  1125  2930               	goto	u4725
  6946  1126  0876               	movf	__div_to_l_@f2+2,w
  6947  1127  0272               	subwf	__div_to_l_@f1+2,w
  6948  1128  1D03               	skipz
  6949  1129  2930               	goto	u4725
  6950  112A  0875               	movf	__div_to_l_@f2+1,w
  6951  112B  0271               	subwf	__div_to_l_@f1+1,w
  6952  112C  1D03               	skipz
  6953  112D  2930               	goto	u4725
  6954  112E  0874               	movf	__div_to_l_@f2,w
  6955  112F  0270               	subwf	__div_to_l_@f1,w
  6956  1130                     u4725:	
  6957  1130  1C03               	skipc
  6958  1131  2933               	goto	u4721
  6959  1132  2934               	goto	u4720
  6960  1133                     u4721:	
  6961  1133  2943               	goto	l3092
  6962  1134                     u4720:	
  6963  1134                     l3088:	
  6964  1134  0874               	movf	__div_to_l_@f2,w
  6965  1135  02F0               	subwf	__div_to_l_@f1,f
  6966  1136  0875               	movf	__div_to_l_@f2+1,w
  6967  1137  1C03               	skipc
  6968  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  6969  1139  02F1               	subwf	__div_to_l_@f1+1,f
  6970  113A  0876               	movf	__div_to_l_@f2+2,w
  6971  113B  1C03               	skipc
  6972  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  6973  113D  02F2               	subwf	__div_to_l_@f1+2,f
  6974  113E  0877               	movf	__div_to_l_@f2+3,w
  6975  113F  1C03               	skipc
  6976  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  6977  1141  02F3               	subwf	__div_to_l_@f1+3,f
  6978  1142                     l3090:	
  6979  1142  1420               	bsf	__div_to_l_@quot,0
  6980  1143                     l3092:	
  6981  1143  3001               	movlw	1
  6982  1144  00F8               	movwf	??__div_to_l_
  6983  1145                     u4735:	
  6984  1145  1003               	clrc
  6985  1146  0DF0               	rlf	__div_to_l_@f1,f
  6986  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  6987  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  6988  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  6989  114A  0BF8               	decfsz	??__div_to_l_,f
  6990  114B  2945               	goto	u4735
  6991  114C                     l3094:	
  6992  114C  3001               	movlw	1
  6993  114D  02A4               	subwf	__div_to_l_@cntr,f
  6994  114E  1D03               	btfss	3,2
  6995  114F  2951               	goto	u4741
  6996  1150  2952               	goto	u4740
  6997  1151                     u4741:	
  6998  1151  2919               	goto	l3084
  6999  1152                     u4740:	
  7000  1152                     l533:	
  7001  1152  1FA5               	btfss	__div_to_l_@exp1,7
  7002  1153  2955               	goto	u4751
  7003  1154  2956               	goto	u4750
  7004  1155                     u4751:	
  7005  1155  2970               	goto	l3104
  7006  1156                     u4750:	
  7007  1156                     l3096:	
  7008  1156  0825               	movf	__div_to_l_@exp1,w
  7009  1157  3A80               	xorlw	128
  7010  1158  3E9F               	addlw	159
  7011  1159  1803               	skipnc
  7012  115A  295C               	goto	u4761
  7013  115B  295D               	goto	u4760
  7014  115C                     u4761:	
  7015  115C  295E               	goto	l3102
  7016  115D                     u4760:	
  7017  115D  28DF               	goto	l3066
  7018  115E                     l3102:	
  7019  115E  3001               	movlw	1
  7020  115F                     u4775:	
  7021  115F  1003               	clrc
  7022  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  7023  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  7024  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  7025  1163  0CA0               	rrf	__div_to_l_@quot,f
  7026  1164  3EFF               	addlw	-1
  7027  1165  1D03               	skipz
  7028  1166  295F               	goto	u4775
  7029  1167  3001               	movlw	1
  7030  1168  00F8               	movwf	??__div_to_l_
  7031  1169  0878               	movf	??__div_to_l_,w
  7032  116A  07A5               	addwf	__div_to_l_@exp1,f
  7033  116B  1D03               	btfss	3,2
  7034  116C  296E               	goto	u4781
  7035  116D  296F               	goto	u4780
  7036  116E                     u4781:	
  7037  116E  295E               	goto	l3102
  7038  116F                     u4780:	
  7039  116F  2987               	goto	l3112
  7040  1170                     l3104:	
  7041  1170  3020               	movlw	32
  7042  1171  0225               	subwf	__div_to_l_@exp1,w
  7043  1172  1C03               	skipc
  7044  1173  2975               	goto	u4791
  7045  1174  2976               	goto	u4790
  7046  1175                     u4791:	
  7047  1175  2982               	goto	l540
  7048  1176                     u4790:	
  7049  1176  28DF               	goto	l3066
  7050  1177                     l3110:	
  7051  1177  3001               	movlw	1
  7052  1178  00F8               	movwf	??__div_to_l_
  7053  1179                     u4805:	
  7054  1179  1003               	clrc
  7055  117A  0DA0               	rlf	__div_to_l_@quot,f
  7056  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  7057  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  7058  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  7059  117E  0BF8               	decfsz	??__div_to_l_,f
  7060  117F  2979               	goto	u4805
  7061  1180  3001               	movlw	1
  7062  1181  02A5               	subwf	__div_to_l_@exp1,f
  7063  1182                     l540:	
  7064  1182  0825               	movf	__div_to_l_@exp1,w
  7065  1183  1D03               	btfss	3,2
  7066  1184  2986               	goto	u4811
  7067  1185  2987               	goto	u4810
  7068  1186                     u4811:	
  7069  1186  2977               	goto	l3110
  7070  1187                     u4810:	
  7071  1187                     l3112:	
  7072  1187  0823               	movf	__div_to_l_@quot+3,w
  7073  1188  00F3               	movwf	?__div_to_l_+3
  7074  1189  0822               	movf	__div_to_l_@quot+2,w
  7075  118A  00F2               	movwf	?__div_to_l_+2
  7076  118B  0821               	movf	__div_to_l_@quot+1,w
  7077  118C  00F1               	movwf	?__div_to_l_+1
  7078  118D  0820               	movf	__div_to_l_@quot,w
  7079  118E  00F0               	movwf	?__div_to_l_
  7080  118F                     l529:	
  7081  118F  0008               	return
  7082  1190                     __end_of__div_to_l_:	
  7083                           
  7084                           	psect	text13
  7085  1F46                     __ptext13:	
  7086 ;; *************** function ___xxtofl *****************
  7087 ;; Defined at:
  7088 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  sign            1    wreg     unsigned char 
  7091 ;;  val             4    0[COMMON] long 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  sign            1    8[COMMON] unsigned char 
  7094 ;;  arg             4   10[COMMON] unsigned long 
  7095 ;;  exp             1    9[COMMON] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  4    0[COMMON] unsigned char 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7105 ;;      Params:         4       0       0       0       0
  7106 ;;      Locals:         6       0       0       0       0
  7107 ;;      Temps:          4       0       0       0       0
  7108 ;;      Totals:        14       0       0       0       0
  7109 ;;Total ram usage:       14 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_main
  7115 ;;		_sprintf
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function ___xxtofl
  7121  1F46                     ___xxtofl:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7125                           ;___xxtofl@sign stored from wreg
  7126  1F46  00F8               	movwf	___xxtofl@sign
  7127  1F47                     l3256:	
  7128  1F47  0878               	movf	___xxtofl@sign,w
  7129  1F48  1903               	btfsc	3,2
  7130  1F49  2F4B               	goto	u5201
  7131  1F4A  2F4C               	goto	u5200
  7132  1F4B                     u5201:	
  7133  1F4B  2F60               	goto	l3262
  7134  1F4C                     u5200:	
  7135  1F4C                     l3258:	
  7136  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  7137  1F4D  2F4F               	goto	u5211
  7138  1F4E  2F50               	goto	u5210
  7139  1F4F                     u5211:	
  7140  1F4F  2F60               	goto	l3262
  7141  1F50                     u5210:	
  7142  1F50                     l3260:	
  7143  1F50  0970               	comf	___xxtofl@val,w
  7144  1F51  00FA               	movwf	___xxtofl@arg
  7145  1F52  0971               	comf	___xxtofl@val+1,w
  7146  1F53  00FB               	movwf	___xxtofl@arg+1
  7147  1F54  0972               	comf	___xxtofl@val+2,w
  7148  1F55  00FC               	movwf	___xxtofl@arg+2
  7149  1F56  0973               	comf	___xxtofl@val+3,w
  7150  1F57  00FD               	movwf	___xxtofl@arg+3
  7151  1F58  0AFA               	incf	___xxtofl@arg,f
  7152  1F59  1903               	skipnz
  7153  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  7154  1F5B  1903               	skipnz
  7155  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  7156  1F5D  1903               	skipnz
  7157  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  7158  1F5F  2F68               	goto	l820
  7159  1F60                     l3262:	
  7160  1F60  0873               	movf	___xxtofl@val+3,w
  7161  1F61  00FD               	movwf	___xxtofl@arg+3
  7162  1F62  0872               	movf	___xxtofl@val+2,w
  7163  1F63  00FC               	movwf	___xxtofl@arg+2
  7164  1F64  0871               	movf	___xxtofl@val+1,w
  7165  1F65  00FB               	movwf	___xxtofl@arg+1
  7166  1F66  0870               	movf	___xxtofl@val,w
  7167  1F67  00FA               	movwf	___xxtofl@arg
  7168  1F68                     l820:	
  7169  1F68  0873               	movf	___xxtofl@val+3,w
  7170  1F69  0472               	iorwf	___xxtofl@val+2,w
  7171  1F6A  0471               	iorwf	___xxtofl@val+1,w
  7172  1F6B  0470               	iorwf	___xxtofl@val,w
  7173  1F6C  1D03               	skipz
  7174  1F6D  2F6F               	goto	u5221
  7175  1F6E  2F70               	goto	u5220
  7176  1F6F                     u5221:	
  7177  1F6F  2F79               	goto	l3268
  7178  1F70                     u5220:	
  7179  1F70                     l3264:	
  7180  1F70  3000               	movlw	0
  7181  1F71  00F3               	movwf	?___xxtofl+3
  7182  1F72  3000               	movlw	0
  7183  1F73  00F2               	movwf	?___xxtofl+2
  7184  1F74  3000               	movlw	0
  7185  1F75  00F1               	movwf	?___xxtofl+1
  7186  1F76  3000               	movlw	0
  7187  1F77  00F0               	movwf	?___xxtofl
  7188  1F78  2FFF               	goto	l822
  7189  1F79                     l3268:	
  7190  1F79  3096               	movlw	150
  7191  1F7A  00F4               	movwf	??___xxtofl
  7192  1F7B  0874               	movf	??___xxtofl,w
  7193  1F7C  00F9               	movwf	___xxtofl@exp
  7194  1F7D  2F8B               	goto	l3272
  7195  1F7E                     l3270:	
  7196  1F7E  3001               	movlw	1
  7197  1F7F  00F4               	movwf	??___xxtofl
  7198  1F80  0874               	movf	??___xxtofl,w
  7199  1F81  07F9               	addwf	___xxtofl@exp,f
  7200  1F82  3001               	movlw	1
  7201  1F83                     u5235:	
  7202  1F83  1003               	clrc
  7203  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  7204  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  7205  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  7206  1F87  0CFA               	rrf	___xxtofl@arg,f
  7207  1F88  3EFF               	addlw	-1
  7208  1F89  1D03               	skipz
  7209  1F8A  2F83               	goto	u5235
  7210  1F8B                     l3272:	
  7211  1F8B  30FE               	movlw	254
  7212  1F8C  057D               	andwf	___xxtofl@arg+3,w
  7213  1F8D  1D03               	btfss	3,2
  7214  1F8E  2F90               	goto	u5241
  7215  1F8F  2F91               	goto	u5240
  7216  1F90                     u5241:	
  7217  1F90  2F7E               	goto	l3270
  7218  1F91                     u5240:	
  7219  1F91  2FAD               	goto	l826
  7220  1F92                     l3274:	
  7221  1F92  3001               	movlw	1
  7222  1F93  00F4               	movwf	??___xxtofl
  7223  1F94  0874               	movf	??___xxtofl,w
  7224  1F95  07F9               	addwf	___xxtofl@exp,f
  7225  1F96                     l3276:	
  7226  1F96  3001               	movlw	1
  7227  1F97  07FA               	addwf	___xxtofl@arg,f
  7228  1F98  3000               	movlw	0
  7229  1F99  1803               	skipnc
  7230  1F9A  3001               	movlw	1
  7231  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  7232  1F9C  3000               	movlw	0
  7233  1F9D  1803               	skipnc
  7234  1F9E  3001               	movlw	1
  7235  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  7236  1FA0  3000               	movlw	0
  7237  1FA1  1803               	skipnc
  7238  1FA2  3001               	movlw	1
  7239  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  7240  1FA4                     l3278:	
  7241  1FA4  3001               	movlw	1
  7242  1FA5                     u5255:	
  7243  1FA5  1003               	clrc
  7244  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  7245  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  7246  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  7247  1FA9  0CFA               	rrf	___xxtofl@arg,f
  7248  1FAA  3EFF               	addlw	-1
  7249  1FAB  1D03               	skipz
  7250  1FAC  2FA5               	goto	u5255
  7251  1FAD                     l826:	
  7252  1FAD  30FF               	movlw	255
  7253  1FAE  057D               	andwf	___xxtofl@arg+3,w
  7254  1FAF  1D03               	btfss	3,2
  7255  1FB0  2FB2               	goto	u5261
  7256  1FB1  2FB3               	goto	u5260
  7257  1FB2                     u5261:	
  7258  1FB2  2F92               	goto	l3274
  7259  1FB3                     u5260:	
  7260  1FB3  2FBF               	goto	l3282
  7261  1FB4                     l3280:	
  7262  1FB4  3001               	movlw	1
  7263  1FB5  02F9               	subwf	___xxtofl@exp,f
  7264  1FB6  3001               	movlw	1
  7265  1FB7  00F4               	movwf	??___xxtofl
  7266  1FB8                     u5275:	
  7267  1FB8  1003               	clrc
  7268  1FB9  0DFA               	rlf	___xxtofl@arg,f
  7269  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  7270  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  7271  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  7272  1FBD  0BF4               	decfsz	??___xxtofl,f
  7273  1FBE  2FB8               	goto	u5275
  7274  1FBF                     l3282:	
  7275  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  7276  1FC0  2FC2               	goto	u5281
  7277  1FC1  2FC3               	goto	u5280
  7278  1FC2                     u5281:	
  7279  1FC2  2FC9               	goto	l833
  7280  1FC3                     u5280:	
  7281  1FC3                     l3284:	
  7282  1FC3  3002               	movlw	2
  7283  1FC4  0279               	subwf	___xxtofl@exp,w
  7284  1FC5  1803               	skipnc
  7285  1FC6  2FC8               	goto	u5291
  7286  1FC7  2FC9               	goto	u5290
  7287  1FC8                     u5291:	
  7288  1FC8  2FB4               	goto	l3280
  7289  1FC9                     u5290:	
  7290  1FC9                     l833:	
  7291  1FC9  1879               	btfsc	___xxtofl@exp,0
  7292  1FCA  2FCC               	goto	u5301
  7293  1FCB  2FCD               	goto	u5300
  7294  1FCC                     u5301:	
  7295  1FCC  2FD5               	goto	l834
  7296  1FCD                     u5300:	
  7297  1FCD                     l3286:	
  7298  1FCD  30FF               	movlw	255
  7299  1FCE  05FA               	andwf	___xxtofl@arg,f
  7300  1FCF  30FF               	movlw	255
  7301  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  7302  1FD1  307F               	movlw	127
  7303  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  7304  1FD3  30FF               	movlw	255
  7305  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  7306  1FD5                     l834:	
  7307  1FD5  1003               	clrc
  7308  1FD6  0CF9               	rrf	___xxtofl@exp,f
  7309  1FD7                     l3288:	
  7310  1FD7  0879               	movf	___xxtofl@exp,w
  7311  1FD8  00F4               	movwf	??___xxtofl
  7312  1FD9  01F5               	clrf	??___xxtofl+1
  7313  1FDA  01F6               	clrf	??___xxtofl+2
  7314  1FDB  01F7               	clrf	??___xxtofl+3
  7315  1FDC  3018               	movlw	24
  7316  1FDD                     u5315:	
  7317  1FDD  1003               	clrc
  7318  1FDE  0DF4               	rlf	??___xxtofl,f
  7319  1FDF  0DF5               	rlf	??___xxtofl+1,f
  7320  1FE0  0DF6               	rlf	??___xxtofl+2,f
  7321  1FE1  0DF7               	rlf	??___xxtofl+3,f
  7322  1FE2                     u5310:	
  7323  1FE2  3EFF               	addlw	-1
  7324  1FE3  1D03               	skipz
  7325  1FE4  2FDD               	goto	u5315
  7326  1FE5  0874               	movf	??___xxtofl,w
  7327  1FE6  04FA               	iorwf	___xxtofl@arg,f
  7328  1FE7  0875               	movf	??___xxtofl+1,w
  7329  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  7330  1FE9  0876               	movf	??___xxtofl+2,w
  7331  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  7332  1FEB  0877               	movf	??___xxtofl+3,w
  7333  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  7334  1FED                     l3290:	
  7335  1FED  0878               	movf	___xxtofl@sign,w
  7336  1FEE  1903               	btfsc	3,2
  7337  1FEF  2FF1               	goto	u5321
  7338  1FF0  2FF2               	goto	u5320
  7339  1FF1                     u5321:	
  7340  1FF1  2FF7               	goto	l3296
  7341  1FF2                     u5320:	
  7342  1FF2                     l3292:	
  7343  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  7344  1FF3  2FF5               	goto	u5331
  7345  1FF4  2FF6               	goto	u5330
  7346  1FF5                     u5331:	
  7347  1FF5  2FF7               	goto	l3296
  7348  1FF6                     u5330:	
  7349  1FF6                     l3294:	
  7350  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  7351  1FF7                     l3296:	
  7352  1FF7  087D               	movf	___xxtofl@arg+3,w
  7353  1FF8  00F3               	movwf	?___xxtofl+3
  7354  1FF9  087C               	movf	___xxtofl@arg+2,w
  7355  1FFA  00F2               	movwf	?___xxtofl+2
  7356  1FFB  087B               	movf	___xxtofl@arg+1,w
  7357  1FFC  00F1               	movwf	?___xxtofl+1
  7358  1FFD  087A               	movf	___xxtofl@arg,w
  7359  1FFE  00F0               	movwf	?___xxtofl
  7360  1FFF                     l822:	
  7361  1FFF  0008               	return
  7362  2000                     __end_of___xxtofl:	
  7363                           
  7364                           	psect	text14
  7365  1AF5                     __ptext14:	
  7366 ;; *************** function ___wmul *****************
  7367 ;; Defined at:
  7368 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  multiplier      2    0[COMMON] unsigned int 
  7371 ;;  multiplicand    2    2[COMMON] unsigned int 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  product         2    4[COMMON] unsigned int 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  2    0[COMMON] unsigned int 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7383 ;;      Params:         4       0       0       0       0
  7384 ;;      Locals:         2       0       0       0       0
  7385 ;;      Temps:          0       0       0       0       0
  7386 ;;      Totals:         6       0       0       0       0
  7387 ;;Total ram usage:        6 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_sprintf
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function ___wmul
  7398  1AF5                     ___wmul:	
  7399  1AF5                     l3116:	
  7400                           ;incstack = 0
  7401                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7402                           
  7403  1AF5  01F4               	clrf	___wmul@product
  7404  1AF6  01F5               	clrf	___wmul@product+1
  7405  1AF7                     l3118:	
  7406  1AF7  1C70               	btfss	___wmul@multiplier,0
  7407  1AF8  2AFA               	goto	u4821
  7408  1AF9  2AFB               	goto	u4820
  7409  1AFA                     u4821:	
  7410  1AFA  2B01               	goto	l359
  7411  1AFB                     u4820:	
  7412  1AFB                     l3120:	
  7413  1AFB  0872               	movf	___wmul@multiplicand,w
  7414  1AFC  07F4               	addwf	___wmul@product,f
  7415  1AFD  1803               	skipnc
  7416  1AFE  0AF5               	incf	___wmul@product+1,f
  7417  1AFF  0873               	movf	___wmul@multiplicand+1,w
  7418  1B00  07F5               	addwf	___wmul@product+1,f
  7419  1B01                     l359:	
  7420  1B01  3001               	movlw	1
  7421  1B02                     u4835:	
  7422  1B02  1003               	clrc
  7423  1B03  0DF2               	rlf	___wmul@multiplicand,f
  7424  1B04  0DF3               	rlf	___wmul@multiplicand+1,f
  7425  1B05  3EFF               	addlw	-1
  7426  1B06  1D03               	skipz
  7427  1B07  2B02               	goto	u4835
  7428  1B08                     l3122:	
  7429  1B08  3001               	movlw	1
  7430  1B09                     u4845:	
  7431  1B09  1003               	clrc
  7432  1B0A  0CF1               	rrf	___wmul@multiplier+1,f
  7433  1B0B  0CF0               	rrf	___wmul@multiplier,f
  7434  1B0C  3EFF               	addlw	-1
  7435  1B0D  1D03               	skipz
  7436  1B0E  2B09               	goto	u4845
  7437  1B0F                     l3124:	
  7438  1B0F  0870               	movf	___wmul@multiplier,w
  7439  1B10  0471               	iorwf	___wmul@multiplier+1,w
  7440  1B11  1D03               	btfss	3,2
  7441  1B12  2B14               	goto	u4851
  7442  1B13  2B15               	goto	u4850
  7443  1B14                     u4851:	
  7444  1B14  2AF7               	goto	l3118
  7445  1B15                     u4850:	
  7446  1B15                     l3126:	
  7447  1B15  0875               	movf	___wmul@product+1,w
  7448  1B16  00F1               	movwf	?___wmul+1
  7449  1B17  0874               	movf	___wmul@product,w
  7450  1B18  00F0               	movwf	?___wmul
  7451  1B19                     l361:	
  7452  1B19  0008               	return
  7453  1B1A                     __end_of___wmul:	
  7454                           
  7455                           	psect	text15
  7456  1CAC                     __ptext15:	
  7457 ;; *************** function ___llmod *****************
  7458 ;; Defined at:
  7459 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  divisor         4    0[COMMON] unsigned long 
  7462 ;;  dividend        4    4[COMMON] unsigned long 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  counter         1    9[COMMON] unsigned char 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  4    0[COMMON] unsigned long 
  7467 ;; Registers used:
  7468 ;;		wreg, status,2, status,0
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7474 ;;      Params:         8       0       0       0       0
  7475 ;;      Locals:         1       0       0       0       0
  7476 ;;      Temps:          1       0       0       0       0
  7477 ;;      Totals:        10       0       0       0       0
  7478 ;;Total ram usage:       10 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_sprintf
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           
  7488                           ;psect for function ___llmod
  7489  1CAC                     ___llmod:	
  7490  1CAC                     l3230:	
  7491                           ;incstack = 0
  7492                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7493                           
  7494  1CAC  0873               	movf	___llmod@divisor+3,w
  7495  1CAD  0472               	iorwf	___llmod@divisor+2,w
  7496  1CAE  0471               	iorwf	___llmod@divisor+1,w
  7497  1CAF  0470               	iorwf	___llmod@divisor,w
  7498  1CB0  1903               	skipnz
  7499  1CB1  2CB3               	goto	u5141
  7500  1CB2  2CB4               	goto	u5140
  7501  1CB3                     u5141:	
  7502  1CB3  2CF7               	goto	l3246
  7503  1CB4                     u5140:	
  7504  1CB4                     l3232:	
  7505  1CB4  01F9               	clrf	___llmod@counter
  7506  1CB5  0AF9               	incf	___llmod@counter,f
  7507  1CB6  2CC4               	goto	l3236
  7508  1CB7                     l3234:	
  7509  1CB7  3001               	movlw	1
  7510  1CB8  00F8               	movwf	??___llmod
  7511  1CB9                     u5155:	
  7512  1CB9  1003               	clrc
  7513  1CBA  0DF0               	rlf	___llmod@divisor,f
  7514  1CBB  0DF1               	rlf	___llmod@divisor+1,f
  7515  1CBC  0DF2               	rlf	___llmod@divisor+2,f
  7516  1CBD  0DF3               	rlf	___llmod@divisor+3,f
  7517  1CBE  0BF8               	decfsz	??___llmod,f
  7518  1CBF  2CB9               	goto	u5155
  7519  1CC0  3001               	movlw	1
  7520  1CC1  00F8               	movwf	??___llmod
  7521  1CC2  0878               	movf	??___llmod,w
  7522  1CC3  07F9               	addwf	___llmod@counter,f
  7523  1CC4                     l3236:	
  7524  1CC4  1FF3               	btfss	___llmod@divisor+3,7
  7525  1CC5  2CC7               	goto	u5161
  7526  1CC6  2CC8               	goto	u5160
  7527  1CC7                     u5161:	
  7528  1CC7  2CB7               	goto	l3234
  7529  1CC8                     u5160:	
  7530  1CC8                     l3238:	
  7531  1CC8  0873               	movf	___llmod@divisor+3,w
  7532  1CC9  0277               	subwf	___llmod@dividend+3,w
  7533  1CCA  1D03               	skipz
  7534  1CCB  2CD6               	goto	u5175
  7535  1CCC  0872               	movf	___llmod@divisor+2,w
  7536  1CCD  0276               	subwf	___llmod@dividend+2,w
  7537  1CCE  1D03               	skipz
  7538  1CCF  2CD6               	goto	u5175
  7539  1CD0  0871               	movf	___llmod@divisor+1,w
  7540  1CD1  0275               	subwf	___llmod@dividend+1,w
  7541  1CD2  1D03               	skipz
  7542  1CD3  2CD6               	goto	u5175
  7543  1CD4  0870               	movf	___llmod@divisor,w
  7544  1CD5  0274               	subwf	___llmod@dividend,w
  7545  1CD6                     u5175:	
  7546  1CD6  1C03               	skipc
  7547  1CD7  2CD9               	goto	u5171
  7548  1CD8  2CDA               	goto	u5170
  7549  1CD9                     u5171:	
  7550  1CD9  2CE8               	goto	l3242
  7551  1CDA                     u5170:	
  7552  1CDA                     l3240:	
  7553  1CDA  0870               	movf	___llmod@divisor,w
  7554  1CDB  02F4               	subwf	___llmod@dividend,f
  7555  1CDC  0871               	movf	___llmod@divisor+1,w
  7556  1CDD  1C03               	skipc
  7557  1CDE  0F71               	incfsz	___llmod@divisor+1,w
  7558  1CDF  02F5               	subwf	___llmod@dividend+1,f
  7559  1CE0  0872               	movf	___llmod@divisor+2,w
  7560  1CE1  1C03               	skipc
  7561  1CE2  0F72               	incfsz	___llmod@divisor+2,w
  7562  1CE3  02F6               	subwf	___llmod@dividend+2,f
  7563  1CE4  0873               	movf	___llmod@divisor+3,w
  7564  1CE5  1C03               	skipc
  7565  1CE6  0F73               	incfsz	___llmod@divisor+3,w
  7566  1CE7  02F7               	subwf	___llmod@dividend+3,f
  7567  1CE8                     l3242:	
  7568  1CE8  3001               	movlw	1
  7569  1CE9                     u5185:	
  7570  1CE9  1003               	clrc
  7571  1CEA  0CF3               	rrf	___llmod@divisor+3,f
  7572  1CEB  0CF2               	rrf	___llmod@divisor+2,f
  7573  1CEC  0CF1               	rrf	___llmod@divisor+1,f
  7574  1CED  0CF0               	rrf	___llmod@divisor,f
  7575  1CEE  3EFF               	addlw	-1
  7576  1CEF  1D03               	skipz
  7577  1CF0  2CE9               	goto	u5185
  7578  1CF1                     l3244:	
  7579  1CF1  3001               	movlw	1
  7580  1CF2  02F9               	subwf	___llmod@counter,f
  7581  1CF3  1D03               	btfss	3,2
  7582  1CF4  2CF6               	goto	u5191
  7583  1CF5  2CF7               	goto	u5190
  7584  1CF6                     u5191:	
  7585  1CF6  2CC8               	goto	l3238
  7586  1CF7                     u5190:	
  7587  1CF7                     l3246:	
  7588  1CF7  0877               	movf	___llmod@dividend+3,w
  7589  1CF8  00F3               	movwf	?___llmod+3
  7590  1CF9  0876               	movf	___llmod@dividend+2,w
  7591  1CFA  00F2               	movwf	?___llmod+2
  7592  1CFB  0875               	movf	___llmod@dividend+1,w
  7593  1CFC  00F1               	movwf	?___llmod+1
  7594  1CFD  0874               	movf	___llmod@dividend,w
  7595  1CFE  00F0               	movwf	?___llmod
  7596  1CFF                     l615:	
  7597  1CFF  0008               	return
  7598  1D00                     __end_of___llmod:	
  7599                           
  7600                           	psect	text16
  7601  1D59                     __ptext16:	
  7602 ;; *************** function ___lldiv *****************
  7603 ;; Defined at:
  7604 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  divisor         4    0[COMMON] unsigned long 
  7607 ;;  dividend        4    4[COMMON] unsigned long 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  quotient        4    9[COMMON] unsigned long 
  7610 ;;  counter         1   13[COMMON] unsigned char 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  4    0[COMMON] unsigned long 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7620 ;;      Params:         8       0       0       0       0
  7621 ;;      Locals:         5       0       0       0       0
  7622 ;;      Temps:          1       0       0       0       0
  7623 ;;      Totals:        14       0       0       0       0
  7624 ;;Total ram usage:       14 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_sprintf
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           
  7634                           ;psect for function ___lldiv
  7635  1D59                     ___lldiv:	
  7636  1D59                     l3130:	
  7637                           ;incstack = 0
  7638                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7639                           
  7640  1D59  3000               	movlw	0
  7641  1D5A  00FC               	movwf	___lldiv@quotient+3
  7642  1D5B  3000               	movlw	0
  7643  1D5C  00FB               	movwf	___lldiv@quotient+2
  7644  1D5D  3000               	movlw	0
  7645  1D5E  00FA               	movwf	___lldiv@quotient+1
  7646  1D5F  3000               	movlw	0
  7647  1D60  00F9               	movwf	___lldiv@quotient
  7648  1D61  0873               	movf	___lldiv@divisor+3,w
  7649  1D62  0472               	iorwf	___lldiv@divisor+2,w
  7650  1D63  0471               	iorwf	___lldiv@divisor+1,w
  7651  1D64  0470               	iorwf	___lldiv@divisor,w
  7652  1D65  1903               	skipnz
  7653  1D66  2D68               	goto	u4861
  7654  1D67  2D69               	goto	u4860
  7655  1D68                     u4861:	
  7656  1D68  2DB6               	goto	l3150
  7657  1D69                     u4860:	
  7658  1D69                     l3132:	
  7659  1D69  01FD               	clrf	___lldiv@counter
  7660  1D6A  0AFD               	incf	___lldiv@counter,f
  7661  1D6B  2D79               	goto	l3136
  7662  1D6C                     l3134:	
  7663  1D6C  3001               	movlw	1
  7664  1D6D  00F8               	movwf	??___lldiv
  7665  1D6E                     u4875:	
  7666  1D6E  1003               	clrc
  7667  1D6F  0DF0               	rlf	___lldiv@divisor,f
  7668  1D70  0DF1               	rlf	___lldiv@divisor+1,f
  7669  1D71  0DF2               	rlf	___lldiv@divisor+2,f
  7670  1D72  0DF3               	rlf	___lldiv@divisor+3,f
  7671  1D73  0BF8               	decfsz	??___lldiv,f
  7672  1D74  2D6E               	goto	u4875
  7673  1D75  3001               	movlw	1
  7674  1D76  00F8               	movwf	??___lldiv
  7675  1D77  0878               	movf	??___lldiv,w
  7676  1D78  07FD               	addwf	___lldiv@counter,f
  7677  1D79                     l3136:	
  7678  1D79  1FF3               	btfss	___lldiv@divisor+3,7
  7679  1D7A  2D7C               	goto	u4881
  7680  1D7B  2D7D               	goto	u4880
  7681  1D7C                     u4881:	
  7682  1D7C  2D6C               	goto	l3134
  7683  1D7D                     u4880:	
  7684  1D7D                     l3138:	
  7685  1D7D  3001               	movlw	1
  7686  1D7E  00F8               	movwf	??___lldiv
  7687  1D7F                     u4895:	
  7688  1D7F  1003               	clrc
  7689  1D80  0DF9               	rlf	___lldiv@quotient,f
  7690  1D81  0DFA               	rlf	___lldiv@quotient+1,f
  7691  1D82  0DFB               	rlf	___lldiv@quotient+2,f
  7692  1D83  0DFC               	rlf	___lldiv@quotient+3,f
  7693  1D84  0BF8               	decfsz	??___lldiv,f
  7694  1D85  2D7F               	goto	u4895
  7695  1D86                     l3140:	
  7696  1D86  0873               	movf	___lldiv@divisor+3,w
  7697  1D87  0277               	subwf	___lldiv@dividend+3,w
  7698  1D88  1D03               	skipz
  7699  1D89  2D94               	goto	u4905
  7700  1D8A  0872               	movf	___lldiv@divisor+2,w
  7701  1D8B  0276               	subwf	___lldiv@dividend+2,w
  7702  1D8C  1D03               	skipz
  7703  1D8D  2D94               	goto	u4905
  7704  1D8E  0871               	movf	___lldiv@divisor+1,w
  7705  1D8F  0275               	subwf	___lldiv@dividend+1,w
  7706  1D90  1D03               	skipz
  7707  1D91  2D94               	goto	u4905
  7708  1D92  0870               	movf	___lldiv@divisor,w
  7709  1D93  0274               	subwf	___lldiv@dividend,w
  7710  1D94                     u4905:	
  7711  1D94  1C03               	skipc
  7712  1D95  2D97               	goto	u4901
  7713  1D96  2D98               	goto	u4900
  7714  1D97                     u4901:	
  7715  1D97  2DA7               	goto	l3146
  7716  1D98                     u4900:	
  7717  1D98                     l3142:	
  7718  1D98  0870               	movf	___lldiv@divisor,w
  7719  1D99  02F4               	subwf	___lldiv@dividend,f
  7720  1D9A  0871               	movf	___lldiv@divisor+1,w
  7721  1D9B  1C03               	skipc
  7722  1D9C  0F71               	incfsz	___lldiv@divisor+1,w
  7723  1D9D  02F5               	subwf	___lldiv@dividend+1,f
  7724  1D9E  0872               	movf	___lldiv@divisor+2,w
  7725  1D9F  1C03               	skipc
  7726  1DA0  0F72               	incfsz	___lldiv@divisor+2,w
  7727  1DA1  02F6               	subwf	___lldiv@dividend+2,f
  7728  1DA2  0873               	movf	___lldiv@divisor+3,w
  7729  1DA3  1C03               	skipc
  7730  1DA4  0F73               	incfsz	___lldiv@divisor+3,w
  7731  1DA5  02F7               	subwf	___lldiv@dividend+3,f
  7732  1DA6                     l3144:	
  7733  1DA6  1479               	bsf	___lldiv@quotient,0
  7734  1DA7                     l3146:	
  7735  1DA7  3001               	movlw	1
  7736  1DA8                     u4915:	
  7737  1DA8  1003               	clrc
  7738  1DA9  0CF3               	rrf	___lldiv@divisor+3,f
  7739  1DAA  0CF2               	rrf	___lldiv@divisor+2,f
  7740  1DAB  0CF1               	rrf	___lldiv@divisor+1,f
  7741  1DAC  0CF0               	rrf	___lldiv@divisor,f
  7742  1DAD  3EFF               	addlw	-1
  7743  1DAE  1D03               	skipz
  7744  1DAF  2DA8               	goto	u4915
  7745  1DB0                     l3148:	
  7746  1DB0  3001               	movlw	1
  7747  1DB1  02FD               	subwf	___lldiv@counter,f
  7748  1DB2  1D03               	btfss	3,2
  7749  1DB3  2DB5               	goto	u4921
  7750  1DB4  2DB6               	goto	u4920
  7751  1DB5                     u4921:	
  7752  1DB5  2D7D               	goto	l3138
  7753  1DB6                     u4920:	
  7754  1DB6                     l3150:	
  7755  1DB6  087C               	movf	___lldiv@quotient+3,w
  7756  1DB7  00F3               	movwf	?___lldiv+3
  7757  1DB8  087B               	movf	___lldiv@quotient+2,w
  7758  1DB9  00F2               	movwf	?___lldiv+2
  7759  1DBA  087A               	movf	___lldiv@quotient+1,w
  7760  1DBB  00F1               	movwf	?___lldiv+1
  7761  1DBC  0879               	movf	___lldiv@quotient,w
  7762  1DBD  00F0               	movwf	?___lldiv
  7763  1DBE                     l395:	
  7764  1DBE  0008               	return
  7765  1DBF                     __end_of___lldiv:	
  7766                           
  7767                           	psect	text17
  7768  1E28                     __ptext17:	
  7769 ;; *************** function ___fltol *****************
  7770 ;; Defined at:
  7771 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  f1              4   49[BANK0 ] unsigned long 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  exp1            1   59[BANK0 ] unsigned char 
  7776 ;;  sign1           1   58[BANK0 ] unsigned char 
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  4   49[BANK0 ] long 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7786 ;;      Params:         0       4       0       0       0
  7787 ;;      Locals:         0       2       0       0       0
  7788 ;;      Temps:          0       5       0       0       0
  7789 ;;      Totals:         0      11       0       0       0
  7790 ;;Total ram usage:       11 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_sprintf
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function ___fltol
  7801  1E28                     ___fltol:	
  7802  1E28                     l3194:	
  7803                           ;incstack = 0
  7804                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7805                           
  7806  1E28  1003               	clrc
  7807  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  7808  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  7809  1E2B  0D53               	rlf	___fltol@f1+2,w
  7810  1E2C  0D54               	rlf	___fltol@f1+3,w
  7811  1E2D  00D5               	movwf	??___fltol
  7812  1E2E  0855               	movf	??___fltol,w
  7813  1E2F  00DB               	movwf	___fltol@exp1
  7814  1E30  085B               	movf	___fltol@exp1,w
  7815  1E31  1D03               	btfss	3,2
  7816  1E32  2E34               	goto	u5041
  7817  1E33  2E35               	goto	u5040
  7818  1E34                     u5041:	
  7819  1E34  2E3E               	goto	l3200
  7820  1E35                     u5040:	
  7821  1E35                     l3196:	
  7822  1E35  3000               	movlw	0
  7823  1E36  00D4               	movwf	?___fltol+3
  7824  1E37  3000               	movlw	0
  7825  1E38  00D3               	movwf	?___fltol+2
  7826  1E39  3000               	movlw	0
  7827  1E3A  00D2               	movwf	?___fltol+1
  7828  1E3B  3000               	movlw	0
  7829  1E3C  00D1               	movwf	?___fltol
  7830  1E3D  2EA3               	goto	l562
  7831  1E3E                     l3200:	
  7832  1E3E  0851               	movf	___fltol@f1,w
  7833  1E3F  00D5               	movwf	??___fltol
  7834  1E40  0852               	movf	___fltol@f1+1,w
  7835  1E41  00D6               	movwf	??___fltol+1
  7836  1E42  0853               	movf	___fltol@f1+2,w
  7837  1E43  00D7               	movwf	??___fltol+2
  7838  1E44  0854               	movf	___fltol@f1+3,w
  7839  1E45  00D8               	movwf	??___fltol+3
  7840  1E46  301F               	movlw	31
  7841  1E47                     u5055:	
  7842  1E47  1003               	clrc
  7843  1E48  0CD8               	rrf	??___fltol+3,f
  7844  1E49  0CD7               	rrf	??___fltol+2,f
  7845  1E4A  0CD6               	rrf	??___fltol+1,f
  7846  1E4B  0CD5               	rrf	??___fltol,f
  7847  1E4C                     u5050:	
  7848  1E4C  3EFF               	addlw	-1
  7849  1E4D  1D03               	skipz
  7850  1E4E  2E47               	goto	u5055
  7851  1E4F  0855               	movf	??___fltol,w
  7852  1E50  00D9               	movwf	??___fltol+4
  7853  1E51  0859               	movf	??___fltol+4,w
  7854  1E52  00DA               	movwf	___fltol@sign1
  7855  1E53                     l3202:	
  7856  1E53  17D3               	bsf	___fltol@f1+2,7
  7857  1E54                     l3204:	
  7858  1E54  30FF               	movlw	255
  7859  1E55  05D1               	andwf	___fltol@f1,f
  7860  1E56  30FF               	movlw	255
  7861  1E57  05D2               	andwf	___fltol@f1+1,f
  7862  1E58  30FF               	movlw	255
  7863  1E59  05D3               	andwf	___fltol@f1+2,f
  7864  1E5A  3000               	movlw	0
  7865  1E5B  05D4               	andwf	___fltol@f1+3,f
  7866  1E5C                     l3206:	
  7867  1E5C  3096               	movlw	150
  7868  1E5D  02DB               	subwf	___fltol@exp1,f
  7869  1E5E                     l3208:	
  7870  1E5E  1FDB               	btfss	___fltol@exp1,7
  7871  1E5F  2E61               	goto	u5061
  7872  1E60  2E62               	goto	u5060
  7873  1E61                     u5061:	
  7874  1E61  2E7C               	goto	l3218
  7875  1E62                     u5060:	
  7876  1E62                     l3210:	
  7877  1E62  085B               	movf	___fltol@exp1,w
  7878  1E63  3A80               	xorlw	128
  7879  1E64  3E97               	addlw	151
  7880  1E65  1803               	skipnc
  7881  1E66  2E68               	goto	u5071
  7882  1E67  2E69               	goto	u5070
  7883  1E68                     u5071:	
  7884  1E68  2E6A               	goto	l3216
  7885  1E69                     u5070:	
  7886  1E69  2E35               	goto	l3196
  7887  1E6A                     l3216:	
  7888  1E6A  3001               	movlw	1
  7889  1E6B                     u5085:	
  7890  1E6B  1003               	clrc
  7891  1E6C  0CD4               	rrf	___fltol@f1+3,f
  7892  1E6D  0CD3               	rrf	___fltol@f1+2,f
  7893  1E6E  0CD2               	rrf	___fltol@f1+1,f
  7894  1E6F  0CD1               	rrf	___fltol@f1,f
  7895  1E70  3EFF               	addlw	-1
  7896  1E71  1D03               	skipz
  7897  1E72  2E6B               	goto	u5085
  7898  1E73  3001               	movlw	1
  7899  1E74  00D5               	movwf	??___fltol
  7900  1E75  0855               	movf	??___fltol,w
  7901  1E76  07DB               	addwf	___fltol@exp1,f
  7902  1E77  1D03               	btfss	3,2
  7903  1E78  2E7A               	goto	u5091
  7904  1E79  2E7B               	goto	u5090
  7905  1E7A                     u5091:	
  7906  1E7A  2E6A               	goto	l3216
  7907  1E7B                     u5090:	
  7908  1E7B  2E93               	goto	l3226
  7909  1E7C                     l3218:	
  7910  1E7C  3020               	movlw	32
  7911  1E7D  025B               	subwf	___fltol@exp1,w
  7912  1E7E  1C03               	skipc
  7913  1E7F  2E81               	goto	u5101
  7914  1E80  2E82               	goto	u5100
  7915  1E81                     u5101:	
  7916  1E81  2E8E               	goto	l569
  7917  1E82                     u5100:	
  7918  1E82  2E35               	goto	l3196
  7919  1E83                     l3224:	
  7920  1E83  3001               	movlw	1
  7921  1E84  00D5               	movwf	??___fltol
  7922  1E85                     u5115:	
  7923  1E85  1003               	clrc
  7924  1E86  0DD1               	rlf	___fltol@f1,f
  7925  1E87  0DD2               	rlf	___fltol@f1+1,f
  7926  1E88  0DD3               	rlf	___fltol@f1+2,f
  7927  1E89  0DD4               	rlf	___fltol@f1+3,f
  7928  1E8A  0BD5               	decfsz	??___fltol,f
  7929  1E8B  2E85               	goto	u5115
  7930  1E8C  3001               	movlw	1
  7931  1E8D  02DB               	subwf	___fltol@exp1,f
  7932  1E8E                     l569:	
  7933  1E8E  085B               	movf	___fltol@exp1,w
  7934  1E8F  1D03               	btfss	3,2
  7935  1E90  2E92               	goto	u5121
  7936  1E91  2E93               	goto	u5120
  7937  1E92                     u5121:	
  7938  1E92  2E83               	goto	l3224
  7939  1E93                     u5120:	
  7940  1E93                     l3226:	
  7941  1E93  085A               	movf	___fltol@sign1,w
  7942  1E94  1903               	btfsc	3,2
  7943  1E95  2E97               	goto	u5131
  7944  1E96  2E98               	goto	u5130
  7945  1E97                     u5131:	
  7946  1E97  2EA3               	goto	l572
  7947  1E98                     u5130:	
  7948  1E98                     l3228:	
  7949  1E98  09D1               	comf	___fltol@f1,f
  7950  1E99  09D2               	comf	___fltol@f1+1,f
  7951  1E9A  09D3               	comf	___fltol@f1+2,f
  7952  1E9B  09D4               	comf	___fltol@f1+3,f
  7953  1E9C  0AD1               	incf	___fltol@f1,f
  7954  1E9D  1903               	skipnz
  7955  1E9E  0AD2               	incf	___fltol@f1+1,f
  7956  1E9F  1903               	skipnz
  7957  1EA0  0AD3               	incf	___fltol@f1+2,f
  7958  1EA1  1903               	skipnz
  7959  1EA2  0AD4               	incf	___fltol@f1+3,f
  7960  1EA3                     l572:	
  7961  1EA3                     l562:	
  7962  1EA3  0008               	return
  7963  1EA4                     __end_of___fltol:	
  7964                           
  7965                           	psect	text18
  7966  1AD1                     __ptext18:	
  7967 ;; *************** function ___flsub *****************
  7968 ;; Defined at:
  7969 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  a               4   70[BANK0 ] long 
  7972 ;;  b               4   74[BANK0 ] long 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  4   70[BANK0 ] long 
  7977 ;; Registers used:
  7978 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7984 ;;      Params:         0       8       0       0       0
  7985 ;;      Locals:         0       0       0       0       0
  7986 ;;      Temps:          0       0       0       0       0
  7987 ;;      Totals:         0       8       0       0       0
  7988 ;;Total ram usage:        8 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    1
  7991 ;; This function calls:
  7992 ;;		___fladd
  7993 ;; This function is called by:
  7994 ;;		_sprintf
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function ___flsub
  8000  1AD1                     ___flsub:	
  8001  1AD1                     l3250:	
  8002                           ;incstack = 0
  8003                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8004                           
  8005  1AD1  3080               	movlw	128
  8006  1AD2  1283               	bcf	3,5	;RP0=0, select bank0
  8007  1AD3  1303               	bcf	3,6	;RP1=0, select bank0
  8008  1AD4  06E9               	xorwf	___flsub@a+3,f
  8009  1AD5                     l3252:	
  8010  1AD5  086D               	movf	___flsub@b+3,w
  8011  1AD6  00D5               	movwf	___fladd@b+3
  8012  1AD7  086C               	movf	___flsub@b+2,w
  8013  1AD8  00D4               	movwf	___fladd@b+2
  8014  1AD9  086B               	movf	___flsub@b+1,w
  8015  1ADA  00D3               	movwf	___fladd@b+1
  8016  1ADB  086A               	movf	___flsub@b,w
  8017  1ADC  00D2               	movwf	___fladd@b
  8018  1ADD  0869               	movf	___flsub@a+3,w
  8019  1ADE  00D9               	movwf	___fladd@a+3
  8020  1ADF  0868               	movf	___flsub@a+2,w
  8021  1AE0  00D8               	movwf	___fladd@a+2
  8022  1AE1  0867               	movf	___flsub@a+1,w
  8023  1AE2  00D7               	movwf	___fladd@a+1
  8024  1AE3  0866               	movf	___flsub@a,w
  8025  1AE4  00D6               	movwf	___fladd@a
  8026  1AE5  160A  118A  2578  160A  158A  	fcall	___fladd
  8027  1AEA  1283               	bcf	3,5	;RP0=0, select bank0
  8028  1AEB  1303               	bcf	3,6	;RP1=0, select bank0
  8029  1AEC  0855               	movf	?___fladd+3,w
  8030  1AED  00E9               	movwf	?___flsub+3
  8031  1AEE  0854               	movf	?___fladd+2,w
  8032  1AEF  00E8               	movwf	?___flsub+2
  8033  1AF0  0853               	movf	?___fladd+1,w
  8034  1AF1  00E7               	movwf	?___flsub+1
  8035  1AF2  0852               	movf	?___fladd,w
  8036  1AF3  00E6               	movwf	?___flsub
  8037  1AF4                     l732:	
  8038  1AF4  0008               	return
  8039  1AF5                     __end_of___flsub:	
  8040                           
  8041                           	psect	text19
  8042  1578                     __ptext19:	
  8043 ;; *************** function ___fladd *****************
  8044 ;; Defined at:
  8045 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  b               4   50[BANK0 ] long 
  8048 ;;  a               4   54[BANK0 ] long 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  grs             1   69[BANK0 ] unsigned char 
  8051 ;;  bexp            1   68[BANK0 ] unsigned char 
  8052 ;;  aexp            1   67[BANK0 ] unsigned char 
  8053 ;;  signs           1   66[BANK0 ] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  4   50[BANK0 ] unsigned char 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, btemp+1
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8063 ;;      Params:         0       8       0       0       0
  8064 ;;      Locals:         0       4       0       0       0
  8065 ;;      Temps:          0       8       0       0       0
  8066 ;;      Totals:         0      20       0       0       0
  8067 ;;Total ram usage:       20 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_sprintf
  8073 ;;		___flsub
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function ___fladd
  8079  1578                     ___fladd:	
  8080  1578                     l2586:	
  8081                           ;incstack = 0
  8082                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8083                           
  8084  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8085  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8086  157A  0855               	movf	___fladd@b+3,w
  8087  157B  3980               	andlw	128
  8088  157C  00DA               	movwf	??___fladd
  8089  157D  085A               	movf	??___fladd,w
  8090  157E  00E2               	movwf	___fladd@signs
  8091  157F                     l2588:	
  8092  157F  0855               	movf	___fladd@b+3,w
  8093  1580  00DA               	movwf	??___fladd
  8094  1581  075A               	addwf	??___fladd,w
  8095  1582  00DB               	movwf	??___fladd+1
  8096  1583  085B               	movf	??___fladd+1,w
  8097  1584  00E4               	movwf	___fladd@bexp
  8098  1585                     l2590:	
  8099  1585  1FD4               	btfss	___fladd@b+2,7
  8100  1586  2D88               	goto	u3461
  8101  1587  2D89               	goto	u3460
  8102  1588                     u3461:	
  8103  1588  2D8A               	goto	l2594
  8104  1589                     u3460:	
  8105  1589                     l2592:	
  8106  1589  1464               	bsf	___fladd@bexp,0
  8107  158A                     l2594:	
  8108  158A  0864               	movf	___fladd@bexp,w
  8109  158B  1903               	btfsc	3,2
  8110  158C  2D8E               	goto	u3471
  8111  158D  2D8F               	goto	u3470
  8112  158E                     u3471:	
  8113  158E  2D9F               	goto	l2604
  8114  158F                     u3470:	
  8115  158F                     l2596:	
  8116  158F  0A64               	incf	___fladd@bexp,w
  8117  1590  1D03               	btfss	3,2
  8118  1591  2D93               	goto	u3481
  8119  1592  2D94               	goto	u3480
  8120  1593                     u3481:	
  8121  1593  2D9C               	goto	l2600
  8122  1594                     u3480:	
  8123  1594                     l2598:	
  8124  1594  3000               	movlw	0
  8125  1595  00D5               	movwf	___fladd@b+3
  8126  1596  3000               	movlw	0
  8127  1597  00D4               	movwf	___fladd@b+2
  8128  1598  3000               	movlw	0
  8129  1599  00D3               	movwf	___fladd@b+1
  8130  159A  3000               	movlw	0
  8131  159B  00D2               	movwf	___fladd@b
  8132  159C                     l2600:	
  8133  159C  17D4               	bsf	___fladd@b+2,7
  8134  159D                     l2602:	
  8135  159D  01D5               	clrf	___fladd@b+3
  8136  159E  2DA7               	goto	l2606
  8137  159F                     l2604:	
  8138  159F  3000               	movlw	0
  8139  15A0  00D5               	movwf	___fladd@b+3
  8140  15A1  3000               	movlw	0
  8141  15A2  00D4               	movwf	___fladd@b+2
  8142  15A3  3000               	movlw	0
  8143  15A4  00D3               	movwf	___fladd@b+1
  8144  15A5  3000               	movlw	0
  8145  15A6  00D2               	movwf	___fladd@b
  8146  15A7                     l2606:	
  8147  15A7  0859               	movf	___fladd@a+3,w
  8148  15A8  3980               	andlw	128
  8149  15A9  00DA               	movwf	??___fladd
  8150  15AA  085A               	movf	??___fladd,w
  8151  15AB  00E3               	movwf	___fladd@aexp
  8152  15AC                     l2608:	
  8153  15AC  0863               	movf	___fladd@aexp,w
  8154  15AD  0662               	xorwf	___fladd@signs,w
  8155  15AE  1903               	skipnz
  8156  15AF  2DB1               	goto	u3491
  8157  15B0  2DB2               	goto	u3490
  8158  15B1                     u3491:	
  8159  15B1  2DB3               	goto	l2612
  8160  15B2                     u3490:	
  8161  15B2                     l2610:	
  8162  15B2  1762               	bsf	___fladd@signs,6
  8163  15B3                     l2612:	
  8164  15B3  0859               	movf	___fladd@a+3,w
  8165  15B4  00DA               	movwf	??___fladd
  8166  15B5  075A               	addwf	??___fladd,w
  8167  15B6  00DB               	movwf	??___fladd+1
  8168  15B7  085B               	movf	??___fladd+1,w
  8169  15B8  00E3               	movwf	___fladd@aexp
  8170  15B9                     l2614:	
  8171  15B9  1FD8               	btfss	___fladd@a+2,7
  8172  15BA  2DBC               	goto	u3501
  8173  15BB  2DBD               	goto	u3500
  8174  15BC                     u3501:	
  8175  15BC  2DBE               	goto	l2618
  8176  15BD                     u3500:	
  8177  15BD                     l2616:	
  8178  15BD  1463               	bsf	___fladd@aexp,0
  8179  15BE                     l2618:	
  8180  15BE  0863               	movf	___fladd@aexp,w
  8181  15BF  1903               	btfsc	3,2
  8182  15C0  2DC2               	goto	u3511
  8183  15C1  2DC3               	goto	u3510
  8184  15C2                     u3511:	
  8185  15C2  2DD3               	goto	l2628
  8186  15C3                     u3510:	
  8187  15C3                     l2620:	
  8188  15C3  0A63               	incf	___fladd@aexp,w
  8189  15C4  1D03               	btfss	3,2
  8190  15C5  2DC7               	goto	u3521
  8191  15C6  2DC8               	goto	u3520
  8192  15C7                     u3521:	
  8193  15C7  2DD0               	goto	l2624
  8194  15C8                     u3520:	
  8195  15C8                     l2622:	
  8196  15C8  3000               	movlw	0
  8197  15C9  00D9               	movwf	___fladd@a+3
  8198  15CA  3000               	movlw	0
  8199  15CB  00D8               	movwf	___fladd@a+2
  8200  15CC  3000               	movlw	0
  8201  15CD  00D7               	movwf	___fladd@a+1
  8202  15CE  3000               	movlw	0
  8203  15CF  00D6               	movwf	___fladd@a
  8204  15D0                     l2624:	
  8205  15D0  17D8               	bsf	___fladd@a+2,7
  8206  15D1                     l2626:	
  8207  15D1  01D9               	clrf	___fladd@a+3
  8208  15D2  2DDB               	goto	l686
  8209  15D3                     l2628:	
  8210  15D3  3000               	movlw	0
  8211  15D4  00D9               	movwf	___fladd@a+3
  8212  15D5  3000               	movlw	0
  8213  15D6  00D8               	movwf	___fladd@a+2
  8214  15D7  3000               	movlw	0
  8215  15D8  00D7               	movwf	___fladd@a+1
  8216  15D9  3000               	movlw	0
  8217  15DA  00D6               	movwf	___fladd@a
  8218  15DB                     l686:	
  8219  15DB  0864               	movf	___fladd@bexp,w
  8220  15DC  0263               	subwf	___fladd@aexp,w
  8221  15DD  1803               	skipnc
  8222  15DE  2DE0               	goto	u3531
  8223  15DF  2DE1               	goto	u3530
  8224  15E0                     u3531:	
  8225  15E0  2E25               	goto	l2664
  8226  15E1                     u3530:	
  8227  15E1                     l2630:	
  8228  15E1  1F62               	btfss	___fladd@signs,6
  8229  15E2  2DE4               	goto	u3541
  8230  15E3  2DE5               	goto	u3540
  8231  15E4                     u3541:	
  8232  15E4  2DE9               	goto	l2634
  8233  15E5                     u3540:	
  8234  15E5                     l2632:	
  8235  15E5  3080               	movlw	128
  8236  15E6  00DA               	movwf	??___fladd
  8237  15E7  085A               	movf	??___fladd,w
  8238  15E8  06E2               	xorwf	___fladd@signs,f
  8239  15E9                     l2634:	
  8240  15E9  0864               	movf	___fladd@bexp,w
  8241  15EA  00DA               	movwf	??___fladd
  8242  15EB  085A               	movf	??___fladd,w
  8243  15EC  00E5               	movwf	___fladd@grs
  8244  15ED                     l2636:	
  8245  15ED  0863               	movf	___fladd@aexp,w
  8246  15EE  00DA               	movwf	??___fladd
  8247  15EF  085A               	movf	??___fladd,w
  8248  15F0  00E4               	movwf	___fladd@bexp
  8249  15F1                     l2638:	
  8250  15F1  0865               	movf	___fladd@grs,w
  8251  15F2  00DA               	movwf	??___fladd
  8252  15F3  085A               	movf	??___fladd,w
  8253  15F4  00E3               	movwf	___fladd@aexp
  8254  15F5                     l2640:	
  8255  15F5  0852               	movf	___fladd@b,w
  8256  15F6  00DA               	movwf	??___fladd
  8257  15F7  085A               	movf	??___fladd,w
  8258  15F8  00E5               	movwf	___fladd@grs
  8259  15F9                     l2642:	
  8260  15F9  0856               	movf	___fladd@a,w
  8261  15FA  00DA               	movwf	??___fladd
  8262  15FB  085A               	movf	??___fladd,w
  8263  15FC  00D2               	movwf	___fladd@b
  8264  15FD                     l2644:	
  8265  15FD  0865               	movf	___fladd@grs,w
  8266  15FE  00DA               	movwf	??___fladd
  8267  15FF  085A               	movf	??___fladd,w
  8268  1600  00D6               	movwf	___fladd@a
  8269  1601                     l2646:	
  8270  1601  0853               	movf	___fladd@b+1,w
  8271  1602  00DA               	movwf	??___fladd
  8272  1603  085A               	movf	??___fladd,w
  8273  1604  00E5               	movwf	___fladd@grs
  8274  1605                     l2648:	
  8275  1605  0857               	movf	___fladd@a+1,w
  8276  1606  00DA               	movwf	??___fladd
  8277  1607  085A               	movf	??___fladd,w
  8278  1608  00D3               	movwf	___fladd@b+1
  8279  1609                     l2650:	
  8280  1609  0865               	movf	___fladd@grs,w
  8281  160A  00DA               	movwf	??___fladd
  8282  160B  085A               	movf	??___fladd,w
  8283  160C  00D7               	movwf	___fladd@a+1
  8284  160D                     l2652:	
  8285  160D  0854               	movf	___fladd@b+2,w
  8286  160E  00DA               	movwf	??___fladd
  8287  160F  085A               	movf	??___fladd,w
  8288  1610  00E5               	movwf	___fladd@grs
  8289  1611                     l2654:	
  8290  1611  0858               	movf	___fladd@a+2,w
  8291  1612  00DA               	movwf	??___fladd
  8292  1613  085A               	movf	??___fladd,w
  8293  1614  00D4               	movwf	___fladd@b+2
  8294  1615                     l2656:	
  8295  1615  0865               	movf	___fladd@grs,w
  8296  1616  00DA               	movwf	??___fladd
  8297  1617  085A               	movf	??___fladd,w
  8298  1618  00D8               	movwf	___fladd@a+2
  8299  1619                     l2658:	
  8300  1619  0855               	movf	___fladd@b+3,w
  8301  161A  00DA               	movwf	??___fladd
  8302  161B  085A               	movf	??___fladd,w
  8303  161C  00E5               	movwf	___fladd@grs
  8304  161D                     l2660:	
  8305  161D  0859               	movf	___fladd@a+3,w
  8306  161E  00DA               	movwf	??___fladd
  8307  161F  085A               	movf	??___fladd,w
  8308  1620  00D5               	movwf	___fladd@b+3
  8309  1621                     l2662:	
  8310  1621  0865               	movf	___fladd@grs,w
  8311  1622  00DA               	movwf	??___fladd
  8312  1623  085A               	movf	??___fladd,w
  8313  1624  00D9               	movwf	___fladd@a+3
  8314  1625                     l2664:	
  8315  1625  01E5               	clrf	___fladd@grs
  8316  1626                     l2666:	
  8317  1626  0863               	movf	___fladd@aexp,w
  8318  1627  00DA               	movwf	??___fladd
  8319  1628  01DB               	clrf	??___fladd+1
  8320  1629  085B               	movf	??___fladd+1,w
  8321  162A  00DD               	movwf	??___fladd+3
  8322  162B  0864               	movf	___fladd@bexp,w
  8323  162C  025A               	subwf	??___fladd,w
  8324  162D  00DC               	movwf	??___fladd+2
  8325  162E  1C03               	skipc
  8326  162F  03DD               	decf	??___fladd+3,f
  8327  1630  085D               	movf	??___fladd+3,w
  8328  1631  3A80               	xorlw	128
  8329  1632  00FF               	movwf	btemp+1
  8330  1633  3080               	movlw	128
  8331  1634  027F               	subwf	btemp+1,w
  8332  1635  1D03               	skipz
  8333  1636  2E39               	goto	u3555
  8334  1637  301A               	movlw	26
  8335  1638  025C               	subwf	??___fladd+2,w
  8336  1639                     u3555:	
  8337  1639  1C03               	skipc
  8338  163A  2E3C               	goto	u3551
  8339  163B  2E3D               	goto	u3550
  8340  163C                     u3551:	
  8341  163C  2E7A               	goto	l2682
  8342  163D                     u3550:	
  8343  163D                     l2668:	
  8344  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8345  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8346  163F  0855               	movf	___fladd@b+3,w
  8347  1640  0454               	iorwf	___fladd@b+2,w
  8348  1641  0453               	iorwf	___fladd@b+1,w
  8349  1642  0452               	iorwf	___fladd@b,w
  8350  1643  1D03               	skipz
  8351  1644  2E46               	goto	u3561
  8352  1645  2E48               	goto	u3560
  8353  1646                     u3561:	
  8354  1646  3001               	movlw	1
  8355  1647  2E49               	goto	u3570
  8356  1648                     u3560:	
  8357  1648  3000               	movlw	0
  8358  1649                     u3570:	
  8359  1649  00DA               	movwf	??___fladd
  8360  164A  085A               	movf	??___fladd,w
  8361  164B  00E5               	movwf	___fladd@grs
  8362  164C  3000               	movlw	0
  8363  164D  00D5               	movwf	___fladd@b+3
  8364  164E  3000               	movlw	0
  8365  164F  00D4               	movwf	___fladd@b+2
  8366  1650  3000               	movlw	0
  8367  1651  00D3               	movwf	___fladd@b+1
  8368  1652  3000               	movlw	0
  8369  1653  00D2               	movwf	___fladd@b
  8370  1654  0863               	movf	___fladd@aexp,w
  8371  1655  00DA               	movwf	??___fladd
  8372  1656  085A               	movf	??___fladd,w
  8373  1657  00E4               	movwf	___fladd@bexp
  8374  1658  2E82               	goto	l690
  8375  1659                     l692:	
  8376  1659  1C65               	btfss	___fladd@grs,0
  8377  165A  2E5C               	goto	u3581
  8378  165B  2E5D               	goto	u3580
  8379  165C                     u3581:	
  8380  165C  2E66               	goto	l2672
  8381  165D                     u3580:	
  8382  165D                     l2670:	
  8383  165D  0865               	movf	___fladd@grs,w
  8384  165E  00DA               	movwf	??___fladd
  8385  165F  1003               	clrc
  8386  1660  0C5A               	rrf	??___fladd,w
  8387  1661  3801               	iorlw	1
  8388  1662  00DB               	movwf	??___fladd+1
  8389  1663  085B               	movf	??___fladd+1,w
  8390  1664  00E5               	movwf	___fladd@grs
  8391  1665  2E68               	goto	l2674
  8392  1666                     l2672:	
  8393  1666  1003               	clrc
  8394  1667  0CE5               	rrf	___fladd@grs,f
  8395  1668                     l2674:	
  8396  1668  1C52               	btfss	___fladd@b,0
  8397  1669  2E6B               	goto	u3591
  8398  166A  2E6C               	goto	u3590
  8399  166B                     u3591:	
  8400  166B  2E6D               	goto	l2678
  8401  166C                     u3590:	
  8402  166C                     l2676:	
  8403  166C  17E5               	bsf	___fladd@grs,7
  8404  166D                     l2678:	
  8405  166D  3001               	movlw	1
  8406  166E  00DA               	movwf	??___fladd
  8407  166F                     u3605:	
  8408  166F  0D55               	rlf	___fladd@b+3,w
  8409  1670  0CD5               	rrf	___fladd@b+3,f
  8410  1671  0CD4               	rrf	___fladd@b+2,f
  8411  1672  0CD3               	rrf	___fladd@b+1,f
  8412  1673  0CD2               	rrf	___fladd@b,f
  8413  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8414  1675  2E6F               	goto	u3605
  8415  1676                     l2680:	
  8416  1676  3001               	movlw	1
  8417  1677  00DA               	movwf	??___fladd
  8418  1678  085A               	movf	??___fladd,w
  8419  1679  07E4               	addwf	___fladd@bexp,f
  8420  167A                     l2682:	
  8421  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8422  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8423  167C  0863               	movf	___fladd@aexp,w
  8424  167D  0264               	subwf	___fladd@bexp,w
  8425  167E  1C03               	skipc
  8426  167F  2E81               	goto	u3611
  8427  1680  2E82               	goto	u3610
  8428  1681                     u3611:	
  8429  1681  2E59               	goto	l692
  8430  1682                     u3610:	
  8431  1682                     l690:	
  8432  1682  1B62               	btfsc	___fladd@signs,6
  8433  1683  2E85               	goto	u3621
  8434  1684  2E86               	goto	u3620
  8435  1685                     u3621:	
  8436  1685  2ED1               	goto	l2708
  8437  1686                     u3620:	
  8438  1686                     l2684:	
  8439  1686  0864               	movf	___fladd@bexp,w
  8440  1687  1D03               	btfss	3,2
  8441  1688  2E8A               	goto	u3631
  8442  1689  2E8B               	goto	u3630
  8443  168A                     u3631:	
  8444  168A  2E94               	goto	l2690
  8445  168B                     u3630:	
  8446  168B                     l2686:	
  8447  168B  3000               	movlw	0
  8448  168C  00D5               	movwf	?___fladd+3
  8449  168D  3000               	movlw	0
  8450  168E  00D4               	movwf	?___fladd+2
  8451  168F  3000               	movlw	0
  8452  1690  00D3               	movwf	?___fladd+1
  8453  1691  3000               	movlw	0
  8454  1692  00D2               	movwf	?___fladd
  8455  1693  2FFF               	goto	l699
  8456  1694                     l2690:	
  8457  1694  0856               	movf	___fladd@a,w
  8458  1695  07D2               	addwf	___fladd@b,f
  8459  1696  0857               	movf	___fladd@a+1,w
  8460  1697  1103               	clrz
  8461  1698  1803               	skipnc
  8462  1699  3E01               	addlw	1
  8463  169A  1903               	skipnz
  8464  169B  2E9D               	goto	u3641
  8465  169C  07D3               	addwf	___fladd@b+1,f
  8466  169D                     u3641:	
  8467  169D  0858               	movf	___fladd@a+2,w
  8468  169E  1103               	clrz
  8469  169F  1803               	skipnc
  8470  16A0  3E01               	addlw	1
  8471  16A1  1903               	skipnz
  8472  16A2  2EA4               	goto	u3642
  8473  16A3  07D4               	addwf	___fladd@b+2,f
  8474  16A4                     u3642:	
  8475  16A4  0859               	movf	___fladd@a+3,w
  8476  16A5  1103               	clrz
  8477  16A6  1803               	skipnc
  8478  16A7  3E01               	addlw	1
  8479  16A8  1903               	skipnz
  8480  16A9  2EAB               	goto	u3643
  8481  16AA  07D5               	addwf	___fladd@b+3,f
  8482  16AB                     u3643:	
  8483  16AB                     l2692:	
  8484  16AB  1C55               	btfss	___fladd@b+3,0
  8485  16AC  2EAE               	goto	u3651
  8486  16AD  2EAF               	goto	u3650
  8487  16AE                     u3651:	
  8488  16AE  2F85               	goto	l2742
  8489  16AF                     u3650:	
  8490  16AF                     l2694:	
  8491  16AF  1C65               	btfss	___fladd@grs,0
  8492  16B0  2EB2               	goto	u3661
  8493  16B1  2EB3               	goto	u3660
  8494  16B2                     u3661:	
  8495  16B2  2EBC               	goto	l2698
  8496  16B3                     u3660:	
  8497  16B3                     l2696:	
  8498  16B3  0865               	movf	___fladd@grs,w
  8499  16B4  00DA               	movwf	??___fladd
  8500  16B5  1003               	clrc
  8501  16B6  0C5A               	rrf	??___fladd,w
  8502  16B7  3801               	iorlw	1
  8503  16B8  00DB               	movwf	??___fladd+1
  8504  16B9  085B               	movf	??___fladd+1,w
  8505  16BA  00E5               	movwf	___fladd@grs
  8506  16BB  2EBE               	goto	l2700
  8507  16BC                     l2698:	
  8508  16BC  1003               	clrc
  8509  16BD  0CE5               	rrf	___fladd@grs,f
  8510  16BE                     l2700:	
  8511  16BE  1C52               	btfss	___fladd@b,0
  8512  16BF  2EC1               	goto	u3671
  8513  16C0  2EC2               	goto	u3670
  8514  16C1                     u3671:	
  8515  16C1  2EC3               	goto	l2704
  8516  16C2                     u3670:	
  8517  16C2                     l2702:	
  8518  16C2  17E5               	bsf	___fladd@grs,7
  8519  16C3                     l2704:	
  8520  16C3  3001               	movlw	1
  8521  16C4  00DA               	movwf	??___fladd
  8522  16C5                     u3685:	
  8523  16C5  0D55               	rlf	___fladd@b+3,w
  8524  16C6  0CD5               	rrf	___fladd@b+3,f
  8525  16C7  0CD4               	rrf	___fladd@b+2,f
  8526  16C8  0CD3               	rrf	___fladd@b+1,f
  8527  16C9  0CD2               	rrf	___fladd@b,f
  8528  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8529  16CB  2EC5               	goto	u3685
  8530  16CC                     l2706:	
  8531  16CC  3001               	movlw	1
  8532  16CD  00DA               	movwf	??___fladd
  8533  16CE  085A               	movf	??___fladd,w
  8534  16CF  07E4               	addwf	___fladd@bexp,f
  8535  16D0  2F85               	goto	l2742
  8536  16D1                     l2708:	
  8537  16D1  0855               	movf	___fladd@b+3,w
  8538  16D2  3A80               	xorlw	128
  8539  16D3  00FF               	movwf	btemp+1
  8540  16D4  0859               	movf	___fladd@a+3,w
  8541  16D5  3A80               	xorlw	128
  8542  16D6  027F               	subwf	btemp+1,w
  8543  16D7  1D03               	skipz
  8544  16D8  2EE3               	goto	u3693
  8545  16D9  0858               	movf	___fladd@a+2,w
  8546  16DA  0254               	subwf	___fladd@b+2,w
  8547  16DB  1D03               	skipz
  8548  16DC  2EE3               	goto	u3693
  8549  16DD  0857               	movf	___fladd@a+1,w
  8550  16DE  0253               	subwf	___fladd@b+1,w
  8551  16DF  1D03               	skipz
  8552  16E0  2EE3               	goto	u3693
  8553  16E1  0856               	movf	___fladd@a,w
  8554  16E2  0252               	subwf	___fladd@b,w
  8555  16E3                     u3693:	
  8556  16E3  1803               	skipnc
  8557  16E4  2EE6               	goto	u3691
  8558  16E5  2EE7               	goto	u3690
  8559  16E6                     u3691:	
  8560  16E6  2F3F               	goto	l2718
  8561  16E7                     u3690:	
  8562  16E7                     l2710:	
  8563  16E7  30FF               	movlw	255
  8564  16E8  00DA               	movwf	??___fladd
  8565  16E9  30FF               	movlw	255
  8566  16EA  00DB               	movwf	??___fladd+1
  8567  16EB  30FF               	movlw	255
  8568  16EC  00DC               	movwf	??___fladd+2
  8569  16ED  30FF               	movlw	255
  8570  16EE  00DD               	movwf	??___fladd+3
  8571  16EF  0856               	movf	___fladd@a,w
  8572  16F0  00DE               	movwf	??___fladd+4
  8573  16F1  0857               	movf	___fladd@a+1,w
  8574  16F2  00DF               	movwf	??___fladd+5
  8575  16F3  0858               	movf	___fladd@a+2,w
  8576  16F4  00E0               	movwf	??___fladd+6
  8577  16F5  0859               	movf	___fladd@a+3,w
  8578  16F6  00E1               	movwf	??___fladd+7
  8579  16F7  0852               	movf	___fladd@b,w
  8580  16F8  02DE               	subwf	??___fladd+4,f
  8581  16F9  0853               	movf	___fladd@b+1,w
  8582  16FA  1C03               	skipc
  8583  16FB  0F53               	incfsz	___fladd@b+1,w
  8584  16FC  2EFE               	goto	u3701
  8585  16FD  2EFF               	goto	u3702
  8586  16FE                     u3701:	
  8587  16FE  02DF               	subwf	??___fladd+5,f
  8588  16FF                     u3702:	
  8589  16FF  0854               	movf	___fladd@b+2,w
  8590  1700  1C03               	skipc
  8591  1701  0F54               	incfsz	___fladd@b+2,w
  8592  1702  2F04               	goto	u3703
  8593  1703  2F05               	goto	u3704
  8594  1704                     u3703:	
  8595  1704  02E0               	subwf	??___fladd+6,f
  8596  1705                     u3704:	
  8597  1705  0855               	movf	___fladd@b+3,w
  8598  1706  1C03               	skipc
  8599  1707  0F55               	incfsz	___fladd@b+3,w
  8600  1708  2F0A               	goto	u3705
  8601  1709  2F0B               	goto	u3706
  8602  170A                     u3705:	
  8603  170A  02E1               	subwf	??___fladd+7,f
  8604  170B                     u3706:	
  8605  170B  085E               	movf	??___fladd+4,w
  8606  170C  07DA               	addwf	??___fladd,f
  8607  170D  085F               	movf	??___fladd+5,w
  8608  170E  1803               	skipnc
  8609  170F  0F5F               	incfsz	??___fladd+5,w
  8610  1710  2F12               	goto	u3710
  8611  1711  2F13               	goto	u3711
  8612  1712                     u3710:	
  8613  1712  07DB               	addwf	??___fladd+1,f
  8614  1713                     u3711:	
  8615  1713  0860               	movf	??___fladd+6,w
  8616  1714  1803               	skipnc
  8617  1715  0F60               	incfsz	??___fladd+6,w
  8618  1716  2F18               	goto	u3712
  8619  1717  2F19               	goto	u3713
  8620  1718                     u3712:	
  8621  1718  07DC               	addwf	??___fladd+2,f
  8622  1719                     u3713:	
  8623  1719  0861               	movf	??___fladd+7,w
  8624  171A  1803               	skipnc
  8625  171B  0A61               	incf	??___fladd+7,w
  8626  171C  07DD               	addwf	??___fladd+3,f
  8627  171D  085D               	movf	??___fladd+3,w
  8628  171E  00D5               	movwf	___fladd@b+3
  8629  171F  085C               	movf	??___fladd+2,w
  8630  1720  00D4               	movwf	___fladd@b+2
  8631  1721  085B               	movf	??___fladd+1,w
  8632  1722  00D3               	movwf	___fladd@b+1
  8633  1723  085A               	movf	??___fladd,w
  8634  1724  00D2               	movwf	___fladd@b
  8635  1725                     l2712:	
  8636  1725  3080               	movlw	128
  8637  1726  00DA               	movwf	??___fladd
  8638  1727  085A               	movf	??___fladd,w
  8639  1728  06E2               	xorwf	___fladd@signs,f
  8640  1729  09E5               	comf	___fladd@grs,f
  8641  172A  0AE5               	incf	___fladd@grs,f
  8642  172B                     l2714:	
  8643  172B  0865               	movf	___fladd@grs,w
  8644  172C  1D03               	btfss	3,2
  8645  172D  2F2F               	goto	u3721
  8646  172E  2F30               	goto	u3720
  8647  172F                     u3721:	
  8648  172F  2F4D               	goto	l707
  8649  1730                     u3720:	
  8650  1730                     l2716:	
  8651  1730  3001               	movlw	1
  8652  1731  07D2               	addwf	___fladd@b,f
  8653  1732  3000               	movlw	0
  8654  1733  1803               	skipnc
  8655  1734  3001               	movlw	1
  8656  1735  07D3               	addwf	___fladd@b+1,f
  8657  1736  3000               	movlw	0
  8658  1737  1803               	skipnc
  8659  1738  3001               	movlw	1
  8660  1739  07D4               	addwf	___fladd@b+2,f
  8661  173A  3000               	movlw	0
  8662  173B  1803               	skipnc
  8663  173C  3001               	movlw	1
  8664  173D  07D5               	addwf	___fladd@b+3,f
  8665  173E  2F4D               	goto	l707
  8666  173F                     l2718:	
  8667  173F  0856               	movf	___fladd@a,w
  8668  1740  02D2               	subwf	___fladd@b,f
  8669  1741  0857               	movf	___fladd@a+1,w
  8670  1742  1C03               	skipc
  8671  1743  0F57               	incfsz	___fladd@a+1,w
  8672  1744  02D3               	subwf	___fladd@b+1,f
  8673  1745  0858               	movf	___fladd@a+2,w
  8674  1746  1C03               	skipc
  8675  1747  0F58               	incfsz	___fladd@a+2,w
  8676  1748  02D4               	subwf	___fladd@b+2,f
  8677  1749  0859               	movf	___fladd@a+3,w
  8678  174A  1C03               	skipc
  8679  174B  0F59               	incfsz	___fladd@a+3,w
  8680  174C  02D5               	subwf	___fladd@b+3,f
  8681  174D                     l707:	
  8682  174D  0855               	movf	___fladd@b+3,w
  8683  174E  0454               	iorwf	___fladd@b+2,w
  8684  174F  0453               	iorwf	___fladd@b+1,w
  8685  1750  0452               	iorwf	___fladd@b,w
  8686  1751  1D03               	skipz
  8687  1752  2F54               	goto	u3731
  8688  1753  2F55               	goto	u3730
  8689  1754                     u3731:	
  8690  1754  2F81               	goto	l2740
  8691  1755                     u3730:	
  8692  1755                     l2720:	
  8693  1755  0865               	movf	___fladd@grs,w
  8694  1756  1D03               	btfss	3,2
  8695  1757  2F59               	goto	u3741
  8696  1758  2F5A               	goto	u3740
  8697  1759                     u3741:	
  8698  1759  2F81               	goto	l2740
  8699  175A                     u3740:	
  8700  175A                     l2722:	
  8701  175A  3000               	movlw	0
  8702  175B  00D5               	movwf	?___fladd+3
  8703  175C  3000               	movlw	0
  8704  175D  00D4               	movwf	?___fladd+2
  8705  175E  3000               	movlw	0
  8706  175F  00D3               	movwf	?___fladd+1
  8707  1760  3000               	movlw	0
  8708  1761  00D2               	movwf	?___fladd
  8709  1762  2FFF               	goto	l699
  8710  1763                     l2726:	
  8711  1763  3001               	movlw	1
  8712  1764  00DA               	movwf	??___fladd
  8713  1765                     u3755:	
  8714  1765  1003               	clrc
  8715  1766  0DD2               	rlf	___fladd@b,f
  8716  1767  0DD3               	rlf	___fladd@b+1,f
  8717  1768  0DD4               	rlf	___fladd@b+2,f
  8718  1769  0DD5               	rlf	___fladd@b+3,f
  8719  176A  0BDA               	decfsz	??___fladd,f
  8720  176B  2F65               	goto	u3755
  8721  176C                     l2728:	
  8722  176C  1FE5               	btfss	___fladd@grs,7
  8723  176D  2F6F               	goto	u3761
  8724  176E  2F70               	goto	u3760
  8725  176F                     u3761:	
  8726  176F  2F71               	goto	l711
  8727  1770                     u3760:	
  8728  1770                     l2730:	
  8729  1770  1452               	bsf	___fladd@b,0
  8730  1771                     l711:	
  8731  1771  1C65               	btfss	___fladd@grs,0
  8732  1772  2F74               	goto	u3771
  8733  1773  2F75               	goto	u3770
  8734  1774                     u3771:	
  8735  1774  2F78               	goto	l2734
  8736  1775                     u3770:	
  8737  1775                     l2732:	
  8738  1775  1403               	setc
  8739  1776  0DE5               	rlf	___fladd@grs,f
  8740  1777  2F7A               	goto	l2736
  8741  1778                     l2734:	
  8742  1778  1003               	clrc
  8743  1779  0DE5               	rlf	___fladd@grs,f
  8744  177A                     l2736:	
  8745  177A  0864               	movf	___fladd@bexp,w
  8746  177B  1903               	btfsc	3,2
  8747  177C  2F7E               	goto	u3781
  8748  177D  2F7F               	goto	u3780
  8749  177E                     u3781:	
  8750  177E  2F81               	goto	l2740
  8751  177F                     u3780:	
  8752  177F                     l2738:	
  8753  177F  3001               	movlw	1
  8754  1780  02E4               	subwf	___fladd@bexp,f
  8755  1781                     l2740:	
  8756  1781  1FD4               	btfss	___fladd@b+2,7
  8757  1782  2F84               	goto	u3791
  8758  1783  2F85               	goto	u3790
  8759  1784                     u3791:	
  8760  1784  2F63               	goto	l2726
  8761  1785                     u3790:	
  8762  1785                     l2742:	
  8763  1785  01E3               	clrf	___fladd@aexp
  8764  1786                     l2744:	
  8765  1786  1FE5               	btfss	___fladd@grs,7
  8766  1787  2F89               	goto	u3801
  8767  1788  2F8A               	goto	u3800
  8768  1789                     u3801:	
  8769  1789  2F98               	goto	l2752
  8770  178A                     u3800:	
  8771  178A                     l2746:	
  8772  178A  0865               	movf	___fladd@grs,w
  8773  178B  397F               	andlw	127
  8774  178C  1903               	btfsc	3,2
  8775  178D  2F8F               	goto	u3811
  8776  178E  2F90               	goto	u3810
  8777  178F                     u3811:	
  8778  178F  2F93               	goto	l717
  8779  1790                     u3810:	
  8780  1790                     l2748:	
  8781  1790  01E3               	clrf	___fladd@aexp
  8782  1791  0AE3               	incf	___fladd@aexp,f
  8783  1792  2F98               	goto	l2752
  8784  1793                     l717:	
  8785  1793  1C52               	btfss	___fladd@b,0
  8786  1794  2F96               	goto	u3821
  8787  1795  2F97               	goto	u3820
  8788  1796                     u3821:	
  8789  1796  2F98               	goto	l2752
  8790  1797                     u3820:	
  8791  1797  2F90               	goto	l2748
  8792  1798                     l2752:	
  8793  1798  0863               	movf	___fladd@aexp,w
  8794  1799  1903               	btfsc	3,2
  8795  179A  2F9C               	goto	u3831
  8796  179B  2F9D               	goto	u3830
  8797  179C                     u3831:	
  8798  179C  2FD1               	goto	l720
  8799  179D                     u3830:	
  8800  179D                     l2754:	
  8801  179D  3001               	movlw	1
  8802  179E  07D2               	addwf	___fladd@b,f
  8803  179F  3000               	movlw	0
  8804  17A0  1803               	skipnc
  8805  17A1  3001               	movlw	1
  8806  17A2  07D3               	addwf	___fladd@b+1,f
  8807  17A3  3000               	movlw	0
  8808  17A4  1803               	skipnc
  8809  17A5  3001               	movlw	1
  8810  17A6  07D4               	addwf	___fladd@b+2,f
  8811  17A7  3000               	movlw	0
  8812  17A8  1803               	skipnc
  8813  17A9  3001               	movlw	1
  8814  17AA  07D5               	addwf	___fladd@b+3,f
  8815  17AB                     l2756:	
  8816  17AB  1C55               	btfss	___fladd@b+3,0
  8817  17AC  2FAE               	goto	u3841
  8818  17AD  2FAF               	goto	u3840
  8819  17AE                     u3841:	
  8820  17AE  2FD1               	goto	l720
  8821  17AF                     u3840:	
  8822  17AF                     l2758:	
  8823  17AF  0852               	movf	___fladd@b,w
  8824  17B0  00DA               	movwf	??___fladd
  8825  17B1  0853               	movf	___fladd@b+1,w
  8826  17B2  00DB               	movwf	??___fladd+1
  8827  17B3  0854               	movf	___fladd@b+2,w
  8828  17B4  00DC               	movwf	??___fladd+2
  8829  17B5  0855               	movf	___fladd@b+3,w
  8830  17B6  00DD               	movwf	??___fladd+3
  8831  17B7  3001               	movlw	1
  8832  17B8  00DE               	movwf	??___fladd+4
  8833  17B9                     u3855:	
  8834  17B9  0D5D               	rlf	??___fladd+3,w
  8835  17BA  0CDD               	rrf	??___fladd+3,f
  8836  17BB  0CDC               	rrf	??___fladd+2,f
  8837  17BC  0CDB               	rrf	??___fladd+1,f
  8838  17BD  0CDA               	rrf	??___fladd,f
  8839  17BE                     u3850:	
  8840  17BE  0BDE               	decfsz	??___fladd+4,f
  8841  17BF  2FB9               	goto	u3855
  8842  17C0  085D               	movf	??___fladd+3,w
  8843  17C1  00D5               	movwf	___fladd@b+3
  8844  17C2  085C               	movf	??___fladd+2,w
  8845  17C3  00D4               	movwf	___fladd@b+2
  8846  17C4  085B               	movf	??___fladd+1,w
  8847  17C5  00D3               	movwf	___fladd@b+1
  8848  17C6  085A               	movf	??___fladd,w
  8849  17C7  00D2               	movwf	___fladd@b
  8850  17C8  0A64               	incf	___fladd@bexp,w
  8851  17C9  1903               	btfsc	3,2
  8852  17CA  2FCC               	goto	u3861
  8853  17CB  2FCD               	goto	u3860
  8854  17CC                     u3861:	
  8855  17CC  2FD1               	goto	l720
  8856  17CD                     u3860:	
  8857  17CD                     l2760:	
  8858  17CD  3001               	movlw	1
  8859  17CE  00DA               	movwf	??___fladd
  8860  17CF  085A               	movf	??___fladd,w
  8861  17D0  07E4               	addwf	___fladd@bexp,f
  8862  17D1                     l720:	
  8863  17D1  0A64               	incf	___fladd@bexp,w
  8864  17D2  1903               	btfsc	3,2
  8865  17D3  2FD5               	goto	u3871
  8866  17D4  2FD6               	goto	u3870
  8867  17D5                     u3871:	
  8868  17D5  2FDB               	goto	l2764
  8869  17D6                     u3870:	
  8870  17D6                     l2762:	
  8871  17D6  0864               	movf	___fladd@bexp,w
  8872  17D7  1D03               	btfss	3,2
  8873  17D8  2FDA               	goto	u3881
  8874  17D9  2FDB               	goto	u3880
  8875  17DA                     u3881:	
  8876  17DA  2FE9               	goto	l2770
  8877  17DB                     u3880:	
  8878  17DB                     l2764:	
  8879  17DB  3000               	movlw	0
  8880  17DC  00D5               	movwf	___fladd@b+3
  8881  17DD  3000               	movlw	0
  8882  17DE  00D4               	movwf	___fladd@b+2
  8883  17DF  3000               	movlw	0
  8884  17E0  00D3               	movwf	___fladd@b+1
  8885  17E1  3000               	movlw	0
  8886  17E2  00D2               	movwf	___fladd@b
  8887  17E3                     l2766:	
  8888  17E3  0864               	movf	___fladd@bexp,w
  8889  17E4  1D03               	btfss	3,2
  8890  17E5  2FE7               	goto	u3891
  8891  17E6  2FE8               	goto	u3890
  8892  17E7                     u3891:	
  8893  17E7  2FE9               	goto	l2770
  8894  17E8                     u3890:	
  8895  17E8                     l2768:	
  8896  17E8  01E2               	clrf	___fladd@signs
  8897  17E9                     l2770:	
  8898  17E9  1C64               	btfss	___fladd@bexp,0
  8899  17EA  2FEC               	goto	u3901
  8900  17EB  2FED               	goto	u3900
  8901  17EC                     u3901:	
  8902  17EC  2FEF               	goto	l2774
  8903  17ED                     u3900:	
  8904  17ED                     l2772:	
  8905  17ED  17D4               	bsf	___fladd@b+2,7
  8906  17EE  2FF3               	goto	l728
  8907  17EF                     l2774:	
  8908  17EF  307F               	movlw	127
  8909  17F0  00DA               	movwf	??___fladd
  8910  17F1  085A               	movf	??___fladd,w
  8911  17F2  05D4               	andwf	___fladd@b+2,f
  8912  17F3                     l728:	
  8913  17F3  0864               	movf	___fladd@bexp,w
  8914  17F4  00DA               	movwf	??___fladd
  8915  17F5  1003               	clrc
  8916  17F6  0C5A               	rrf	??___fladd,w
  8917  17F7  00DB               	movwf	??___fladd+1
  8918  17F8  085B               	movf	??___fladd+1,w
  8919  17F9  00D5               	movwf	___fladd@b+3
  8920  17FA                     l2776:	
  8921  17FA  1FE2               	btfss	___fladd@signs,7
  8922  17FB  2FFD               	goto	u3911
  8923  17FC  2FFE               	goto	u3910
  8924  17FD                     u3911:	
  8925  17FD  2FFF               	goto	l729
  8926  17FE                     u3910:	
  8927  17FE                     l2778:	
  8928  17FE  17D5               	bsf	___fladd@b+3,7
  8929  17FF                     l729:	
  8930  17FF                     l699:	
  8931  17FF  0008               	return
  8932  1800                     __end_of___fladd:	
  8933                           
  8934                           	psect	text20
  8935  0005                     __ptext20:	
  8936 ;; *************** function ___flneg *****************
  8937 ;; Defined at:
  8938 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;  f1              4    0[COMMON] unsigned char 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  4    0[COMMON] unsigned char 
  8945 ;; Registers used:
  8946 ;;		wreg
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8952 ;;      Params:         4       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0
  8955 ;;      Totals:         4       0       0       0       0
  8956 ;;Total ram usage:        4 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_sprintf
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function ___flneg
  8967  0005                     ___flneg:	
  8968  0005                     l3186:	
  8969                           ;incstack = 0
  8970                           ; Regs used in ___flneg: [wreg]
  8971                           
  8972  0005  0873               	movf	___flneg@f1+3,w
  8973  0006  0472               	iorwf	___flneg@f1+2,w
  8974  0007  0471               	iorwf	___flneg@f1+1,w
  8975  0008  0470               	iorwf	___flneg@f1,w
  8976  0009  1903               	skipnz
  8977  000A  280C               	goto	u5031
  8978  000B  280D               	goto	u5030
  8979  000C                     u5031:	
  8980  000C  280F               	goto	l3190
  8981  000D                     u5030:	
  8982  000D                     l3188:	
  8983  000D  3080               	movlw	128
  8984  000E  06F3               	xorwf	___flneg@f1+3,f
  8985  000F                     l3190:	
  8986  000F                     l558:	
  8987  000F  0008               	return
  8988  0010                     __end_of___flneg:	
  8989                           
  8990                           	psect	text21
  8991  1EA4                     __ptext21:	
  8992 ;; *************** function ___flge *****************
  8993 ;; Defined at:
  8994 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  ff1             4    0[COMMON] unsigned char 
  8997 ;;  ff2             4    4[COMMON] unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;		None               void
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9009 ;;      Params:         8       0       0       0       0
  9010 ;;      Locals:         0       0       0       0       0
  9011 ;;      Temps:          4       0       0       0       0
  9012 ;;      Totals:        12       0       0       0       0
  9013 ;;Total ram usage:       12 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_sprintf
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           
  9023                           ;psect for function ___flge
  9024  1EA4                     ___flge:	
  9025  1EA4                     l3166:	
  9026                           ;incstack = 0
  9027                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9028                           
  9029  1EA4  3000               	movlw	0
  9030  1EA5  0570               	andwf	___flge@ff1,w
  9031  1EA6  00F8               	movwf	??___flge
  9032  1EA7  3000               	movlw	0
  9033  1EA8  0571               	andwf	___flge@ff1+1,w
  9034  1EA9  00F9               	movwf	??___flge+1
  9035  1EAA  3080               	movlw	128
  9036  1EAB  0572               	andwf	___flge@ff1+2,w
  9037  1EAC  00FA               	movwf	??___flge+2
  9038  1EAD  307F               	movlw	127
  9039  1EAE  0573               	andwf	___flge@ff1+3,w
  9040  1EAF  00FB               	movwf	??___flge+3
  9041  1EB0  087B               	movf	??___flge+3,w
  9042  1EB1  047A               	iorwf	??___flge+2,w
  9043  1EB2  0479               	iorwf	??___flge+1,w
  9044  1EB3  0478               	iorwf	??___flge,w
  9045  1EB4  1D03               	skipz
  9046  1EB5  2EB7               	goto	u4961
  9047  1EB6  2EB8               	goto	u4960
  9048  1EB7                     u4961:	
  9049  1EB7  2EC0               	goto	l550
  9050  1EB8                     u4960:	
  9051  1EB8                     l3168:	
  9052  1EB8  3000               	movlw	0
  9053  1EB9  00F3               	movwf	___flge@ff1+3
  9054  1EBA  3000               	movlw	0
  9055  1EBB  00F2               	movwf	___flge@ff1+2
  9056  1EBC  3000               	movlw	0
  9057  1EBD  00F1               	movwf	___flge@ff1+1
  9058  1EBE  3000               	movlw	0
  9059  1EBF  00F0               	movwf	___flge@ff1
  9060  1EC0                     l550:	
  9061  1EC0  3000               	movlw	0
  9062  1EC1  0574               	andwf	___flge@ff2,w
  9063  1EC2  00F8               	movwf	??___flge
  9064  1EC3  3000               	movlw	0
  9065  1EC4  0575               	andwf	___flge@ff2+1,w
  9066  1EC5  00F9               	movwf	??___flge+1
  9067  1EC6  3080               	movlw	128
  9068  1EC7  0576               	andwf	___flge@ff2+2,w
  9069  1EC8  00FA               	movwf	??___flge+2
  9070  1EC9  307F               	movlw	127
  9071  1ECA  0577               	andwf	___flge@ff2+3,w
  9072  1ECB  00FB               	movwf	??___flge+3
  9073  1ECC  087B               	movf	??___flge+3,w
  9074  1ECD  047A               	iorwf	??___flge+2,w
  9075  1ECE  0479               	iorwf	??___flge+1,w
  9076  1ECF  0478               	iorwf	??___flge,w
  9077  1ED0  1D03               	skipz
  9078  1ED1  2ED3               	goto	u4971
  9079  1ED2  2ED4               	goto	u4970
  9080  1ED3                     u4971:	
  9081  1ED3  2EDC               	goto	l3172
  9082  1ED4                     u4970:	
  9083  1ED4                     l3170:	
  9084  1ED4  3000               	movlw	0
  9085  1ED5  00F7               	movwf	___flge@ff2+3
  9086  1ED6  3000               	movlw	0
  9087  1ED7  00F6               	movwf	___flge@ff2+2
  9088  1ED8  3000               	movlw	0
  9089  1ED9  00F5               	movwf	___flge@ff2+1
  9090  1EDA  3000               	movlw	0
  9091  1EDB  00F4               	movwf	___flge@ff2
  9092  1EDC                     l3172:	
  9093  1EDC  1FF3               	btfss	___flge@ff1+3,7
  9094  1EDD  2EDF               	goto	u4981
  9095  1EDE  2EE0               	goto	u4980
  9096  1EDF                     u4981:	
  9097  1EDF  2F04               	goto	l3176
  9098  1EE0                     u4980:	
  9099  1EE0                     l3174:	
  9100  1EE0  3000               	movlw	0
  9101  1EE1  00F8               	movwf	??___flge
  9102  1EE2  3000               	movlw	0
  9103  1EE3  00F9               	movwf	??___flge+1
  9104  1EE4  3000               	movlw	0
  9105  1EE5  00FA               	movwf	??___flge+2
  9106  1EE6  3080               	movlw	128
  9107  1EE7  00FB               	movwf	??___flge+3
  9108  1EE8  0870               	movf	___flge@ff1,w
  9109  1EE9  02F8               	subwf	??___flge,f
  9110  1EEA  0871               	movf	___flge@ff1+1,w
  9111  1EEB  1C03               	skipc
  9112  1EEC  0F71               	incfsz	___flge@ff1+1,w
  9113  1EED  2EEF               	goto	u4991
  9114  1EEE  2EF0               	goto	u4992
  9115  1EEF                     u4991:	
  9116  1EEF  02F9               	subwf	??___flge+1,f
  9117  1EF0                     u4992:	
  9118  1EF0  0872               	movf	___flge@ff1+2,w
  9119  1EF1  1C03               	skipc
  9120  1EF2  0F72               	incfsz	___flge@ff1+2,w
  9121  1EF3  2EF5               	goto	u4993
  9122  1EF4  2EF6               	goto	u4994
  9123  1EF5                     u4993:	
  9124  1EF5  02FA               	subwf	??___flge+2,f
  9125  1EF6                     u4994:	
  9126  1EF6  0873               	movf	___flge@ff1+3,w
  9127  1EF7  1C03               	skipc
  9128  1EF8  0F73               	incfsz	___flge@ff1+3,w
  9129  1EF9  2EFB               	goto	u4995
  9130  1EFA  2EFC               	goto	u4996
  9131  1EFB                     u4995:	
  9132  1EFB  02FB               	subwf	??___flge+3,f
  9133  1EFC                     u4996:	
  9134  1EFC  087B               	movf	??___flge+3,w
  9135  1EFD  00F3               	movwf	___flge@ff1+3
  9136  1EFE  087A               	movf	??___flge+2,w
  9137  1EFF  00F2               	movwf	___flge@ff1+2
  9138  1F00  0879               	movf	??___flge+1,w
  9139  1F01  00F1               	movwf	___flge@ff1+1
  9140  1F02  0878               	movf	??___flge,w
  9141  1F03  00F0               	movwf	___flge@ff1
  9142  1F04                     l3176:	
  9143  1F04  1FF7               	btfss	___flge@ff2+3,7
  9144  1F05  2F07               	goto	u5001
  9145  1F06  2F08               	goto	u5000
  9146  1F07                     u5001:	
  9147  1F07  2F2C               	goto	l553
  9148  1F08                     u5000:	
  9149  1F08                     l3178:	
  9150  1F08  3000               	movlw	0
  9151  1F09  00F8               	movwf	??___flge
  9152  1F0A  3000               	movlw	0
  9153  1F0B  00F9               	movwf	??___flge+1
  9154  1F0C  3000               	movlw	0
  9155  1F0D  00FA               	movwf	??___flge+2
  9156  1F0E  3080               	movlw	128
  9157  1F0F  00FB               	movwf	??___flge+3
  9158  1F10  0874               	movf	___flge@ff2,w
  9159  1F11  02F8               	subwf	??___flge,f
  9160  1F12  0875               	movf	___flge@ff2+1,w
  9161  1F13  1C03               	skipc
  9162  1F14  0F75               	incfsz	___flge@ff2+1,w
  9163  1F15  2F17               	goto	u5011
  9164  1F16  2F18               	goto	u5012
  9165  1F17                     u5011:	
  9166  1F17  02F9               	subwf	??___flge+1,f
  9167  1F18                     u5012:	
  9168  1F18  0876               	movf	___flge@ff2+2,w
  9169  1F19  1C03               	skipc
  9170  1F1A  0F76               	incfsz	___flge@ff2+2,w
  9171  1F1B  2F1D               	goto	u5013
  9172  1F1C  2F1E               	goto	u5014
  9173  1F1D                     u5013:	
  9174  1F1D  02FA               	subwf	??___flge+2,f
  9175  1F1E                     u5014:	
  9176  1F1E  0877               	movf	___flge@ff2+3,w
  9177  1F1F  1C03               	skipc
  9178  1F20  0F77               	incfsz	___flge@ff2+3,w
  9179  1F21  2F23               	goto	u5015
  9180  1F22  2F24               	goto	u5016
  9181  1F23                     u5015:	
  9182  1F23  02FB               	subwf	??___flge+3,f
  9183  1F24                     u5016:	
  9184  1F24  087B               	movf	??___flge+3,w
  9185  1F25  00F7               	movwf	___flge@ff2+3
  9186  1F26  087A               	movf	??___flge+2,w
  9187  1F27  00F6               	movwf	___flge@ff2+2
  9188  1F28  0879               	movf	??___flge+1,w
  9189  1F29  00F5               	movwf	___flge@ff2+1
  9190  1F2A  0878               	movf	??___flge,w
  9191  1F2B  00F4               	movwf	___flge@ff2
  9192  1F2C                     l553:	
  9193  1F2C  3080               	movlw	128
  9194  1F2D  06F3               	xorwf	___flge@ff1+3,f
  9195  1F2E  3080               	movlw	128
  9196  1F2F  06F7               	xorwf	___flge@ff2+3,f
  9197  1F30  0877               	movf	___flge@ff2+3,w
  9198  1F31  0273               	subwf	___flge@ff1+3,w
  9199  1F32  1D03               	skipz
  9200  1F33  2F3E               	goto	u5025
  9201  1F34  0876               	movf	___flge@ff2+2,w
  9202  1F35  0272               	subwf	___flge@ff1+2,w
  9203  1F36  1D03               	skipz
  9204  1F37  2F3E               	goto	u5025
  9205  1F38  0875               	movf	___flge@ff2+1,w
  9206  1F39  0271               	subwf	___flge@ff1+1,w
  9207  1F3A  1D03               	skipz
  9208  1F3B  2F3E               	goto	u5025
  9209  1F3C  0874               	movf	___flge@ff2,w
  9210  1F3D  0270               	subwf	___flge@ff1,w
  9211  1F3E                     u5025:	
  9212  1F3E  1803               	skipnc
  9213  1F3F  2F41               	goto	u5021
  9214  1F40  2F42               	goto	u5020
  9215  1F41                     u5021:	
  9216  1F41  2F44               	goto	l3182
  9217  1F42                     u5020:	
  9218  1F42                     l3180:	
  9219  1F42  1003               	clrc
  9220  1F43  2F45               	goto	l554
  9221  1F44                     l3182:	
  9222  1F44  1403               	setc
  9223  1F45                     l554:	
  9224  1F45  0008               	return
  9225  1F46                     __end_of___flge:	
  9226                           
  9227                           	psect	text22
  9228  1C5E                     __ptext22:	
  9229 ;; *************** function ___fleq *****************
  9230 ;; Defined at:
  9231 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  ff1             4    0[COMMON] unsigned char 
  9234 ;;  ff2             4    4[COMMON] unsigned char 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;		None               void
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9246 ;;      Params:         8       0       0       0       0
  9247 ;;      Locals:         0       0       0       0       0
  9248 ;;      Temps:          4       0       0       0       0
  9249 ;;      Totals:        12       0       0       0       0
  9250 ;;Total ram usage:       12 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_sprintf
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           
  9260                           ;psect for function ___fleq
  9261  1C5E                     ___fleq:	
  9262  1C5E                     l3154:	
  9263                           ;incstack = 0
  9264                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9265                           
  9266  1C5E  3000               	movlw	0
  9267  1C5F  0570               	andwf	___fleq@ff1,w
  9268  1C60  00F8               	movwf	??___fleq
  9269  1C61  3000               	movlw	0
  9270  1C62  0571               	andwf	___fleq@ff1+1,w
  9271  1C63  00F9               	movwf	??___fleq+1
  9272  1C64  3080               	movlw	128
  9273  1C65  0572               	andwf	___fleq@ff1+2,w
  9274  1C66  00FA               	movwf	??___fleq+2
  9275  1C67  307F               	movlw	127
  9276  1C68  0573               	andwf	___fleq@ff1+3,w
  9277  1C69  00FB               	movwf	??___fleq+3
  9278  1C6A  087B               	movf	??___fleq+3,w
  9279  1C6B  047A               	iorwf	??___fleq+2,w
  9280  1C6C  0479               	iorwf	??___fleq+1,w
  9281  1C6D  0478               	iorwf	??___fleq,w
  9282  1C6E  1D03               	skipz
  9283  1C6F  2C71               	goto	u4931
  9284  1C70  2C72               	goto	u4930
  9285  1C71                     u4931:	
  9286  1C71  2C7A               	goto	l545
  9287  1C72                     u4930:	
  9288  1C72                     l3156:	
  9289  1C72  3000               	movlw	0
  9290  1C73  00F3               	movwf	___fleq@ff1+3
  9291  1C74  3000               	movlw	0
  9292  1C75  00F2               	movwf	___fleq@ff1+2
  9293  1C76  3000               	movlw	0
  9294  1C77  00F1               	movwf	___fleq@ff1+1
  9295  1C78  3000               	movlw	0
  9296  1C79  00F0               	movwf	___fleq@ff1
  9297  1C7A                     l545:	
  9298  1C7A  3000               	movlw	0
  9299  1C7B  0574               	andwf	___fleq@ff2,w
  9300  1C7C  00F8               	movwf	??___fleq
  9301  1C7D  3000               	movlw	0
  9302  1C7E  0575               	andwf	___fleq@ff2+1,w
  9303  1C7F  00F9               	movwf	??___fleq+1
  9304  1C80  3080               	movlw	128
  9305  1C81  0576               	andwf	___fleq@ff2+2,w
  9306  1C82  00FA               	movwf	??___fleq+2
  9307  1C83  307F               	movlw	127
  9308  1C84  0577               	andwf	___fleq@ff2+3,w
  9309  1C85  00FB               	movwf	??___fleq+3
  9310  1C86  087B               	movf	??___fleq+3,w
  9311  1C87  047A               	iorwf	??___fleq+2,w
  9312  1C88  0479               	iorwf	??___fleq+1,w
  9313  1C89  0478               	iorwf	??___fleq,w
  9314  1C8A  1D03               	skipz
  9315  1C8B  2C8D               	goto	u4941
  9316  1C8C  2C8E               	goto	u4940
  9317  1C8D                     u4941:	
  9318  1C8D  2C96               	goto	l546
  9319  1C8E                     u4940:	
  9320  1C8E                     l3158:	
  9321  1C8E  3000               	movlw	0
  9322  1C8F  00F7               	movwf	___fleq@ff2+3
  9323  1C90  3000               	movlw	0
  9324  1C91  00F6               	movwf	___fleq@ff2+2
  9325  1C92  3000               	movlw	0
  9326  1C93  00F5               	movwf	___fleq@ff2+1
  9327  1C94  3000               	movlw	0
  9328  1C95  00F4               	movwf	___fleq@ff2
  9329  1C96                     l546:	
  9330  1C96  0877               	movf	___fleq@ff2+3,w
  9331  1C97  0673               	xorwf	___fleq@ff1+3,w
  9332  1C98  1D03               	skipz
  9333  1C99  2CA4               	goto	u4955
  9334  1C9A  0876               	movf	___fleq@ff2+2,w
  9335  1C9B  0672               	xorwf	___fleq@ff1+2,w
  9336  1C9C  1D03               	skipz
  9337  1C9D  2CA4               	goto	u4955
  9338  1C9E  0875               	movf	___fleq@ff2+1,w
  9339  1C9F  0671               	xorwf	___fleq@ff1+1,w
  9340  1CA0  1D03               	skipz
  9341  1CA1  2CA4               	goto	u4955
  9342  1CA2  0874               	movf	___fleq@ff2,w
  9343  1CA3  0670               	xorwf	___fleq@ff1,w
  9344  1CA4                     u4955:	
  9345  1CA4  1903               	skipnz
  9346  1CA5  2CA7               	goto	u4951
  9347  1CA6  2CA8               	goto	u4950
  9348  1CA7                     u4951:	
  9349  1CA7  2CAA               	goto	l3162
  9350  1CA8                     u4950:	
  9351  1CA8                     l3160:	
  9352  1CA8  1003               	clrc
  9353  1CA9  2CAB               	goto	l547
  9354  1CAA                     l3162:	
  9355  1CAA  1403               	setc
  9356  1CAB                     l547:	
  9357  1CAB  0008               	return
  9358  1CAC                     __end_of___fleq:	
  9359                           
  9360                           	psect	text23
  9361  1190                     __ptext23:	
  9362 ;; *************** function ___fldiv *****************
  9363 ;; Defined at:
  9364 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  a               4    0[BANK0 ] unsigned char 
  9367 ;;  b               4    4[BANK0 ] unsigned char 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  grs             4   20[BANK0 ] unsigned long 
  9370 ;;  rem             4   13[BANK0 ] unsigned long 
  9371 ;;  new_exp         2   18[BANK0 ] int 
  9372 ;;  aexp            1   25[BANK0 ] unsigned char 
  9373 ;;  bexp            1   24[BANK0 ] unsigned char 
  9374 ;;  sign            1   17[BANK0 ] unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  4    0[BANK0 ] unsigned char 
  9377 ;; Registers used:
  9378 ;;		wreg, status,2, status,0, btemp+1
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9384 ;;      Params:         0       8       0       0       0
  9385 ;;      Locals:         0      13       0       0       0
  9386 ;;      Temps:          0       5       0       0       0
  9387 ;;      Totals:         0      26       0       0       0
  9388 ;;Total ram usage:       26 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_main
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function ___fldiv
  9399  1190                     ___fldiv:	
  9400  1190                     l3624:	
  9401                           ;incstack = 0
  9402                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9403                           
  9404  1190  1283               	bcf	3,5	;RP0=0, select bank0
  9405  1191  1303               	bcf	3,6	;RP1=0, select bank0
  9406  1192  0827               	movf	___fldiv@b+3,w
  9407  1193  3980               	andlw	128
  9408  1194  00A8               	movwf	??___fldiv
  9409  1195  0828               	movf	??___fldiv,w
  9410  1196  00B1               	movwf	___fldiv@sign
  9411  1197                     l3626:	
  9412  1197  0827               	movf	___fldiv@b+3,w
  9413  1198  00A8               	movwf	??___fldiv
  9414  1199  0728               	addwf	??___fldiv,w
  9415  119A  00A9               	movwf	??___fldiv+1
  9416  119B  0829               	movf	??___fldiv+1,w
  9417  119C  00B8               	movwf	___fldiv@bexp
  9418  119D                     l3628:	
  9419  119D  1FA6               	btfss	___fldiv@b+2,7
  9420  119E  29A0               	goto	u5741
  9421  119F  29A1               	goto	u5740
  9422  11A0                     u5741:	
  9423  11A0  29A2               	goto	l3632
  9424  11A1                     u5740:	
  9425  11A1                     l3630:	
  9426  11A1  1438               	bsf	___fldiv@bexp,0
  9427  11A2                     l3632:	
  9428  11A2  0838               	movf	___fldiv@bexp,w
  9429  11A3  1903               	btfsc	3,2
  9430  11A4  29A6               	goto	u5751
  9431  11A5  29A7               	goto	u5750
  9432  11A6                     u5751:	
  9433  11A6  29B7               	goto	l3642
  9434  11A7                     u5750:	
  9435  11A7                     l3634:	
  9436  11A7  0A38               	incf	___fldiv@bexp,w
  9437  11A8  1D03               	btfss	3,2
  9438  11A9  29AB               	goto	u5761
  9439  11AA  29AC               	goto	u5760
  9440  11AB                     u5761:	
  9441  11AB  29B4               	goto	l3638
  9442  11AC                     u5760:	
  9443  11AC                     l3636:	
  9444  11AC  3000               	movlw	0
  9445  11AD  00A7               	movwf	___fldiv@b+3
  9446  11AE  3000               	movlw	0
  9447  11AF  00A6               	movwf	___fldiv@b+2
  9448  11B0  3000               	movlw	0
  9449  11B1  00A5               	movwf	___fldiv@b+1
  9450  11B2  3000               	movlw	0
  9451  11B3  00A4               	movwf	___fldiv@b
  9452  11B4                     l3638:	
  9453  11B4  17A6               	bsf	___fldiv@b+2,7
  9454  11B5                     l3640:	
  9455  11B5  01A7               	clrf	___fldiv@b+3
  9456  11B6  29BF               	goto	l3644
  9457  11B7                     l3642:	
  9458  11B7  3000               	movlw	0
  9459  11B8  00A7               	movwf	___fldiv@b+3
  9460  11B9  3000               	movlw	0
  9461  11BA  00A6               	movwf	___fldiv@b+2
  9462  11BB  3000               	movlw	0
  9463  11BC  00A5               	movwf	___fldiv@b+1
  9464  11BD  3000               	movlw	0
  9465  11BE  00A4               	movwf	___fldiv@b
  9466  11BF                     l3644:	
  9467  11BF  0823               	movf	___fldiv@a+3,w
  9468  11C0  3980               	andlw	128
  9469  11C1  00A8               	movwf	??___fldiv
  9470  11C2  0828               	movf	??___fldiv,w
  9471  11C3  06B1               	xorwf	___fldiv@sign,f
  9472  11C4                     l3646:	
  9473  11C4  0823               	movf	___fldiv@a+3,w
  9474  11C5  00A8               	movwf	??___fldiv
  9475  11C6  0728               	addwf	??___fldiv,w
  9476  11C7  00A9               	movwf	??___fldiv+1
  9477  11C8  0829               	movf	??___fldiv+1,w
  9478  11C9  00B9               	movwf	___fldiv@aexp
  9479  11CA                     l3648:	
  9480  11CA  1FA2               	btfss	___fldiv@a+2,7
  9481  11CB  29CD               	goto	u5771
  9482  11CC  29CE               	goto	u5770
  9483  11CD                     u5771:	
  9484  11CD  29CF               	goto	l3652
  9485  11CE                     u5770:	
  9486  11CE                     l3650:	
  9487  11CE  1439               	bsf	___fldiv@aexp,0
  9488  11CF                     l3652:	
  9489  11CF  0839               	movf	___fldiv@aexp,w
  9490  11D0  1903               	btfsc	3,2
  9491  11D1  29D3               	goto	u5781
  9492  11D2  29D4               	goto	u5780
  9493  11D3                     u5781:	
  9494  11D3  29E4               	goto	l3662
  9495  11D4                     u5780:	
  9496  11D4                     l3654:	
  9497  11D4  0A39               	incf	___fldiv@aexp,w
  9498  11D5  1D03               	btfss	3,2
  9499  11D6  29D8               	goto	u5791
  9500  11D7  29D9               	goto	u5790
  9501  11D8                     u5791:	
  9502  11D8  29E1               	goto	l3658
  9503  11D9                     u5790:	
  9504  11D9                     l3656:	
  9505  11D9  3000               	movlw	0
  9506  11DA  00A3               	movwf	___fldiv@a+3
  9507  11DB  3000               	movlw	0
  9508  11DC  00A2               	movwf	___fldiv@a+2
  9509  11DD  3000               	movlw	0
  9510  11DE  00A1               	movwf	___fldiv@a+1
  9511  11DF  3000               	movlw	0
  9512  11E0  00A0               	movwf	___fldiv@a
  9513  11E1                     l3658:	
  9514  11E1  17A2               	bsf	___fldiv@a+2,7
  9515  11E2                     l3660:	
  9516  11E2  01A3               	clrf	___fldiv@a+3
  9517  11E3  29EC               	goto	l742
  9518  11E4                     l3662:	
  9519  11E4  3000               	movlw	0
  9520  11E5  00A3               	movwf	___fldiv@a+3
  9521  11E6  3000               	movlw	0
  9522  11E7  00A2               	movwf	___fldiv@a+2
  9523  11E8  3000               	movlw	0
  9524  11E9  00A1               	movwf	___fldiv@a+1
  9525  11EA  3000               	movlw	0
  9526  11EB  00A0               	movwf	___fldiv@a
  9527  11EC                     l742:	
  9528  11EC  0823               	movf	___fldiv@a+3,w
  9529  11ED  0422               	iorwf	___fldiv@a+2,w
  9530  11EE  0421               	iorwf	___fldiv@a+1,w
  9531  11EF  0420               	iorwf	___fldiv@a,w
  9532  11F0  1D03               	skipz
  9533  11F1  29F3               	goto	u5801
  9534  11F2  29F4               	goto	u5800
  9535  11F3                     u5801:	
  9536  11F3  2A0D               	goto	l3672
  9537  11F4                     u5800:	
  9538  11F4                     l3664:	
  9539  11F4  3000               	movlw	0
  9540  11F5  00A7               	movwf	___fldiv@b+3
  9541  11F6  3000               	movlw	0
  9542  11F7  00A6               	movwf	___fldiv@b+2
  9543  11F8  3000               	movlw	0
  9544  11F9  00A5               	movwf	___fldiv@b+1
  9545  11FA  3000               	movlw	0
  9546  11FB  00A4               	movwf	___fldiv@b
  9547  11FC  3080               	movlw	128
  9548  11FD  04A6               	iorwf	___fldiv@b+2,f
  9549  11FE  307F               	movlw	127
  9550  11FF  04A7               	iorwf	___fldiv@b+3,f
  9551  1200                     l3666:	
  9552  1200  0831               	movf	___fldiv@sign,w
  9553  1201  00A8               	movwf	??___fldiv
  9554  1202  0828               	movf	??___fldiv,w
  9555  1203  04A7               	iorwf	___fldiv@b+3,f
  9556  1204                     l3668:	
  9557  1204  0827               	movf	___fldiv@b+3,w
  9558  1205  00A3               	movwf	?___fldiv+3
  9559  1206  0826               	movf	___fldiv@b+2,w
  9560  1207  00A2               	movwf	?___fldiv+2
  9561  1208  0825               	movf	___fldiv@b+1,w
  9562  1209  00A1               	movwf	?___fldiv+1
  9563  120A  0824               	movf	___fldiv@b,w
  9564  120B  00A0               	movwf	?___fldiv
  9565  120C  2B6C               	goto	l744
  9566  120D                     l3672:	
  9567  120D  0838               	movf	___fldiv@bexp,w
  9568  120E  1D03               	btfss	3,2
  9569  120F  2A11               	goto	u5811
  9570  1210  2A12               	goto	u5810
  9571  1211                     u5811:	
  9572  1211  2A1B               	goto	l3678
  9573  1212                     u5810:	
  9574  1212                     l3674:	
  9575  1212  3000               	movlw	0
  9576  1213  00A3               	movwf	?___fldiv+3
  9577  1214  3000               	movlw	0
  9578  1215  00A2               	movwf	?___fldiv+2
  9579  1216  3000               	movlw	0
  9580  1217  00A1               	movwf	?___fldiv+1
  9581  1218  3000               	movlw	0
  9582  1219  00A0               	movwf	?___fldiv
  9583  121A  2B6C               	goto	l744
  9584  121B                     l3678:	
  9585  121B  0838               	movf	___fldiv@bexp,w
  9586  121C  00A8               	movwf	??___fldiv
  9587  121D  01A9               	clrf	??___fldiv+1
  9588  121E  0829               	movf	??___fldiv+1,w
  9589  121F  00AB               	movwf	??___fldiv+3
  9590  1220  0839               	movf	___fldiv@aexp,w
  9591  1221  0228               	subwf	??___fldiv,w
  9592  1222  00AA               	movwf	??___fldiv+2
  9593  1223  1C03               	skipc
  9594  1224  03AB               	decf	??___fldiv+3,f
  9595  1225  082A               	movf	??___fldiv+2,w
  9596  1226  3E7F               	addlw	127
  9597  1227  00B2               	movwf	___fldiv@new_exp
  9598  1228  082B               	movf	??___fldiv+3,w
  9599  1229  1803               	skipnc
  9600  122A  3E01               	addlw	1
  9601  122B  3E00               	addlw	0
  9602  122C  00B3               	movwf	___fldiv@new_exp+1
  9603  122D                     l3680:	
  9604  122D  0827               	movf	___fldiv@b+3,w
  9605  122E  00B0               	movwf	___fldiv@rem+3
  9606  122F  0826               	movf	___fldiv@b+2,w
  9607  1230  00AF               	movwf	___fldiv@rem+2
  9608  1231  0825               	movf	___fldiv@b+1,w
  9609  1232  00AE               	movwf	___fldiv@rem+1
  9610  1233  0824               	movf	___fldiv@b,w
  9611  1234  00AD               	movwf	___fldiv@rem
  9612  1235                     l3682:	
  9613  1235  3000               	movlw	0
  9614  1236  00A7               	movwf	___fldiv@b+3
  9615  1237  3000               	movlw	0
  9616  1238  00A6               	movwf	___fldiv@b+2
  9617  1239  3000               	movlw	0
  9618  123A  00A5               	movwf	___fldiv@b+1
  9619  123B  3000               	movlw	0
  9620  123C  00A4               	movwf	___fldiv@b
  9621  123D                     l3684:	
  9622  123D  3000               	movlw	0
  9623  123E  00B7               	movwf	___fldiv@grs+3
  9624  123F  3000               	movlw	0
  9625  1240  00B6               	movwf	___fldiv@grs+2
  9626  1241  3000               	movlw	0
  9627  1242  00B5               	movwf	___fldiv@grs+1
  9628  1243  3000               	movlw	0
  9629  1244  00B4               	movwf	___fldiv@grs
  9630  1245                     l3686:	
  9631  1245  01B9               	clrf	___fldiv@aexp
  9632  1246  2A91               	goto	l3706
  9633  1247                     l3688:	
  9634  1247  0839               	movf	___fldiv@aexp,w
  9635  1248  1903               	btfsc	3,2
  9636  1249  2A4B               	goto	u5821
  9637  124A  2A4C               	goto	u5820
  9638  124B                     u5821:	
  9639  124B  2A6C               	goto	l3698
  9640  124C                     u5820:	
  9641  124C                     l3690:	
  9642  124C  3001               	movlw	1
  9643  124D  00A8               	movwf	??___fldiv
  9644  124E                     u5835:	
  9645  124E  1003               	clrc
  9646  124F  0DAD               	rlf	___fldiv@rem,f
  9647  1250  0DAE               	rlf	___fldiv@rem+1,f
  9648  1251  0DAF               	rlf	___fldiv@rem+2,f
  9649  1252  0DB0               	rlf	___fldiv@rem+3,f
  9650  1253  0BA8               	decfsz	??___fldiv,f
  9651  1254  2A4E               	goto	u5835
  9652  1255  3001               	movlw	1
  9653  1256  00A8               	movwf	??___fldiv
  9654  1257                     u5845:	
  9655  1257  1003               	clrc
  9656  1258  0DA4               	rlf	___fldiv@b,f
  9657  1259  0DA5               	rlf	___fldiv@b+1,f
  9658  125A  0DA6               	rlf	___fldiv@b+2,f
  9659  125B  0DA7               	rlf	___fldiv@b+3,f
  9660  125C  0BA8               	decfsz	??___fldiv,f
  9661  125D  2A57               	goto	u5845
  9662  125E                     l3692:	
  9663  125E  1FB7               	btfss	___fldiv@grs+3,7
  9664  125F  2A61               	goto	u5851
  9665  1260  2A62               	goto	u5850
  9666  1261                     u5851:	
  9667  1261  2A63               	goto	l3696
  9668  1262                     u5850:	
  9669  1262                     l3694:	
  9670  1262  1424               	bsf	___fldiv@b,0
  9671  1263                     l3696:	
  9672  1263  3001               	movlw	1
  9673  1264  00A8               	movwf	??___fldiv
  9674  1265                     u5865:	
  9675  1265  1003               	clrc
  9676  1266  0DB4               	rlf	___fldiv@grs,f
  9677  1267  0DB5               	rlf	___fldiv@grs+1,f
  9678  1268  0DB6               	rlf	___fldiv@grs+2,f
  9679  1269  0DB7               	rlf	___fldiv@grs+3,f
  9680  126A  0BA8               	decfsz	??___fldiv,f
  9681  126B  2A65               	goto	u5865
  9682  126C                     l3698:	
  9683  126C  0823               	movf	___fldiv@a+3,w
  9684  126D  0230               	subwf	___fldiv@rem+3,w
  9685  126E  1D03               	skipz
  9686  126F  2A7A               	goto	u5875
  9687  1270  0822               	movf	___fldiv@a+2,w
  9688  1271  022F               	subwf	___fldiv@rem+2,w
  9689  1272  1D03               	skipz
  9690  1273  2A7A               	goto	u5875
  9691  1274  0821               	movf	___fldiv@a+1,w
  9692  1275  022E               	subwf	___fldiv@rem+1,w
  9693  1276  1D03               	skipz
  9694  1277  2A7A               	goto	u5875
  9695  1278  0820               	movf	___fldiv@a,w
  9696  1279  022D               	subwf	___fldiv@rem,w
  9697  127A                     u5875:	
  9698  127A  1C03               	skipc
  9699  127B  2A7D               	goto	u5871
  9700  127C  2A7E               	goto	u5870
  9701  127D                     u5871:	
  9702  127D  2A8D               	goto	l3704
  9703  127E                     u5870:	
  9704  127E                     l3700:	
  9705  127E  1737               	bsf	___fldiv@grs+3,6
  9706  127F                     l3702:	
  9707  127F  0820               	movf	___fldiv@a,w
  9708  1280  02AD               	subwf	___fldiv@rem,f
  9709  1281  0821               	movf	___fldiv@a+1,w
  9710  1282  1C03               	skipc
  9711  1283  0F21               	incfsz	___fldiv@a+1,w
  9712  1284  02AE               	subwf	___fldiv@rem+1,f
  9713  1285  0822               	movf	___fldiv@a+2,w
  9714  1286  1C03               	skipc
  9715  1287  0F22               	incfsz	___fldiv@a+2,w
  9716  1288  02AF               	subwf	___fldiv@rem+2,f
  9717  1289  0823               	movf	___fldiv@a+3,w
  9718  128A  1C03               	skipc
  9719  128B  0F23               	incfsz	___fldiv@a+3,w
  9720  128C  02B0               	subwf	___fldiv@rem+3,f
  9721  128D                     l3704:	
  9722  128D  3001               	movlw	1
  9723  128E  00A8               	movwf	??___fldiv
  9724  128F  0828               	movf	??___fldiv,w
  9725  1290  07B9               	addwf	___fldiv@aexp,f
  9726  1291                     l3706:	
  9727  1291  301A               	movlw	26
  9728  1292  0239               	subwf	___fldiv@aexp,w
  9729  1293  1C03               	skipc
  9730  1294  2A96               	goto	u5881
  9731  1295  2A97               	goto	u5880
  9732  1296                     u5881:	
  9733  1296  2A47               	goto	l3688
  9734  1297                     u5880:	
  9735  1297                     l3708:	
  9736  1297  0830               	movf	___fldiv@rem+3,w
  9737  1298  042F               	iorwf	___fldiv@rem+2,w
  9738  1299  042E               	iorwf	___fldiv@rem+1,w
  9739  129A  042D               	iorwf	___fldiv@rem,w
  9740  129B  1903               	skipnz
  9741  129C  2A9E               	goto	u5891
  9742  129D  2A9F               	goto	u5890
  9743  129E                     u5891:	
  9744  129E  2ABE               	goto	l3722
  9745  129F                     u5890:	
  9746  129F                     l3710:	
  9747  129F  1434               	bsf	___fldiv@grs,0
  9748  12A0  2ABE               	goto	l3722
  9749  12A1                     l3712:	
  9750  12A1  3001               	movlw	1
  9751  12A2  00A8               	movwf	??___fldiv
  9752  12A3                     u5905:	
  9753  12A3  1003               	clrc
  9754  12A4  0DA4               	rlf	___fldiv@b,f
  9755  12A5  0DA5               	rlf	___fldiv@b+1,f
  9756  12A6  0DA6               	rlf	___fldiv@b+2,f
  9757  12A7  0DA7               	rlf	___fldiv@b+3,f
  9758  12A8  0BA8               	decfsz	??___fldiv,f
  9759  12A9  2AA3               	goto	u5905
  9760  12AA                     l3714:	
  9761  12AA  1FB7               	btfss	___fldiv@grs+3,7
  9762  12AB  2AAD               	goto	u5911
  9763  12AC  2AAE               	goto	u5910
  9764  12AD                     u5911:	
  9765  12AD  2AAF               	goto	l3718
  9766  12AE                     u5910:	
  9767  12AE                     l3716:	
  9768  12AE  1424               	bsf	___fldiv@b,0
  9769  12AF                     l3718:	
  9770  12AF  3001               	movlw	1
  9771  12B0  00A8               	movwf	??___fldiv
  9772  12B1                     u5925:	
  9773  12B1  1003               	clrc
  9774  12B2  0DB4               	rlf	___fldiv@grs,f
  9775  12B3  0DB5               	rlf	___fldiv@grs+1,f
  9776  12B4  0DB6               	rlf	___fldiv@grs+2,f
  9777  12B5  0DB7               	rlf	___fldiv@grs+3,f
  9778  12B6  0BA8               	decfsz	??___fldiv,f
  9779  12B7  2AB1               	goto	u5925
  9780  12B8                     l3720:	
  9781  12B8  30FF               	movlw	255
  9782  12B9  07B2               	addwf	___fldiv@new_exp,f
  9783  12BA  1803               	skipnc
  9784  12BB  0AB3               	incf	___fldiv@new_exp+1,f
  9785  12BC  30FF               	movlw	255
  9786  12BD  07B3               	addwf	___fldiv@new_exp+1,f
  9787  12BE                     l3722:	
  9788  12BE  1FA6               	btfss	___fldiv@b+2,7
  9789  12BF  2AC1               	goto	u5931
  9790  12C0  2AC2               	goto	u5930
  9791  12C1                     u5931:	
  9792  12C1  2AA1               	goto	l3712
  9793  12C2                     u5930:	
  9794  12C2                     l3724:	
  9795  12C2  01B9               	clrf	___fldiv@aexp
  9796  12C3                     l3726:	
  9797  12C3  1FB7               	btfss	___fldiv@grs+3,7
  9798  12C4  2AC6               	goto	u5941
  9799  12C5  2AC7               	goto	u5940
  9800  12C6                     u5941:	
  9801  12C6  2AE3               	goto	l3734
  9802  12C7                     u5940:	
  9803  12C7                     l3728:	
  9804  12C7  30FF               	movlw	255
  9805  12C8  0534               	andwf	___fldiv@grs,w
  9806  12C9  00A8               	movwf	??___fldiv
  9807  12CA  30FF               	movlw	255
  9808  12CB  0535               	andwf	___fldiv@grs+1,w
  9809  12CC  00A9               	movwf	??___fldiv+1
  9810  12CD  30FF               	movlw	255
  9811  12CE  0536               	andwf	___fldiv@grs+2,w
  9812  12CF  00AA               	movwf	??___fldiv+2
  9813  12D0  307F               	movlw	127
  9814  12D1  0537               	andwf	___fldiv@grs+3,w
  9815  12D2  00AB               	movwf	??___fldiv+3
  9816  12D3  082B               	movf	??___fldiv+3,w
  9817  12D4  042A               	iorwf	??___fldiv+2,w
  9818  12D5  0429               	iorwf	??___fldiv+1,w
  9819  12D6  0428               	iorwf	??___fldiv,w
  9820  12D7  1903               	skipnz
  9821  12D8  2ADA               	goto	u5951
  9822  12D9  2ADB               	goto	u5950
  9823  12DA                     u5951:	
  9824  12DA  2ADE               	goto	l758
  9825  12DB                     u5950:	
  9826  12DB                     l3730:	
  9827  12DB  01B9               	clrf	___fldiv@aexp
  9828  12DC  0AB9               	incf	___fldiv@aexp,f
  9829  12DD  2AE3               	goto	l3734
  9830  12DE                     l758:	
  9831  12DE  1C24               	btfss	___fldiv@b,0
  9832  12DF  2AE1               	goto	u5961
  9833  12E0  2AE2               	goto	u5960
  9834  12E1                     u5961:	
  9835  12E1  2AE3               	goto	l3734
  9836  12E2                     u5960:	
  9837  12E2  2ADB               	goto	l3730
  9838  12E3                     l3734:	
  9839  12E3  0839               	movf	___fldiv@aexp,w
  9840  12E4  1903               	btfsc	3,2
  9841  12E5  2AE7               	goto	u5971
  9842  12E6  2AE8               	goto	u5970
  9843  12E7                     u5971:	
  9844  12E7  2B19               	goto	l3744
  9845  12E8                     u5970:	
  9846  12E8                     l3736:	
  9847  12E8  3001               	movlw	1
  9848  12E9  07A4               	addwf	___fldiv@b,f
  9849  12EA  3000               	movlw	0
  9850  12EB  1803               	skipnc
  9851  12EC  3001               	movlw	1
  9852  12ED  07A5               	addwf	___fldiv@b+1,f
  9853  12EE  3000               	movlw	0
  9854  12EF  1803               	skipnc
  9855  12F0  3001               	movlw	1
  9856  12F1  07A6               	addwf	___fldiv@b+2,f
  9857  12F2  3000               	movlw	0
  9858  12F3  1803               	skipnc
  9859  12F4  3001               	movlw	1
  9860  12F5  07A7               	addwf	___fldiv@b+3,f
  9861  12F6                     l3738:	
  9862  12F6  1C27               	btfss	___fldiv@b+3,0
  9863  12F7  2AF9               	goto	u5981
  9864  12F8  2AFA               	goto	u5980
  9865  12F9                     u5981:	
  9866  12F9  2B19               	goto	l3744
  9867  12FA                     u5980:	
  9868  12FA                     l3740:	
  9869  12FA  0824               	movf	___fldiv@b,w
  9870  12FB  00A8               	movwf	??___fldiv
  9871  12FC  0825               	movf	___fldiv@b+1,w
  9872  12FD  00A9               	movwf	??___fldiv+1
  9873  12FE  0826               	movf	___fldiv@b+2,w
  9874  12FF  00AA               	movwf	??___fldiv+2
  9875  1300  0827               	movf	___fldiv@b+3,w
  9876  1301  00AB               	movwf	??___fldiv+3
  9877  1302  3001               	movlw	1
  9878  1303  00AC               	movwf	??___fldiv+4
  9879  1304                     u5995:	
  9880  1304  0D2B               	rlf	??___fldiv+3,w
  9881  1305  0CAB               	rrf	??___fldiv+3,f
  9882  1306  0CAA               	rrf	??___fldiv+2,f
  9883  1307  0CA9               	rrf	??___fldiv+1,f
  9884  1308  0CA8               	rrf	??___fldiv,f
  9885  1309                     u5990:	
  9886  1309  0BAC               	decfsz	??___fldiv+4,f
  9887  130A  2B04               	goto	u5995
  9888  130B  082B               	movf	??___fldiv+3,w
  9889  130C  00A7               	movwf	___fldiv@b+3
  9890  130D  082A               	movf	??___fldiv+2,w
  9891  130E  00A6               	movwf	___fldiv@b+2
  9892  130F  0829               	movf	??___fldiv+1,w
  9893  1310  00A5               	movwf	___fldiv@b+1
  9894  1311  0828               	movf	??___fldiv,w
  9895  1312  00A4               	movwf	___fldiv@b
  9896  1313                     l3742:	
  9897  1313  3001               	movlw	1
  9898  1314  07B2               	addwf	___fldiv@new_exp,f
  9899  1315  1803               	skipnc
  9900  1316  0AB3               	incf	___fldiv@new_exp+1,f
  9901  1317  3000               	movlw	0
  9902  1318  07B3               	addwf	___fldiv@new_exp+1,f
  9903  1319                     l3744:	
  9904  1319  0833               	movf	___fldiv@new_exp+1,w
  9905  131A  3A80               	xorlw	128
  9906  131B  00FF               	movwf	btemp+1
  9907  131C  3080               	movlw	128
  9908  131D  027F               	subwf	btemp+1,w
  9909  131E  1D03               	skipz
  9910  131F  2B22               	goto	u6005
  9911  1320  30FF               	movlw	255
  9912  1321  0232               	subwf	___fldiv@new_exp,w
  9913  1322                     u6005:	
  9914  1322  1C03               	skipc
  9915  1323  2B25               	goto	u6001
  9916  1324  2B26               	goto	u6000
  9917  1325                     u6001:	
  9918  1325  2B34               	goto	l3748
  9919  1326                     u6000:	
  9920  1326                     l3746:	
  9921  1326  30FF               	movlw	255
  9922  1327  1283               	bcf	3,5	;RP0=0, select bank0
  9923  1328  1303               	bcf	3,6	;RP1=0, select bank0
  9924  1329  00B2               	movwf	___fldiv@new_exp
  9925  132A  3000               	movlw	0
  9926  132B  00B3               	movwf	___fldiv@new_exp+1
  9927  132C  3000               	movlw	0
  9928  132D  00A7               	movwf	___fldiv@b+3
  9929  132E  3000               	movlw	0
  9930  132F  00A6               	movwf	___fldiv@b+2
  9931  1330  3000               	movlw	0
  9932  1331  00A5               	movwf	___fldiv@b+1
  9933  1332  3000               	movlw	0
  9934  1333  00A4               	movwf	___fldiv@b
  9935  1334                     l3748:	
  9936  1334  1283               	bcf	3,5	;RP0=0, select bank0
  9937  1335  1303               	bcf	3,6	;RP1=0, select bank0
  9938  1336  0833               	movf	___fldiv@new_exp+1,w
  9939  1337  3A80               	xorlw	128
  9940  1338  00FF               	movwf	btemp+1
  9941  1339  3080               	movlw	128
  9942  133A  027F               	subwf	btemp+1,w
  9943  133B  1D03               	skipz
  9944  133C  2B3F               	goto	u6015
  9945  133D  3001               	movlw	1
  9946  133E  0232               	subwf	___fldiv@new_exp,w
  9947  133F                     u6015:	
  9948  133F  1803               	skipnc
  9949  1340  2B42               	goto	u6011
  9950  1341  2B43               	goto	u6010
  9951  1342                     u6011:	
  9952  1342  2B50               	goto	l764
  9953  1343                     u6010:	
  9954  1343                     l3750:	
  9955  1343  1283               	bcf	3,5	;RP0=0, select bank0
  9956  1344  1303               	bcf	3,6	;RP1=0, select bank0
  9957  1345  01B2               	clrf	___fldiv@new_exp
  9958  1346  01B3               	clrf	___fldiv@new_exp+1
  9959  1347                     l3752:	
  9960  1347  3000               	movlw	0
  9961  1348  00A7               	movwf	___fldiv@b+3
  9962  1349  3000               	movlw	0
  9963  134A  00A6               	movwf	___fldiv@b+2
  9964  134B  3000               	movlw	0
  9965  134C  00A5               	movwf	___fldiv@b+1
  9966  134D  3000               	movlw	0
  9967  134E  00A4               	movwf	___fldiv@b
  9968  134F                     l3754:	
  9969  134F  01B1               	clrf	___fldiv@sign
  9970  1350                     l764:	
  9971  1350  1283               	bcf	3,5	;RP0=0, select bank0
  9972  1351  1303               	bcf	3,6	;RP1=0, select bank0
  9973  1352  0832               	movf	___fldiv@new_exp,w
  9974  1353  00A8               	movwf	??___fldiv
  9975  1354  0828               	movf	??___fldiv,w
  9976  1355  00B8               	movwf	___fldiv@bexp
  9977  1356                     l3756:	
  9978  1356  1C38               	btfss	___fldiv@bexp,0
  9979  1357  2B59               	goto	u6021
  9980  1358  2B5A               	goto	u6020
  9981  1359                     u6021:	
  9982  1359  2B5C               	goto	l3760
  9983  135A                     u6020:	
  9984  135A                     l3758:	
  9985  135A  17A6               	bsf	___fldiv@b+2,7
  9986  135B  2B60               	goto	l766
  9987  135C                     l3760:	
  9988  135C  307F               	movlw	127
  9989  135D  00A8               	movwf	??___fldiv
  9990  135E  0828               	movf	??___fldiv,w
  9991  135F  05A6               	andwf	___fldiv@b+2,f
  9992  1360                     l766:	
  9993  1360  0838               	movf	___fldiv@bexp,w
  9994  1361  00A8               	movwf	??___fldiv
  9995  1362  1003               	clrc
  9996  1363  0C28               	rrf	??___fldiv,w
  9997  1364  00A9               	movwf	??___fldiv+1
  9998  1365  0829               	movf	??___fldiv+1,w
  9999  1366  00A7               	movwf	___fldiv@b+3
 10000  1367  0831               	movf	___fldiv@sign,w
 10001  1368  00A8               	movwf	??___fldiv
 10002  1369  0828               	movf	??___fldiv,w
 10003  136A  04A7               	iorwf	___fldiv@b+3,f
 10004  136B  2A04               	goto	l3668
 10005  136C                     l744:	
 10006  136C  0008               	return
 10007  136D                     __end_of___fldiv:	
 10008                           
 10009                           	psect	text24
 10010  1B92                     __ptext24:	
 10011 ;; *************** function _Lcd_Write_String *****************
 10012 ;; Defined at:
 10013 ;;		line 125 in file "LCD.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  a               2    3[COMMON] PTR unsigned char 
 10016 ;;		 -> main@s2(7), main@s1(7), STR_3(4), STR_2(4), 
 10017 ;;		 -> STR_1(4), 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;  i               2    8[COMMON] int 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10029 ;;      Params:         2       0       0       0       0
 10030 ;;      Locals:         2       0       0       0       0
 10031 ;;      Temps:          3       0       0       0       0
 10032 ;;      Totals:         7       0       0       0       0
 10033 ;;Total ram usage:        7 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    2
 10036 ;; This function calls:
 10037 ;;		_Lcd_Write_Char
 10038 ;; This function is called by:
 10039 ;;		_main
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           
 10044                           ;psect for function _Lcd_Write_String
 10045  1B92                     _Lcd_Write_String:	
 10046  1B92                     l3330:	
 10047                           ;incstack = 0
 10048                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10049                           
 10050                           
 10051                           ;LCD.c: 125: void Lcd_Write_String(char *a);LCD.c: 126: {;LCD.c: 127:  int i;;LCD.c: 128
      +                          :  for(i=0;a[i]!='\0';i++)
 10052  1B92  01F8               	clrf	Lcd_Write_String@i
 10053  1B93  01F9               	clrf	Lcd_Write_String@i+1
 10054  1B94  2BB7               	goto	l3336
 10055  1B95                     l3332:	
 10056                           
 10057                           ;LCD.c: 129:     Lcd_Write_Char(a[i]);
 10058  1B95  0878               	movf	Lcd_Write_String@i,w
 10059  1B96  0773               	addwf	Lcd_Write_String@a,w
 10060  1B97  00F6               	movwf	??_Lcd_Write_String+1
 10061  1B98  0874               	movf	Lcd_Write_String@a+1,w
 10062  1B99  00F5               	movwf	??_Lcd_Write_String
 10063  1B9A  1803               	skipnc
 10064  1B9B  0AF5               	incf	??_Lcd_Write_String,f
 10065  1B9C  1FF8               	btfss	Lcd_Write_String@i,7
 10066  1B9D  2B9F               	goto	u5360
 10067  1B9E  03F5               	decf	??_Lcd_Write_String,f
 10068  1B9F                     u5360:	
 10069  1B9F  0875               	movf	??_Lcd_Write_String,w
 10070  1BA0  00F7               	movwf	??_Lcd_Write_String+2
 10071  1BA1  0877               	movf	??_Lcd_Write_String+2,w
 10072  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
 10073  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
 10074  1BA4  00FF               	movwf	btemp+1
 10075  1BA5  0876               	movf	??_Lcd_Write_String+1,w
 10076  1BA6  0084               	movwf	4
 10077  1BA7  160A  158A  2000  160A  158A  	fcall	stringtab
 10078  1BAC  160A  118A  2000  160A  158A  	fcall	_Lcd_Write_Char
 10079  1BB1                     l3334:	
 10080  1BB1  3001               	movlw	1
 10081  1BB2  07F8               	addwf	Lcd_Write_String@i,f
 10082  1BB3  1803               	skipnc
 10083  1BB4  0AF9               	incf	Lcd_Write_String@i+1,f
 10084  1BB5  3000               	movlw	0
 10085  1BB6  07F9               	addwf	Lcd_Write_String@i+1,f
 10086  1BB7                     l3336:	
 10087  1BB7  0878               	movf	Lcd_Write_String@i,w
 10088  1BB8  0773               	addwf	Lcd_Write_String@a,w
 10089  1BB9  00F6               	movwf	??_Lcd_Write_String+1
 10090  1BBA  0874               	movf	Lcd_Write_String@a+1,w
 10091  1BBB  00F5               	movwf	??_Lcd_Write_String
 10092  1BBC  1803               	skipnc
 10093  1BBD  0AF5               	incf	??_Lcd_Write_String,f
 10094  1BBE  1FF8               	btfss	Lcd_Write_String@i,7
 10095  1BBF  2BC1               	goto	u5370
 10096  1BC0  03F5               	decf	??_Lcd_Write_String,f
 10097  1BC1                     u5370:	
 10098  1BC1  0875               	movf	??_Lcd_Write_String,w
 10099  1BC2  00F7               	movwf	??_Lcd_Write_String+2
 10100  1BC3  0877               	movf	??_Lcd_Write_String+2,w
 10101  1BC4  1283               	bcf	3,5	;RP0=0, select bank0
 10102  1BC5  1303               	bcf	3,6	;RP1=0, select bank0
 10103  1BC6  00FF               	movwf	btemp+1
 10104  1BC7  0876               	movf	??_Lcd_Write_String+1,w
 10105  1BC8  0084               	movwf	4
 10106  1BC9  160A  158A  2000  160A  158A  	fcall	stringtab
 10107  1BCE  3A00               	xorlw	0
 10108  1BCF  1D03               	skipz
 10109  1BD0  2BD2               	goto	u5381
 10110  1BD1  2BD3               	goto	u5380
 10111  1BD2                     u5381:	
 10112  1BD2  2B95               	goto	l3332
 10113  1BD3                     u5380:	
 10114  1BD3                     l65:	
 10115  1BD3  0008               	return
 10116  1BD4                     __end_of_Lcd_Write_String:	
 10117                           
 10118                           	psect	text25
 10119  1000                     __ptext25:	
 10120 ;; *************** function _Lcd_Write_Char *****************
 10121 ;; Defined at:
 10122 ;;		line 115 in file "LCD.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  a               1    wreg     unsigned char 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  a               1    2[COMMON] unsigned char 
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  1    wreg      void 
 10129 ;; Registers used:
 10130 ;;		wreg, status,2, status,0, pclath, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10136 ;;      Params:         0       0       0       0       0
 10137 ;;      Locals:         1       0       0       0       0
 10138 ;;      Temps:          1       0       0       0       0
 10139 ;;      Totals:         2       0       0       0       0
 10140 ;;Total ram usage:        2 bytes
 10141 ;; Hardware stack levels used:    1
 10142 ;; Hardware stack levels required when called:    1
 10143 ;; This function calls:
 10144 ;;		_Lcd_Port
 10145 ;; This function is called by:
 10146 ;;		_Lcd_Write_String
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           
 10151                           ;psect for function _Lcd_Write_Char
 10152  1000                     _Lcd_Write_Char:	
 10153                           
 10154                           ;incstack = 0
 10155                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10156                           ;Lcd_Write_Char@a stored from wreg
 10157  1000  00F2               	movwf	Lcd_Write_Char@a
 10158  1001                     l2932:	
 10159                           
 10160                           ;LCD.c: 115: void Lcd_Write_Char(char a);LCD.c: 116: {;LCD.c: 118:    RC1 = 1;
 10161  1001  1283               	bcf	3,5	;RP0=0, select bank0
 10162  1002  1303               	bcf	3,6	;RP1=0, select bank0
 10163  1003  1487               	bsf	7,1	;volatile
 10164  1004                     l2934:	
 10165                           
 10166                           ;LCD.c: 119:    Lcd_Port(a);
 10167  1004  0872               	movf	Lcd_Write_Char@a,w
 10168  1005  160A  158A  2354  160A  118A  	fcall	_Lcd_Port
 10169  100A                     l2936:	
 10170                           
 10171                           ;LCD.c: 120:    RC0 = 1;
 10172  100A  1283               	bcf	3,5	;RP0=0, select bank0
 10173  100B  1303               	bcf	3,6	;RP1=0, select bank0
 10174  100C  1407               	bsf	7,0	;volatile
 10175  100D                     l2938:	
 10176                           
 10177                           ;LCD.c: 121:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10178  100D  300D               	movlw	13
 10179  100E  00F1               	movwf	??_Lcd_Write_Char
 10180  100F                     u6087:	
 10181  100F  0BF1               	decfsz	??_Lcd_Write_Char,f
 10182  1010  280F               	goto	u6087
 10183  1011                     l2940:	
 10184                           
 10185                           ;LCD.c: 122:    RC0 = 0;
 10186  1011  1283               	bcf	3,5	;RP0=0, select bank0
 10187  1012  1303               	bcf	3,6	;RP1=0, select bank0
 10188  1013  1007               	bcf	7,0	;volatile
 10189  1014                     l59:	
 10190  1014  0008               	return
 10191  1015                     __end_of_Lcd_Write_Char:	
 10192                           
 10193                           	psect	text26
 10194  1A95                     __ptext26:	
 10195 ;; *************** function _Lcd_Set_Cursor *****************
 10196 ;; Defined at:
 10197 ;;		line 85 in file "LCD.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  a               1    wreg     unsigned char 
 10200 ;;  b               1    4[COMMON] unsigned char 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  a               1    5[COMMON] unsigned char 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, status,2, status,0, pclath, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10212 ;;      Params:         1       0       0       0       0
 10213 ;;      Locals:         1       0       0       0       0
 10214 ;;      Temps:          0       0       0       0       0
 10215 ;;      Totals:         2       0       0       0       0
 10216 ;;Total ram usage:        2 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; Hardware stack levels required when called:    2
 10219 ;; This function calls:
 10220 ;;		_Lcd_Cmd
 10221 ;; This function is called by:
 10222 ;;		_main
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           
 10227                           ;psect for function _Lcd_Set_Cursor
 10228  1A95                     _Lcd_Set_Cursor:	
 10229                           
 10230                           ;incstack = 0
 10231                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10232                           ;Lcd_Set_Cursor@a stored from wreg
 10233  1A95  00F5               	movwf	Lcd_Set_Cursor@a
 10234  1A96                     l3302:	
 10235                           
 10236                           ;LCD.c: 85: void Lcd_Set_Cursor(char a, char b);LCD.c: 86: {;LCD.c: 87:  if(a == 1)
 10237  1A96  0375               	decf	Lcd_Set_Cursor@a,w
 10238  1A97  1D03               	btfss	3,2
 10239  1A98  2A9A               	goto	u5341
 10240  1A99  2A9B               	goto	u5340
 10241  1A9A                     u5341:	
 10242  1A9A  2AA3               	goto	l3306
 10243  1A9B                     u5340:	
 10244  1A9B                     l3304:	
 10245                           
 10246                           ;LCD.c: 88:  {;LCD.c: 89:   Lcd_Cmd(0x80 + b - 1);
 10247  1A9B  0874               	movf	Lcd_Set_Cursor@b,w
 10248  1A9C  3E7F               	addlw	127
 10249  1A9D  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10250                           
 10251                           ;LCD.c: 90:  }
 10252  1AA2  2AB0               	goto	l53
 10253  1AA3                     l3306:	
 10254  1AA3  3002               	movlw	2
 10255  1AA4  0675               	xorwf	Lcd_Set_Cursor@a,w
 10256  1AA5  1D03               	btfss	3,2
 10257  1AA6  2AA8               	goto	u5351
 10258  1AA7  2AA9               	goto	u5350
 10259  1AA8                     u5351:	
 10260  1AA8  2AB0               	goto	l53
 10261  1AA9                     u5350:	
 10262  1AA9                     l3308:	
 10263                           
 10264                           ;LCD.c: 92:  {;LCD.c: 93:   Lcd_Cmd(0xC0 + b - 1);
 10265  1AA9  0874               	movf	Lcd_Set_Cursor@b,w
 10266  1AAA  3EBF               	addlw	191
 10267  1AAB  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10268  1AB0                     l53:	
 10269  1AB0  0008               	return
 10270  1AB1                     __end_of_Lcd_Set_Cursor:	
 10271                           
 10272                           	psect	text27
 10273  1C18                     __ptext27:	
 10274 ;; *************** function _Lcd_Init *****************
 10275 ;; Defined at:
 10276 ;;		line 97 in file "LCD.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;		None
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;		None
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  1    wreg      void 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0, pclath, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10290 ;;      Params:         0       0       0       0       0
 10291 ;;      Locals:         0       0       0       0       0
 10292 ;;      Temps:          2       0       0       0       0
 10293 ;;      Totals:         2       0       0       0       0
 10294 ;;Total ram usage:        2 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    2
 10297 ;; This function calls:
 10298 ;;		_Lcd_Cmd
 10299 ;; This function is called by:
 10300 ;;		_main
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           
 10305                           ;psect for function _Lcd_Init
 10306  1C18                     _Lcd_Init:	
 10307  1C18                     l3310:	
 10308                           ;incstack = 0
 10309                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10310                           
 10311                           
 10312                           ;LCD.c: 100:    _delay((unsigned long)((15)*(4000000/4000.0)));
 10313  1C18  3014               	movlw	20
 10314  1C19  00F5               	movwf	??_Lcd_Init+1
 10315  1C1A  3079               	movlw	121
 10316  1C1B  00F4               	movwf	??_Lcd_Init
 10317  1C1C                     u6097:	
 10318  1C1C  0BF4               	decfsz	??_Lcd_Init,f
 10319  1C1D  2C1C               	goto	u6097
 10320  1C1E  0BF5               	decfsz	??_Lcd_Init+1,f
 10321  1C1F  2C1C               	goto	u6097
 10322  1C20  2C21               	nop2
 10323  1C21                     l3312:	
 10324                           
 10325                           ;LCD.c: 101:   Lcd_Cmd(0x030);
 10326  1C21  3030               	movlw	48
 10327  1C22  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10328  1C27                     l3314:	
 10329                           
 10330                           ;LCD.c: 102:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10331  1C27  3007               	movlw	7
 10332  1C28  00F5               	movwf	??_Lcd_Init+1
 10333  1C29  307D               	movlw	125
 10334  1C2A  00F4               	movwf	??_Lcd_Init
 10335  1C2B                     u6107:	
 10336  1C2B  0BF4               	decfsz	??_Lcd_Init,f
 10337  1C2C  2C2B               	goto	u6107
 10338  1C2D  0BF5               	decfsz	??_Lcd_Init+1,f
 10339  1C2E  2C2B               	goto	u6107
 10340                           
 10341                           ;LCD.c: 103:   Lcd_Cmd(0x030);
 10342  1C2F  3030               	movlw	48
 10343  1C30  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10344  1C35                     l3316:	
 10345                           
 10346                           ;LCD.c: 104:   _delay((unsigned long)((160)*(4000000/4000000.0)));
 10347  1C35  3035               	movlw	53
 10348  1C36  00F4               	movwf	??_Lcd_Init
 10349  1C37                     u6117:	
 10350  1C37  0BF4               	decfsz	??_Lcd_Init,f
 10351  1C38  2C37               	goto	u6117
 10352  1C39                     l3318:	
 10353                           
 10354                           ;LCD.c: 105:   Lcd_Cmd(0x030);
 10355  1C39  3030               	movlw	48
 10356  1C3A  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10357  1C3F                     l3320:	
 10358                           
 10359                           ;LCD.c: 107:   Lcd_Cmd(0x38);
 10360  1C3F  3038               	movlw	56
 10361  1C40  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10362  1C45                     l3322:	
 10363                           
 10364                           ;LCD.c: 108:   Lcd_Cmd(0x10);
 10365  1C45  3010               	movlw	16
 10366  1C46  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10367  1C4B                     l3324:	
 10368                           
 10369                           ;LCD.c: 109:   Lcd_Cmd(0x01);
 10370  1C4B  3001               	movlw	1
 10371  1C4C  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10372  1C51                     l3326:	
 10373                           
 10374                           ;LCD.c: 110:   Lcd_Cmd(0x06);
 10375  1C51  3006               	movlw	6
 10376  1C52  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10377  1C57                     l3328:	
 10378                           
 10379                           ;LCD.c: 111:   Lcd_Cmd(0x0F);
 10380  1C57  300F               	movlw	15
 10381  1C58  160A  158A  22B1  160A  158A  	fcall	_Lcd_Cmd
 10382  1C5D                     l56:	
 10383  1C5D  0008               	return
 10384  1C5E                     __end_of_Lcd_Init:	
 10385                           
 10386                           	psect	text28
 10387  0807                     __ptext28:	
 10388 ;; *************** function _Lcd_Clear *****************
 10389 ;; Defined at:
 10390 ;;		line 80 in file "LCD.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;		None
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;		None
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  1    wreg      void 
 10397 ;; Registers used:
 10398 ;;		wreg, status,2, status,0, pclath, cstack
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10404 ;;      Params:         0       0       0       0       0
 10405 ;;      Locals:         0       0       0       0       0
 10406 ;;      Temps:          0       0       0       0       0
 10407 ;;      Totals:         0       0       0       0       0
 10408 ;;Total ram usage:        0 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; Hardware stack levels required when called:    2
 10411 ;; This function calls:
 10412 ;;		_Lcd_Cmd
 10413 ;; This function is called by:
 10414 ;;		_main
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           
 10419                           ;psect for function _Lcd_Clear
 10420  0807                     _Lcd_Clear:	
 10421  0807                     l3300:	
 10422                           ;incstack = 0
 10423                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10424                           
 10425                           
 10426                           ;LCD.c: 82:  Lcd_Cmd(1);
 10427  0807  3001               	movlw	1
 10428  0808  160A  158A  22B1  120A  158A  	fcall	_Lcd_Cmd
 10429  080D                     l47:	
 10430  080D  0008               	return
 10431  080E                     __end_of_Lcd_Clear:	
 10432                           
 10433                           	psect	text29
 10434  1AB1                     __ptext29:	
 10435 ;; *************** function _Lcd_Cmd *****************
 10436 ;; Defined at:
 10437 ;;		line 70 in file "LCD.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  a               1    wreg     unsigned char 
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;  a               1    3[COMMON] unsigned char 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  1    wreg      void 
 10444 ;; Registers used:
 10445 ;;		wreg, status,2, status,0, pclath, cstack
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10451 ;;      Params:         0       0       0       0       0
 10452 ;;      Locals:         1       0       0       0       0
 10453 ;;      Temps:          2       0       0       0       0
 10454 ;;      Totals:         3       0       0       0       0
 10455 ;;Total ram usage:        3 bytes
 10456 ;; Hardware stack levels used:    1
 10457 ;; Hardware stack levels required when called:    1
 10458 ;; This function calls:
 10459 ;;		_Lcd_Port
 10460 ;; This function is called by:
 10461 ;;		_Lcd_Clear
 10462 ;;		_Lcd_Set_Cursor
 10463 ;;		_Lcd_Init
 10464 ;;		_Lcd_Shift_Right
 10465 ;;		_Lcd_Shift_Left
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           
 10470                           ;psect for function _Lcd_Cmd
 10471  1AB1                     _Lcd_Cmd:	
 10472                           
 10473                           ;incstack = 0
 10474                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10475                           ;Lcd_Cmd@a stored from wreg
 10476  1AB1  00F3               	movwf	Lcd_Cmd@a
 10477  1AB2                     l2920:	
 10478                           
 10479                           ;LCD.c: 70: void Lcd_Cmd(char a);LCD.c: 71: {;LCD.c: 72:  RC1 = 0;
 10480  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
 10481  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
 10482  1AB4  1087               	bcf	7,1	;volatile
 10483  1AB5                     l2922:	
 10484                           
 10485                           ;LCD.c: 73:  Lcd_Port(a);
 10486  1AB5  0873               	movf	Lcd_Cmd@a,w
 10487  1AB6  160A  158A  2354  160A  158A  	fcall	_Lcd_Port
 10488  1ABB                     l2924:	
 10489                           
 10490                           ;LCD.c: 74:  RC0 = 1;
 10491  1ABB  1283               	bcf	3,5	;RP0=0, select bank0
 10492  1ABC  1303               	bcf	3,6	;RP1=0, select bank0
 10493  1ABD  1407               	bsf	7,0	;volatile
 10494  1ABE                     l2926:	
 10495                           
 10496                           ;LCD.c: 75:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10497  1ABE  3007               	movlw	7
 10498  1ABF  00F2               	movwf	??_Lcd_Cmd+1
 10499  1AC0  307D               	movlw	125
 10500  1AC1  00F1               	movwf	??_Lcd_Cmd
 10501  1AC2                     u6127:	
 10502  1AC2  0BF1               	decfsz	??_Lcd_Cmd,f
 10503  1AC3  2AC2               	goto	u6127
 10504  1AC4  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10505  1AC5  2AC2               	goto	u6127
 10506  1AC6                     l2928:	
 10507                           
 10508                           ;LCD.c: 76:     RC0 = 0;
 10509  1AC6  1283               	bcf	3,5	;RP0=0, select bank0
 10510  1AC7  1303               	bcf	3,6	;RP1=0, select bank0
 10511  1AC8  1007               	bcf	7,0	;volatile
 10512  1AC9                     l2930:	
 10513                           
 10514                           ;LCD.c: 77:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10515  1AC9  30C7               	movlw	199
 10516  1ACA  00F1               	movwf	??_Lcd_Cmd
 10517  1ACB                     u6137:	
 10518  1ACB  2ACC               	nop2
 10519  1ACC  0BF1               	decfsz	??_Lcd_Cmd,f
 10520  1ACD  2ACB               	goto	u6137
 10521  1ACE  2ACF               	nop2
 10522  1ACF  2AD0               	nop2
 10523  1AD0                     l44:	
 10524  1AD0  0008               	return
 10525  1AD1                     __end_of_Lcd_Cmd:	
 10526                           
 10527                           	psect	text30
 10528  1B54                     __ptext30:	
 10529 ;; *************** function _Lcd_Port *****************
 10530 ;; Defined at:
 10531 ;;		line 27 in file "LCD.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  a               1    wreg     unsigned char 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  a               1    0[COMMON] unsigned char 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		wreg
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10545 ;;      Params:         0       0       0       0       0
 10546 ;;      Locals:         1       0       0       0       0
 10547 ;;      Temps:          0       0       0       0       0
 10548 ;;      Totals:         1       0       0       0       0
 10549 ;;Total ram usage:        1 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; This function calls:
 10552 ;;		Nothing
 10553 ;; This function is called by:
 10554 ;;		_Lcd_Cmd
 10555 ;;		_Lcd_Write_Char
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           
 10560                           ;psect for function _Lcd_Port
 10561  1B54                     _Lcd_Port:	
 10562                           
 10563                           ;incstack = 0
 10564                           ; Regs used in _Lcd_Port: [wreg]
 10565                           ;Lcd_Port@a stored from wreg
 10566  1B54  00F0               	movwf	Lcd_Port@a
 10567  1B55                     l2438:	
 10568                           
 10569                           ;LCD.c: 27: void Lcd_Port(char a);LCD.c: 28: {;LCD.c: 29:     if(a & 1)
 10570  1B55  1C70               	btfss	Lcd_Port@a,0
 10571  1B56  2B58               	goto	u3061
 10572  1B57  2B59               	goto	u3060
 10573  1B58                     u3061:	
 10574  1B58  2B5D               	goto	l25
 10575  1B59                     u3060:	
 10576  1B59                     l2440:	
 10577                           
 10578                           ;LCD.c: 30:   RA0 = 1;
 10579  1B59  1283               	bcf	3,5	;RP0=0, select bank0
 10580  1B5A  1303               	bcf	3,6	;RP1=0, select bank0
 10581  1B5B  1405               	bsf	5,0	;volatile
 10582  1B5C  2B60               	goto	l26
 10583  1B5D                     l25:	
 10584                           ;LCD.c: 31:  else
 10585                           
 10586                           
 10587                           ;LCD.c: 32:   RA0 = 0;
 10588  1B5D  1283               	bcf	3,5	;RP0=0, select bank0
 10589  1B5E  1303               	bcf	3,6	;RP1=0, select bank0
 10590  1B5F  1005               	bcf	5,0	;volatile
 10591  1B60                     l26:	
 10592                           
 10593                           ;LCD.c: 34:  if(a & 2)
 10594  1B60  1CF0               	btfss	Lcd_Port@a,1
 10595  1B61  2B63               	goto	u3071
 10596  1B62  2B64               	goto	u3070
 10597  1B63                     u3071:	
 10598  1B63  2B66               	goto	l27
 10599  1B64                     u3070:	
 10600  1B64                     l2442:	
 10601                           
 10602                           ;LCD.c: 35:   RA1 = 1;
 10603  1B64  1485               	bsf	5,1	;volatile
 10604  1B65  2B67               	goto	l28
 10605  1B66                     l27:	
 10606                           ;LCD.c: 36:  else
 10607                           
 10608                           
 10609                           ;LCD.c: 37:   RA1 = 0;
 10610  1B66  1085               	bcf	5,1	;volatile
 10611  1B67                     l28:	
 10612                           
 10613                           ;LCD.c: 39:  if(a & 4)
 10614  1B67  1D70               	btfss	Lcd_Port@a,2
 10615  1B68  2B6A               	goto	u3081
 10616  1B69  2B6B               	goto	u3080
 10617  1B6A                     u3081:	
 10618  1B6A  2B6D               	goto	l29
 10619  1B6B                     u3080:	
 10620  1B6B                     l2444:	
 10621                           
 10622                           ;LCD.c: 40:   RA2 = 1;
 10623  1B6B  1505               	bsf	5,2	;volatile
 10624  1B6C  2B6E               	goto	l30
 10625  1B6D                     l29:	
 10626                           ;LCD.c: 41:  else
 10627                           
 10628                           
 10629                           ;LCD.c: 42:   RA2 = 0;
 10630  1B6D  1105               	bcf	5,2	;volatile
 10631  1B6E                     l30:	
 10632                           
 10633                           ;LCD.c: 44:  if(a & 8)
 10634  1B6E  1DF0               	btfss	Lcd_Port@a,3
 10635  1B6F  2B71               	goto	u3091
 10636  1B70  2B72               	goto	u3090
 10637  1B71                     u3091:	
 10638  1B71  2B74               	goto	l31
 10639  1B72                     u3090:	
 10640  1B72                     l2446:	
 10641                           
 10642                           ;LCD.c: 45:   RA3 = 1;
 10643  1B72  1585               	bsf	5,3	;volatile
 10644  1B73  2B75               	goto	l32
 10645  1B74                     l31:	
 10646                           ;LCD.c: 46:  else
 10647                           
 10648                           
 10649                           ;LCD.c: 47:   RA3 = 0;
 10650  1B74  1185               	bcf	5,3	;volatile
 10651  1B75                     l32:	
 10652                           
 10653                           ;LCD.c: 49:  if(a & 16)
 10654  1B75  1E70               	btfss	Lcd_Port@a,4
 10655  1B76  2B78               	goto	u3101
 10656  1B77  2B79               	goto	u3100
 10657  1B78                     u3101:	
 10658  1B78  2B7B               	goto	l33
 10659  1B79                     u3100:	
 10660  1B79                     l2448:	
 10661                           
 10662                           ;LCD.c: 50:   RA4 = 1;
 10663  1B79  1605               	bsf	5,4	;volatile
 10664  1B7A  2B7C               	goto	l34
 10665  1B7B                     l33:	
 10666                           ;LCD.c: 51:  else
 10667                           
 10668                           
 10669                           ;LCD.c: 52:   RA4 = 0;
 10670  1B7B  1205               	bcf	5,4	;volatile
 10671  1B7C                     l34:	
 10672                           
 10673                           ;LCD.c: 54:  if(a & 32)
 10674  1B7C  1EF0               	btfss	Lcd_Port@a,5
 10675  1B7D  2B7F               	goto	u3111
 10676  1B7E  2B80               	goto	u3110
 10677  1B7F                     u3111:	
 10678  1B7F  2B82               	goto	l35
 10679  1B80                     u3110:	
 10680  1B80                     l2450:	
 10681                           
 10682                           ;LCD.c: 55:   RA5 = 1;
 10683  1B80  1685               	bsf	5,5	;volatile
 10684  1B81  2B83               	goto	l36
 10685  1B82                     l35:	
 10686                           ;LCD.c: 56:  else
 10687                           
 10688                           
 10689                           ;LCD.c: 57:   RA5 = 0;
 10690  1B82  1285               	bcf	5,5	;volatile
 10691  1B83                     l36:	
 10692                           
 10693                           ;LCD.c: 59:  if(a & 64)
 10694  1B83  1F70               	btfss	Lcd_Port@a,6
 10695  1B84  2B86               	goto	u3121
 10696  1B85  2B87               	goto	u3120
 10697  1B86                     u3121:	
 10698  1B86  2B89               	goto	l37
 10699  1B87                     u3120:	
 10700  1B87                     l2452:	
 10701                           
 10702                           ;LCD.c: 60:   RA6 = 1;
 10703  1B87  1705               	bsf	5,6	;volatile
 10704  1B88  2B8A               	goto	l38
 10705  1B89                     l37:	
 10706                           ;LCD.c: 61:  else
 10707                           
 10708                           
 10709                           ;LCD.c: 62:   RA6 = 0;
 10710  1B89  1305               	bcf	5,6	;volatile
 10711  1B8A                     l38:	
 10712                           
 10713                           ;LCD.c: 64:  if(a & 128)
 10714  1B8A  1FF0               	btfss	Lcd_Port@a,7
 10715  1B8B  2B8D               	goto	u3131
 10716  1B8C  2B8E               	goto	u3130
 10717  1B8D                     u3131:	
 10718  1B8D  2B90               	goto	l39
 10719  1B8E                     u3130:	
 10720  1B8E                     l2454:	
 10721                           
 10722                           ;LCD.c: 65:   RA7 = 1;
 10723  1B8E  1785               	bsf	5,7	;volatile
 10724  1B8F  2B91               	goto	l41
 10725  1B90                     l39:	
 10726                           ;LCD.c: 66:  else
 10727                           
 10728                           
 10729                           ;LCD.c: 67:   RA7 = 0;
 10730  1B90  1385               	bcf	5,7	;volatile
 10731  1B91                     l41:	
 10732  1B91  0008               	return
 10733  1B92                     __end_of_Lcd_Port:	
 10734                           
 10735                           	psect	text31
 10736  0835                     __ptext31:	
 10737 ;; *************** function _ADC_CONFIG *****************
 10738 ;; Defined at:
 10739 ;;		line 12 in file "ADC.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  canal           1    wreg     unsigned char 
 10742 ;;  justif          1    0[COMMON] unsigned char 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  canal           1    3[COMMON] unsigned char 
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10754 ;;      Params:         1       0       0       0       0
 10755 ;;      Locals:         1       0       0       0       0
 10756 ;;      Temps:          2       0       0       0       0
 10757 ;;      Totals:         4       0       0       0       0
 10758 ;;Total ram usage:        4 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; This function calls:
 10761 ;;		Nothing
 10762 ;; This function is called by:
 10763 ;;		_main
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           
 10768                           ;psect for function _ADC_CONFIG
 10769  0835                     _ADC_CONFIG:	
 10770                           
 10771                           ;incstack = 0
 10772                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
 10773                           ;ADC_CONFIG@canal stored from wreg
 10774  0835  00F3               	movwf	ADC_CONFIG@canal
 10775  0836                     l3338:	
 10776                           
 10777                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
 10778  0836  1283               	bcf	3,5	;RP0=0, select bank0
 10779  0837  1303               	bcf	3,6	;RP1=0, select bank0
 10780  0838  141F               	bsf	31,0	;volatile
 10781                           
 10782                           ;ADC.c: 14:     ADCON0bits.GO = 1;
 10783  0839  149F               	bsf	31,1	;volatile
 10784  083A                     l3340:	
 10785                           
 10786                           ;ADC.c: 15:     ADCON0bits.ADCS = 1;
 10787  083A  081F               	movf	31,w	;volatile
 10788  083B  393F               	andlw	-193
 10789  083C  3840               	iorlw	64
 10790  083D  009F               	movwf	31	;volatile
 10791  083E                     l3342:	
 10792                           
 10793                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
 10794  083E  1683               	bsf	3,5	;RP0=1, select bank1
 10795  083F  1303               	bcf	3,6	;RP1=0, select bank1
 10796  0840  121F               	bcf	31,4	;volatile
 10797  0841                     l3344:	
 10798                           
 10799                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
 10800  0841  129F               	bcf	31,5	;volatile
 10801                           
 10802                           ;ADC.c: 19:     switch(canal){
 10803  0842  28F7               	goto	l3404
 10804  0843                     l155:	
 10805                           ;ADC.c: 20:         case 0:
 10806                           
 10807                           
 10808                           ;ADC.c: 21:             ANSELbits.ANS0 = 1;
 10809  0843  1683               	bsf	3,5	;RP0=1, select bank3
 10810  0844  1703               	bsf	3,6	;RP1=1, select bank3
 10811  0845  1408               	bsf	8,0	;volatile
 10812  0846                     l3346:	
 10813                           
 10814                           ;ADC.c: 22:             ADCON0bits.CHS = 0;
 10815  0846  30C3               	movlw	-61
 10816  0847  1283               	bcf	3,5	;RP0=0, select bank0
 10817  0848  1303               	bcf	3,6	;RP1=0, select bank0
 10818  0849  059F               	andwf	31,f	;volatile
 10819  084A                     l3348:	
 10820                           
 10821                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;
 10822  084A  1683               	bsf	3,5	;RP0=1, select bank1
 10823  084B  1303               	bcf	3,6	;RP1=0, select bank1
 10824  084C  1405               	bsf	5,0	;volatile
 10825                           
 10826                           ;ADC.c: 24:             break;
 10827  084D  292F               	goto	l3408
 10828  084E                     l157:	
 10829                           ;ADC.c: 26:         case 1:
 10830                           
 10831                           
 10832                           ;ADC.c: 27:             ANSELbits.ANS1 = 1;
 10833  084E  1683               	bsf	3,5	;RP0=1, select bank3
 10834  084F  1703               	bsf	3,6	;RP1=1, select bank3
 10835  0850  1488               	bsf	8,1	;volatile
 10836  0851                     l3350:	
 10837                           
 10838                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
 10839  0851  1283               	bcf	3,5	;RP0=0, select bank0
 10840  0852  1303               	bcf	3,6	;RP1=0, select bank0
 10841  0853  081F               	movf	31,w	;volatile
 10842  0854  39C3               	andlw	-61
 10843  0855  3804               	iorlw	4
 10844  0856  009F               	movwf	31	;volatile
 10845  0857                     l3352:	
 10846                           
 10847                           ;ADC.c: 29:             TRISAbits.TRISA1 = 1;
 10848  0857  1683               	bsf	3,5	;RP0=1, select bank1
 10849  0858  1303               	bcf	3,6	;RP1=0, select bank1
 10850  0859  1485               	bsf	5,1	;volatile
 10851                           
 10852                           ;ADC.c: 30:             break;
 10853  085A  292F               	goto	l3408
 10854  085B                     l158:	
 10855                           ;ADC.c: 32:         case 2:
 10856                           
 10857                           
 10858                           ;ADC.c: 33:             ANSELbits.ANS2 = 1;
 10859  085B  1683               	bsf	3,5	;RP0=1, select bank3
 10860  085C  1703               	bsf	3,6	;RP1=1, select bank3
 10861  085D  1508               	bsf	8,2	;volatile
 10862  085E                     l3354:	
 10863                           
 10864                           ;ADC.c: 34:             ADCON0bits.CHS = 2;
 10865  085E  1283               	bcf	3,5	;RP0=0, select bank0
 10866  085F  1303               	bcf	3,6	;RP1=0, select bank0
 10867  0860  081F               	movf	31,w	;volatile
 10868  0861  39C3               	andlw	-61
 10869  0862  3808               	iorlw	8
 10870  0863  009F               	movwf	31	;volatile
 10871  0864                     l3356:	
 10872                           
 10873                           ;ADC.c: 35:             TRISAbits.TRISA2 = 1;
 10874  0864  1683               	bsf	3,5	;RP0=1, select bank1
 10875  0865  1303               	bcf	3,6	;RP1=0, select bank1
 10876  0866  1505               	bsf	5,2	;volatile
 10877                           
 10878                           ;ADC.c: 36:             break;
 10879  0867  292F               	goto	l3408
 10880  0868                     l159:	
 10881                           ;ADC.c: 38:         case 3:
 10882                           
 10883                           
 10884                           ;ADC.c: 39:             ANSELbits.ANS3 = 1;
 10885  0868  1683               	bsf	3,5	;RP0=1, select bank3
 10886  0869  1703               	bsf	3,6	;RP1=1, select bank3
 10887  086A  1588               	bsf	8,3	;volatile
 10888  086B                     l3358:	
 10889                           
 10890                           ;ADC.c: 40:             ADCON0bits.CHS = 3;
 10891  086B  1283               	bcf	3,5	;RP0=0, select bank0
 10892  086C  1303               	bcf	3,6	;RP1=0, select bank0
 10893  086D  081F               	movf	31,w	;volatile
 10894  086E  39C3               	andlw	-61
 10895  086F  380C               	iorlw	12
 10896  0870  009F               	movwf	31	;volatile
 10897  0871                     l3360:	
 10898                           
 10899                           ;ADC.c: 41:             TRISAbits.TRISA3 = 1;
 10900  0871  1683               	bsf	3,5	;RP0=1, select bank1
 10901  0872  1303               	bcf	3,6	;RP1=0, select bank1
 10902  0873  1585               	bsf	5,3	;volatile
 10903                           
 10904                           ;ADC.c: 42:             break;
 10905  0874  292F               	goto	l3408
 10906  0875                     l160:	
 10907                           ;ADC.c: 44:         case 4:
 10908                           
 10909                           
 10910                           ;ADC.c: 45:             ANSELbits.ANS4 = 1;
 10911  0875  1683               	bsf	3,5	;RP0=1, select bank3
 10912  0876  1703               	bsf	3,6	;RP1=1, select bank3
 10913  0877  1608               	bsf	8,4	;volatile
 10914  0878                     l3362:	
 10915                           
 10916                           ;ADC.c: 46:             ADCON0bits.CHS = 4;
 10917  0878  1283               	bcf	3,5	;RP0=0, select bank0
 10918  0879  1303               	bcf	3,6	;RP1=0, select bank0
 10919  087A  081F               	movf	31,w	;volatile
 10920  087B  39C3               	andlw	-61
 10921  087C  3810               	iorlw	16
 10922  087D  009F               	movwf	31	;volatile
 10923  087E                     l3364:	
 10924                           
 10925                           ;ADC.c: 47:             TRISAbits.TRISA5 = 1;
 10926  087E  1683               	bsf	3,5	;RP0=1, select bank1
 10927  087F  1303               	bcf	3,6	;RP1=0, select bank1
 10928  0880  1685               	bsf	5,5	;volatile
 10929                           
 10930                           ;ADC.c: 48:             break;
 10931  0881  292F               	goto	l3408
 10932  0882                     l161:	
 10933                           ;ADC.c: 50:         case 5:
 10934                           
 10935                           
 10936                           ;ADC.c: 51:             ANSELbits.ANS5 = 1;
 10937  0882  1683               	bsf	3,5	;RP0=1, select bank3
 10938  0883  1703               	bsf	3,6	;RP1=1, select bank3
 10939  0884  1688               	bsf	8,5	;volatile
 10940  0885                     l3366:	
 10941                           
 10942                           ;ADC.c: 52:             ADCON0bits.CHS = 5;
 10943  0885  1283               	bcf	3,5	;RP0=0, select bank0
 10944  0886  1303               	bcf	3,6	;RP1=0, select bank0
 10945  0887  081F               	movf	31,w	;volatile
 10946  0888  39C3               	andlw	-61
 10947  0889  3814               	iorlw	20
 10948  088A  009F               	movwf	31	;volatile
 10949  088B                     l3368:	
 10950                           
 10951                           ;ADC.c: 53:             TRISEbits.TRISE0 = 1;
 10952  088B  1683               	bsf	3,5	;RP0=1, select bank1
 10953  088C  1303               	bcf	3,6	;RP1=0, select bank1
 10954  088D  1409               	bsf	9,0	;volatile
 10955                           
 10956                           ;ADC.c: 54:             break;
 10957  088E  292F               	goto	l3408
 10958  088F                     l162:	
 10959                           ;ADC.c: 56:         case 6:
 10960                           
 10961                           
 10962                           ;ADC.c: 57:             ANSELbits.ANS6 = 1;
 10963  088F  1683               	bsf	3,5	;RP0=1, select bank3
 10964  0890  1703               	bsf	3,6	;RP1=1, select bank3
 10965  0891  1708               	bsf	8,6	;volatile
 10966  0892                     l3370:	
 10967                           
 10968                           ;ADC.c: 58:             ADCON0bits.CHS = 6;
 10969  0892  1283               	bcf	3,5	;RP0=0, select bank0
 10970  0893  1303               	bcf	3,6	;RP1=0, select bank0
 10971  0894  081F               	movf	31,w	;volatile
 10972  0895  39C3               	andlw	-61
 10973  0896  3818               	iorlw	24
 10974  0897  009F               	movwf	31	;volatile
 10975  0898                     l3372:	
 10976                           
 10977                           ;ADC.c: 59:             TRISEbits.TRISE1 = 1;
 10978  0898  1683               	bsf	3,5	;RP0=1, select bank1
 10979  0899  1303               	bcf	3,6	;RP1=0, select bank1
 10980  089A  1489               	bsf	9,1	;volatile
 10981                           
 10982                           ;ADC.c: 60:             break;
 10983  089B  292F               	goto	l3408
 10984  089C                     l163:	
 10985                           ;ADC.c: 62:         case 7:
 10986                           
 10987                           
 10988                           ;ADC.c: 63:             ANSELbits.ANS7 = 1;
 10989  089C  1683               	bsf	3,5	;RP0=1, select bank3
 10990  089D  1703               	bsf	3,6	;RP1=1, select bank3
 10991  089E  1788               	bsf	8,7	;volatile
 10992  089F                     l3374:	
 10993                           
 10994                           ;ADC.c: 64:             ADCON0bits.CHS = 7;
 10995  089F  1283               	bcf	3,5	;RP0=0, select bank0
 10996  08A0  1303               	bcf	3,6	;RP1=0, select bank0
 10997  08A1  081F               	movf	31,w	;volatile
 10998  08A2  39C3               	andlw	-61
 10999  08A3  381C               	iorlw	28
 11000  08A4  009F               	movwf	31	;volatile
 11001  08A5                     l3376:	
 11002                           
 11003                           ;ADC.c: 65:             TRISEbits.TRISE2 = 1;
 11004  08A5  1683               	bsf	3,5	;RP0=1, select bank1
 11005  08A6  1303               	bcf	3,6	;RP1=0, select bank1
 11006  08A7  1509               	bsf	9,2	;volatile
 11007                           
 11008                           ;ADC.c: 66:             break;
 11009  08A8  292F               	goto	l3408
 11010  08A9                     l164:	
 11011                           ;ADC.c: 68:         case 8:
 11012                           
 11013                           
 11014                           ;ADC.c: 69:             ANSELHbits.ANS8 = 1;
 11015  08A9  1683               	bsf	3,5	;RP0=1, select bank3
 11016  08AA  1703               	bsf	3,6	;RP1=1, select bank3
 11017  08AB  1409               	bsf	9,0	;volatile
 11018  08AC                     l3378:	
 11019                           
 11020                           ;ADC.c: 70:             ADCON0bits.CHS = 8;
 11021  08AC  1283               	bcf	3,5	;RP0=0, select bank0
 11022  08AD  1303               	bcf	3,6	;RP1=0, select bank0
 11023  08AE  081F               	movf	31,w	;volatile
 11024  08AF  39C3               	andlw	-61
 11025  08B0  3820               	iorlw	32
 11026  08B1  009F               	movwf	31	;volatile
 11027  08B2                     l3380:	
 11028                           
 11029                           ;ADC.c: 71:             TRISBbits.TRISB2 = 1;
 11030  08B2  1683               	bsf	3,5	;RP0=1, select bank1
 11031  08B3  1303               	bcf	3,6	;RP1=0, select bank1
 11032  08B4  1506               	bsf	6,2	;volatile
 11033                           
 11034                           ;ADC.c: 72:             break;
 11035  08B5  292F               	goto	l3408
 11036  08B6                     l165:	
 11037                           ;ADC.c: 74:         case 9:
 11038                           
 11039                           
 11040                           ;ADC.c: 75:             ANSELHbits.ANS9 = 1;
 11041  08B6  1683               	bsf	3,5	;RP0=1, select bank3
 11042  08B7  1703               	bsf	3,6	;RP1=1, select bank3
 11043  08B8  1489               	bsf	9,1	;volatile
 11044  08B9                     l3382:	
 11045                           
 11046                           ;ADC.c: 76:             ADCON0bits.CHS = 9;
 11047  08B9  1283               	bcf	3,5	;RP0=0, select bank0
 11048  08BA  1303               	bcf	3,6	;RP1=0, select bank0
 11049  08BB  081F               	movf	31,w	;volatile
 11050  08BC  39C3               	andlw	-61
 11051  08BD  3824               	iorlw	36
 11052  08BE  009F               	movwf	31	;volatile
 11053  08BF                     l3384:	
 11054                           
 11055                           ;ADC.c: 77:             TRISBbits.TRISB3 = 1;
 11056  08BF  1683               	bsf	3,5	;RP0=1, select bank1
 11057  08C0  1303               	bcf	3,6	;RP1=0, select bank1
 11058  08C1  1586               	bsf	6,3	;volatile
 11059                           
 11060                           ;ADC.c: 78:             break;
 11061  08C2  292F               	goto	l3408
 11062  08C3                     l166:	
 11063                           ;ADC.c: 80:         case 10:
 11064                           
 11065                           
 11066                           ;ADC.c: 81:             ANSELHbits.ANS10 = 1;
 11067  08C3  1683               	bsf	3,5	;RP0=1, select bank3
 11068  08C4  1703               	bsf	3,6	;RP1=1, select bank3
 11069  08C5  1509               	bsf	9,2	;volatile
 11070  08C6                     l3386:	
 11071                           
 11072                           ;ADC.c: 82:             ADCON0bits.CHS = 10;
 11073  08C6  1283               	bcf	3,5	;RP0=0, select bank0
 11074  08C7  1303               	bcf	3,6	;RP1=0, select bank0
 11075  08C8  081F               	movf	31,w	;volatile
 11076  08C9  39C3               	andlw	-61
 11077  08CA  3828               	iorlw	40
 11078  08CB  009F               	movwf	31	;volatile
 11079  08CC                     l3388:	
 11080                           
 11081                           ;ADC.c: 83:             TRISBbits.TRISB1 = 1;
 11082  08CC  1683               	bsf	3,5	;RP0=1, select bank1
 11083  08CD  1303               	bcf	3,6	;RP1=0, select bank1
 11084  08CE  1486               	bsf	6,1	;volatile
 11085                           
 11086                           ;ADC.c: 84:             break;
 11087  08CF  292F               	goto	l3408
 11088  08D0                     l167:	
 11089                           ;ADC.c: 86:         case 11:
 11090                           
 11091                           
 11092                           ;ADC.c: 87:             ANSELHbits.ANS11 = 1;
 11093  08D0  1683               	bsf	3,5	;RP0=1, select bank3
 11094  08D1  1703               	bsf	3,6	;RP1=1, select bank3
 11095  08D2  1589               	bsf	9,3	;volatile
 11096  08D3                     l3390:	
 11097                           
 11098                           ;ADC.c: 88:             ADCON0bits.CHS = 11;
 11099  08D3  1283               	bcf	3,5	;RP0=0, select bank0
 11100  08D4  1303               	bcf	3,6	;RP1=0, select bank0
 11101  08D5  081F               	movf	31,w	;volatile
 11102  08D6  39C3               	andlw	-61
 11103  08D7  382C               	iorlw	44
 11104  08D8  009F               	movwf	31	;volatile
 11105  08D9                     l3392:	
 11106                           
 11107                           ;ADC.c: 89:             TRISBbits.TRISB4 = 1;
 11108  08D9  1683               	bsf	3,5	;RP0=1, select bank1
 11109  08DA  1303               	bcf	3,6	;RP1=0, select bank1
 11110  08DB  1606               	bsf	6,4	;volatile
 11111                           
 11112                           ;ADC.c: 90:             break;
 11113  08DC  292F               	goto	l3408
 11114  08DD                     l168:	
 11115                           ;ADC.c: 92:         case 12:
 11116                           
 11117                           
 11118                           ;ADC.c: 93:             ANSELHbits.ANS12 = 1;
 11119  08DD  1683               	bsf	3,5	;RP0=1, select bank3
 11120  08DE  1703               	bsf	3,6	;RP1=1, select bank3
 11121  08DF  1609               	bsf	9,4	;volatile
 11122  08E0                     l3394:	
 11123                           
 11124                           ;ADC.c: 94:             ADCON0bits.CHS = 12;
 11125  08E0  1283               	bcf	3,5	;RP0=0, select bank0
 11126  08E1  1303               	bcf	3,6	;RP1=0, select bank0
 11127  08E2  081F               	movf	31,w	;volatile
 11128  08E3  39C3               	andlw	-61
 11129  08E4  3830               	iorlw	48
 11130  08E5  009F               	movwf	31	;volatile
 11131  08E6                     l3396:	
 11132                           
 11133                           ;ADC.c: 95:             TRISBbits.TRISB0 = 1;
 11134  08E6  1683               	bsf	3,5	;RP0=1, select bank1
 11135  08E7  1303               	bcf	3,6	;RP1=0, select bank1
 11136  08E8  1406               	bsf	6,0	;volatile
 11137                           
 11138                           ;ADC.c: 96:             break;
 11139  08E9  292F               	goto	l3408
 11140  08EA                     l169:	
 11141                           ;ADC.c: 98:         case 13:
 11142                           
 11143                           
 11144                           ;ADC.c: 99:             ANSELHbits.ANS13 = 1;
 11145  08EA  1683               	bsf	3,5	;RP0=1, select bank3
 11146  08EB  1703               	bsf	3,6	;RP1=1, select bank3
 11147  08EC  1689               	bsf	9,5	;volatile
 11148  08ED                     l3398:	
 11149                           
 11150                           ;ADC.c: 100:             ADCON0bits.CHS = 13;
 11151  08ED  1283               	bcf	3,5	;RP0=0, select bank0
 11152  08EE  1303               	bcf	3,6	;RP1=0, select bank0
 11153  08EF  081F               	movf	31,w	;volatile
 11154  08F0  39C3               	andlw	-61
 11155  08F1  3834               	iorlw	52
 11156  08F2  009F               	movwf	31	;volatile
 11157  08F3                     l3400:	
 11158                           
 11159                           ;ADC.c: 101:             TRISBbits.TRISB5 = 1;
 11160  08F3  1683               	bsf	3,5	;RP0=1, select bank1
 11161  08F4  1303               	bcf	3,6	;RP1=0, select bank1
 11162  08F5  1686               	bsf	6,5	;volatile
 11163                           
 11164                           ;ADC.c: 102:             break;
 11165  08F6  292F               	goto	l3408
 11166  08F7                     l3404:	
 11167  08F7  0873               	movf	ADC_CONFIG@canal,w
 11168  08F8  00F1               	movwf	??_ADC_CONFIG
 11169  08F9  01F2               	clrf	??_ADC_CONFIG+1
 11170                           
 11171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11172                           ; Switch size 1, requested type "simple"
 11173                           ; Number of cases is 1, Range of values is 0 to 0
 11174                           ; switch strategies available:
 11175                           ; Name         Instructions Cycles
 11176                           ; simple_byte            4     3 (average)
 11177                           ; direct_byte           11     8 (fixed)
 11178                           ; jumptable            260     6 (fixed)
 11179                           ;	Chosen strategy is simple_byte
 11180  08FA  0872               	movf	??_ADC_CONFIG+1,w
 11181  08FB  3A00               	xorlw	0	; case 0
 11182  08FC  1903               	skipnz
 11183  08FD  28FF               	goto	l3902
 11184  08FE  292F               	goto	l3408
 11185  08FF                     l3902:	
 11186                           
 11187                           ; Switch size 1, requested type "simple"
 11188                           ; Number of cases is 14, Range of values is 0 to 13
 11189                           ; switch strategies available:
 11190                           ; Name         Instructions Cycles
 11191                           ; simple_byte           43    22 (average)
 11192                           ; direct_byte           50     8 (fixed)
 11193                           ; jumptable            260     6 (fixed)
 11194                           ;	Chosen strategy is simple_byte
 11195  08FF  0871               	movf	??_ADC_CONFIG,w
 11196  0900  3A00               	xorlw	0	; case 0
 11197  0901  1903               	skipnz
 11198  0902  2843               	goto	l155
 11199  0903  3A01               	xorlw	1	; case 1
 11200  0904  1903               	skipnz
 11201  0905  284E               	goto	l157
 11202  0906  3A03               	xorlw	3	; case 2
 11203  0907  1903               	skipnz
 11204  0908  285B               	goto	l158
 11205  0909  3A01               	xorlw	1	; case 3
 11206  090A  1903               	skipnz
 11207  090B  2868               	goto	l159
 11208  090C  3A07               	xorlw	7	; case 4
 11209  090D  1903               	skipnz
 11210  090E  2875               	goto	l160
 11211  090F  3A01               	xorlw	1	; case 5
 11212  0910  1903               	skipnz
 11213  0911  2882               	goto	l161
 11214  0912  3A03               	xorlw	3	; case 6
 11215  0913  1903               	skipnz
 11216  0914  288F               	goto	l162
 11217  0915  3A01               	xorlw	1	; case 7
 11218  0916  1903               	skipnz
 11219  0917  289C               	goto	l163
 11220  0918  3A0F               	xorlw	15	; case 8
 11221  0919  1903               	skipnz
 11222  091A  28A9               	goto	l164
 11223  091B  3A01               	xorlw	1	; case 9
 11224  091C  1903               	skipnz
 11225  091D  28B6               	goto	l165
 11226  091E  3A03               	xorlw	3	; case 10
 11227  091F  1903               	skipnz
 11228  0920  28C3               	goto	l166
 11229  0921  3A01               	xorlw	1	; case 11
 11230  0922  1903               	skipnz
 11231  0923  28D0               	goto	l167
 11232  0924  3A07               	xorlw	7	; case 12
 11233  0925  1903               	skipnz
 11234  0926  28DD               	goto	l168
 11235  0927  3A01               	xorlw	1	; case 13
 11236  0928  1903               	skipnz
 11237  0929  28EA               	goto	l169
 11238  092A  292F               	goto	l3408
 11239  092B                     l171:	
 11240                           ;ADC.c: 105:         case 0:
 11241                           
 11242                           
 11243                           ;ADC.c: 106:             ADCON1bits.ADFM = 0;
 11244  092B  139F               	bcf	31,7	;volatile
 11245                           
 11246                           ;ADC.c: 107:             break;
 11247  092C  293F               	goto	l174
 11248  092D                     l173:	
 11249                           ;ADC.c: 108:         case 1:
 11250                           
 11251                           
 11252                           ;ADC.c: 109:             ADCON1bits.ADFM = 1;
 11253  092D  179F               	bsf	31,7	;volatile
 11254                           
 11255                           ;ADC.c: 110:             break;
 11256  092E  293F               	goto	l174
 11257  092F                     l3408:	
 11258  092F  0870               	movf	ADC_CONFIG@justif,w
 11259  0930  00F1               	movwf	??_ADC_CONFIG
 11260  0931  01F2               	clrf	??_ADC_CONFIG+1
 11261                           
 11262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11263                           ; Switch size 1, requested type "simple"
 11264                           ; Number of cases is 1, Range of values is 0 to 0
 11265                           ; switch strategies available:
 11266                           ; Name         Instructions Cycles
 11267                           ; simple_byte            4     3 (average)
 11268                           ; direct_byte           11     8 (fixed)
 11269                           ; jumptable            260     6 (fixed)
 11270                           ;	Chosen strategy is simple_byte
 11271  0932  0872               	movf	??_ADC_CONFIG+1,w
 11272  0933  3A00               	xorlw	0	; case 0
 11273  0934  1903               	skipnz
 11274  0935  2937               	goto	l3904
 11275  0936  293F               	goto	l174
 11276  0937                     l3904:	
 11277                           
 11278                           ; Switch size 1, requested type "simple"
 11279                           ; Number of cases is 2, Range of values is 0 to 1
 11280                           ; switch strategies available:
 11281                           ; Name         Instructions Cycles
 11282                           ; simple_byte            7     4 (average)
 11283                           ; direct_byte           14     8 (fixed)
 11284                           ; jumptable            260     6 (fixed)
 11285                           ;	Chosen strategy is simple_byte
 11286  0937  0871               	movf	??_ADC_CONFIG,w
 11287  0938  3A00               	xorlw	0	; case 0
 11288  0939  1903               	skipnz
 11289  093A  292B               	goto	l171
 11290  093B  3A01               	xorlw	1	; case 1
 11291  093C  1903               	skipnz
 11292  093D  292D               	goto	l173
 11293  093E  293F               	goto	l174
 11294  093F                     l174:	
 11295  093F  0008               	return
 11296  0940                     __end_of_ADC_CONFIG:	
 11297  007E                     btemp	set	126	;btemp
 11298  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    144
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     53      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 7
		 -> main@s2(BANK1[7]), main@s1(BANK1[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 7
		 -> main@s2(BANK1[7]), main@s1(BANK1[7]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   34712
                                             35 BANK1     18    18      0
                         _ADC_CONFIG
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30683
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     668
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     666
                                              4 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     35      3F       7       78.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9D      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 08 01:10:24 2020

      __size_of_ADC_CONFIG 010B               ___fldiv@aexp 0039               ___fldiv@bexp 0038  
                        pc 0002               ___fldiv@sign 0031                __CFG_CP$OFF 0000  
          ADC_CONFIG@canal 0073                         l30 1B6E                         l31 1B74  
                       l32 1B75                         l41 1B91                         l33 1B7B  
                       l25 1B5D                         l34 1B7C                         l26 1B60  
                       l35 1B82                         l27 1B66                         l36 1B83  
                       l28 1B67                         l44 1AD0                         l37 1B89  
                       l29 1B6D                         l53 1AB0                         l38 1B8A  
                       l39 1B90                         l47 080D                         l56 1C5D  
                       l65 1BD3                         l59 1014               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l122 009D                        l119 003C                        l160 0875  
                      l161 0882                        l162 088F                        l171 092B  
                      l163 089C                        l155 0843                        l164 08A9  
                      l308 0205                        l173 092D                        l165 08B6  
                      l157 084E                        l341 063D                        l174 093F  
                      l166 08C3                        l158 085B                        l334 05F9  
                      l167 08D0                        l159 0868                        l168 08DD  
                      l512 1E27                        l169 08EA                        l361 1B19  
                      l530 10F4                        l282 1577                        l355 07EB  
                      l540 1182                        l533 1152                        l525 1D58  
                      l349 07A4                        l550 1EC0                        l711 1771  
                      l615 1CFF                        l359 1B01                        l720 17D1  
                      l545 1C7A                        l553 1F2C                        l529 118F  
                      l289 0C9E                        l546 1C96                        l554 1F45  
                      l562 1EA3                        l547 1CAB                        l707 174D  
                      l395 1DBE                        l732 1AF4                        l572 1EA3  
                      l820 1F68                        l580 1094                        l717 1793  
                      l742 11EC                        l558 000F                        l822 1FFF  
                      l744 136C                        l728 17F3                        l576 10D1  
                      l840 1A94                        l729 17FF                        l569 1E8E  
                      l833 1FC9                        l577 1043                        l665 1C17  
                      l690 1682                        l834 1FD5                        l826 1FAD  
                      l850 0834                        l587 10C4                        l675 1B53  
                      l764 1350                        l692 1659                        l766 1360  
                      l758 12DE                        l686 15DB                        l782 0FFF  
                      l848 0822                        l794 0FF3                        l699 17FF  
                      l788 0F6B                        _RA0 0028                        _RA1 0029  
                      _RA2 002A                        _RA3 002B                        _RA4 002C  
                      _RC0 0038                        _RA5 002D                        _RC1 0039  
                      _RA6 002E                        _RA7 002F               __CFG_CPD$OFF 0000  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
         ADC_CONFIG@justif 0070               ___flmul@aexp 0036               ___flmul@bexp 0037  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             __CFG_LVP$OFF 0000               ___fltol@exp1 005B                       l3000 1A84  
                     l3002 1A85                       l3012 1015                       l3004 1A8B  
                     l3110 1177                       l3102 115E                       l3030 105B  
                     l3014 1028                       l3006 1A91                       l3200 1E3E  
                     l3120 1AFB                       l3112 1187                       l3104 1170  
                     l3040 1086                       l3032 1064                       l3024 1044  
                     l3008 1A93                       l3210 1E62                       l3202 1E53  
                     l3130 1D59                       l3122 1B08                       l3050 10A0  
                     l3042 108E                       l3034 106D                       l3026 104A  
                     l3018 1031                       l3300 0807                       l3204 1E54  
                     l3140 1D86                       l3132 1D69                       l3124 1B0F  
                     l3116 1AF5                       l3060 10C9                       l3044 1098  
                     l3052 10B2                       l3036 107B                       l3028 1059  
                     l2500 1D00                       l3310 1C18                       l3302 1A96  
                     l3206 1E5C                       l3142 1D98                       l3134 1D6C  
                     l3150 1DB6                       l3230 1CAC                       l3126 1B15  
                     l3118 1AF7                       l3070 10E8                       l3038 1085  
                     l2430 081C                       l2510 1D10                       l2502 1D01  
                     l3400 08F3                       l2440 1B59                       l3320 1C3F  
                     l3312 1C21                       l3304 1A9B                       l3160 1CA8  
                     l2600 159C                       l3224 1E83                       l3216 1E6A  
                     l3208 1E5E                       l3144 1DA6                       l3136 1D79  
                     l3240 1CDA                       l3232 1CB4                       l3080 110E  
                     l3064 10D2                       l2432 082B                       l2424 080F  
                     l2520 1D29                       l2512 1D15                       l2504 1D05  
                     l2450 1B80                       l2442 1B64                       l3322 1C45  
                     l3314 1C27                       l3306 1AA3                       l3330 1B92  
                     l3162 1CAA                       l3154 1C5E                       l3170 1ED4  
                     l2610 15B2                       l2602 159D                       l3250 1AD1  
                     l3226 1E93                       l3218 1E7C                       l3146 1DA7  
                     l3138 1D7D                       l3242 1CE8                       l3234 1CB7  
                     l3090 1142                       l3082 1110                       l3066 10DF  
                     l3058 10B9                       l2434 0830                       l2426 0811  
                     l2522 1D2D                       l2514 1D1B                       l2530 1D4A  
                     l2506 1D0A                       l3404 08F7                       l3340 083A  
                     l2452 1B87                       l2444 1B6B                       l3324 1C4B  
                     l3316 1C35                       l3308 1AA9                       l3332 1B95  
                     l3156 1C72                       l3180 1F42                       l3172 1EDC  
                     l2700 16BE                       l2620 15C3                       l2612 15B3  
                     l2604 159F                       l3252 1AD5                       l3228 1E98  
                     l3148 1DB0                       l3244 1CF1                       l3236 1CC4  
                     l3260 1F50                       l3092 1143                       l3084 1119  
                     l3076 10F5                       l2428 0818                       l2540 1BD6  
                     l2460 1DC6                       l2532 1D4F                       l2524 1D37  
                     l2516 1D1E                       l2508 1D0C                       l3500 03E2  
                     l3420 019C                       l3350 0851                       l3342 083E  
                     l2454 1B8E                       l2446 1B72                       l2438 1B55  
                     l3326 1C51                       l3318 1C39                       l3334 1BB1  
                     l3158 1C8E                       l3182 1F44                       l3174 1EE0  
                     l3166 1EA4                       l3190 000F                       l2710 16E7  
                     l2702 16C2                       l2630 15E1                       l2622 15C8  
                     l2614 15B9                       l2606 15A7                       l3238 1CC8  
                     l3246 1CF7                       l3270 1F7E                       l3262 1F60  
                     l3094 114C                       l3086 1122                       l3078 10FD  
                     l2550 1BEE                       l2542 1BDC                       l2470 1DDA  
                     l2462 1DCB                       l2534 1D54                       l2526 1D3D  
                     l2518 1D25                       l3510 045D                       l3502 03F1  
                     l3430 01BC                       l3422 01A2                       l3360 0871  
                     l3352 0857                       l3408 092F                       l3344 0841  
                     l2448 1B79                       l3328 1C57                       l3336 1BB7  
                     l3176 1F04                       l3168 1EB8                       l2720 1755  
                     l2712 1725                       l2704 16C3                       l2640 15F5  
                     l2632 15E5                       l2624 15D0                       l2616 15BD  
                     l2608 15AC                       l3280 1FB4                       l3272 1F8B  
                     l3264 1F70                       l3256 1F47                       l3096 1156  
                     l3088 1134                       l2800 0CD2                       l2552 1BFF  
                     l2544 1BDF                       l2560 1C13                       l2480 1DF0  
                     l2472 1DDC                       l2464 1DCD                       l2456 1DBF  
                     l2528 1D44                       l3600 07AF                       l3520 04AB  
                     l3512 0466                       l3504 040C                       l3440 01EC  
                     l3432 01BD                       l3424 01A9                       l3370 0892  
                     l3362 0878                       l3354 085E                       l3346 0846  
                     l3338 0836                       l3178 1F08                       l3186 0005  
                     l2730 1770                       l2722 175A                       l2714 172B  
                     l2706 16CC                       l2650 1609                       l2642 15F9  
                     l2634 15E9                       l2626 15D1                       l2618 15BE  
                     l3194 1E28                       l3290 1FED                       l3282 1FBF  
                     l3274 1F92                       l3258 1F4C                       l2810 0CE7  
                     l2802 0CD8                       l2554 1C05                       l2546 1BE6  
                     l2538 1BD4                       l2570 1B2A                       l2490 1E13  
                     l2482 1DF4                       l2474 1DE2                       l2466 1DD1  
                     l2458 1DC2                       l3602 07B0                       l3514 046E  
                     l3506 0433                       l3522 04B4                       l3450 0207  
                     l3442 01F0                       l3434 01C1                       l3426 01AE  
                     l3418 0197                       l3380 08B2                       l3372 0898  
                     l3364 087E                       l3356 0864                       l3348 084A  
                     l3700 127E                       l3188 000D                       l2732 1775  
                     l2740 1781                       l2716 1730                       l2708 16D1  
                     l2660 161D                       l2652 160D                       l2644 15FD  
                     l2636 15ED                       l2628 15D3                       l3196 1E35  
                     l3292 1FF2                       l3284 1FC3                       l3276 1F96  
                     l3268 1F79                       l2900 0FB3                       l2820 0D03  
                     l2812 0CEF                       l2804 0CDC                       l2556 1C06  
                     l2548 1BEA                       l2580 1B49                       l2572 1B2E  
                     l2564 1B1A                       l2484 1E05                       l2476 1DE5  
                     l2492 1E19                       l2468 1DD6                       l3604 07BF  
                     l3540 057B                       l3524 04E9                       l3516 048C  
                     l3508 0442                       l3460 0245                       l3452 0223  
                     l3436 01C4                       l3444 0201                       l3428 01B0  
                     l3612 07D5                       l3390 08D3                       l3382 08B9  
                     l3374 089F                       l3366 0885                       l3358 086B  
                     l3710 129F                       l3702 127F                       l3630 11A1  
                     l2734 1778                       l2726 1763                       l2718 173F  
                     l2742 1785                       l2670 165D                       l2662 1621  
                     l2654 1611                       l2646 1601                       l2638 15F1  
                     l2590 1585                       l3294 1FF6                       l3286 1FCD  
                     l3278 1FA4                       l2910 0FE7                       l2902 0FBE  
                     l2830 0D46                       l2814 0CF1                       l2806 0CDD  
                     l2558 1C0D                       l2574 1B32                       l2566 1B20  
                     l2582 1B4F                       l2494 1E1E                       l2486 1E0B  
                     l2478 1DEC                       l3606 07BF                       l3550 05ED  
                     l3542 0587                       l3534 053A                       l3526 0536  
                     l3470 0283                       l3462 0249                       l3454 022F  
                     l3614 07E7                       l3446 0203                       l3438 01D9  
                     l3392 08D9                       l3384 08BF                       l3376 08A5  
                     l3368 088B                       l2920 1AB2                       l3720 12B8  
                     l3712 12A1                       l3704 128D                       l3640 11B5  
                     l3632 11A2                       l3624 1190                       l2760 17CD  
                     l2752 1798                       l2744 1786                       l2736 177A  
                     l2728 176C                       l2680 1676                       l2672 1666  
                     l2656 1615                       l2648 1605                       l2664 1625  
                     l2592 1589                       l3296 1FF7                       l3288 1FD7  
                     l2912 0FEB                       l2904 0FCD                       l2840 0DCF  
                     l2832 0D62                       l2824 0D0C                       l2816 0CF9  
                     l2808 0CE2                       l2576 1B3C                       l2568 1B23  
                     l2496 1E23                       l2488 1E0C                       l3608 07CD  
                     l3560 0621                       l3552 0601                       l3544 058E  
                     l3528 0538                       l3480 02D3                       l3472 029C  
                     l3464 0262                       l3456 0233                       l3800 00ED  
                     l3394 08E0                       l3386 08C6                       l3378 08AC  
                     l2930 1AC9                       l2922 1AB5                       l3730 12DB  
                     l3714 12AA                       l3722 12BE                       l3706 1291  
                     l3650 11CE                       l3634 11A7                       l3642 11B7  
                     l3626 1197                       l2770 17E9                       l2762 17D6  
                     l2754 179D                       l2746 178A                       l2738 177F  
                     l2690 1694                       l2674 1668                       l2682 167A  
                     l2666 1626                       l2658 1619                       l2594 158A  
                     l2586 1578                       l2914 0FEC                       l2906 0FD7  
                     l2850 0E42                       l2842 0DDF                       l2834 0D8E  
                     l2826 0D1C                       l2818 0CFE                       l2578 1B42  
                     l3570 0652                       l3562 0630                       l3554 060A  
                     l3546 0593                       l3538 0571                       l3490 0360  
                     l3482 02D7                       l3474 02A7                       l3466 027B  
                     l3458 0237                       l3810 0116                       l3802 00F0  
                     l3396 08E6                       l3388 08CC                       l2924 1ABB  
                     l2940 1011                       l2932 1001                       l3740 12FA  
                     l3724 12C2                       l3716 12AE                       l3708 1297  
                     l3660 11E2                       l3652 11CF                       l3644 11BF  
                     l3636 11AC                       l3628 119D                       l2772 17ED  
                     l2764 17DB                       l2756 17AB                       l2748 1790  
                     l2692 16AB                       l2684 1686                       l2676 166C  
                     l2668 163D                       l2596 158F                       l2588 157F  
                     l2916 0FF7                       l2908 0FD9                       l2860 0EEF  
                     l2852 0E5F                       l2844 0DFC                       l2836 0DAA  
                     l2828 0D29                       l2780 0C9F                       l3580 0729  
                     l3572 0656                       l3564 0637                       l3556 060E  
                     l3548 05CE                       l3492 0369                       l3484 02DD  
                     l3476 02AD                       l3468 027F                       l3900 021B  
                     l3820 0150                       l3812 011F                       l3804 00F5  
                     l3902 08FF                       l3398 08ED                       l2926 1ABE  
                     l2934 1004                       l3750 1343                       l3742 1313  
                     l3734 12E3                       l3726 12C3                       l3718 12AF  
                     l3654 11D4                       l3662 11E4                       l3646 11C4  
                     l3638 11B4                       l2774 17EF                       l2766 17E3  
                     l2758 17AF                       l2694 16AF                       l2686 168B  
                     l2678 166D                       l2598 1594                       l2870 0F3B  
                     l2862 0F17                       l2854 0E8C                       l2846 0E0C  
                     l2838 0DC6                       l2790 0CB6                       l2782 0CA6  
                     l2950 1483                       l2942 1370                       l3590 0783  
                     l3582 0735                       l3574 0674                       l3566 0646  
                     l3558 0614                       l3494 0384                       l3486 02FC  
                     l3478 02C0                       l3822 0159                       l3814 012B  
                     l3806 0101                       l3904 0937                       l2928 1AC6  
                     l2936 100A                       l3760 135C                       l3752 1347  
                     l3736 12E8                       l3744 1319                       l3728 12C7  
                     l3680 122D                       l3664 11F4                       l3672 120D  
                     l3656 11D9                       l3648 11CA                       l2776 17FA  
                     l2768 17E8                       l2696 16B3                       l2880 0F50  
                     l2872 0F3C                       l2864 0F20                       l2856 0E9C  
                     l2848 0E29                       l2792 0CBB                       l2784 0CAC  
                     l2952 1489                       l2944 1376                       l2960 0943  
                     l3592 0789                       l3576 06CF                       l3584 0770  
                     l3568 064B                       l3488 0347                       l3496 038C  
                     l3824 016D                       l3816 0134                       l3808 010A  
                     l2938 100D                       l3754 134F                       l3746 1326  
                     l3738 12F6                       l3690 124C                       l3682 1235  
                     l3674 1212                       l3666 1200                       l3658 11E1  
                     l2778 17FE                       l2698 16BC                       l2890 0F75  
                     l2882 0F54                       l2874 0F45                       l2866 0F2E  
                     l2858 0EC9                       l2794 0CC3                       l2786 0CB0  
                     l2962 0947                       l3586 0778                       l3578 070A  
                     l3498 039B                       l3594 0790                       l3826 0179  
                     l3818 0148                       l3770 0010                       l3756 1356  
                     l3748 1334                       l3692 125E                       l3684 123D  
                     l3668 1204                       l2892 0F83                       l2884 0F68  
                     l2868 0F37                       l2876 0F4B                       l2796 0CC5  
                     l2788 0CB1                       l2956 1534                       l2972 0A38  
                     l2964 0949                       l3596 0796                       l3588 077F  
                     l3828 0182                       l3780 0032                       l3772 0019  
                     l3758 135A                       l3694 1262                       l3686 1245  
                     l3678 121B                       l2894 0F87                       l2878 0F4F  
                     l2798 0CCD                       l2990 0BE3                       l2974 0A3F  
                     l2966 0950                       l2982 0AF4                       l3598 079E  
                     l3790 008F                       l3782 0039                       l3774 0020  
                     l3696 1263                       l3688 1247                       l2896 0FA0  
                     l2888 0F70                       l2992 0BEA                       l2984 0AFB  
                     l3792 0093                       l3784 0040                       l3776 0027  
                     l3698 126C                       l2898 0FA6                       l2978 0AC7  
                     l3794 009A                       l3786 0046                       l3778 002C  
                     l2996 0C72                       l3796 00A1                       l3788 008C  
                     l3798 00A7                       STR_1 18A5                       STR_2 18A9  
                     STR_3 18AD                       STR_4 18A0                       STR_5 18A0  
                     u3100 1B79                       u3101 1B78                       u3110 1B80  
                     u3030 081C                       u3111 1B7F                       u3031 081B  
                     u3120 1B87                       u3200 1E05                       u3121 1B86  
                     u4001 0D54                       u3201 1E04                       u3130 1B8E  
                     u3050 0830                       u4002 0D5B                       u3131 1B8D  
                     u3051 082F                       u4011 0D70                       u4003 0D62  
                     u3060 1B59                       u4012 0D77                       u3220 1E19  
                     u3140 1DC6                       u3061 1B58                       u3045 0823  
                     u4101 0EAB                       u4021 0D9C                       u4013 0D7E  
                     u3221 1E18                       u3205 1E01                       u3141 1DC5  
                     u3070 1B64                       u4110 0ED5                       u4102 0EB2  
                     u4022 0DA3                       u3230 1E1E                       u3150 1DD1  
                     u3310 1D4A                       u3071 1B63                       u4103 0EB9  
                     u4031 0DB8                       u4023 0DAA                       u3231 1E1D  
                     u3215 1E0D                       u3151 1DD0                       u3311 1D49  
                     u3080 1B6B                       u5000 1F08                       u4200 0F54  
                     u4032 0DBF                       u3400 1B20                       u3160 1DE2  
                     u3320 1D4F                       u3240 1D05                       u3081 1B6A  
                     u5001 1F07                       u4201 0F53                       u4121 0EE1  
                     u4033 0DC6                       u3401 1B1F                       u3161 1DE1  
                     u3321 1D4E                       u3305 1D3E                       u3241 1D04  
                     u3090 1B72                       u4210 0F68                       u4130 0EFD  
                     u4122 0EE8                       u3330 1BDC                       u3250 1D10  
                     u3091 1B71                       u5011 1F17                       u4211 0F67  
                     u4123 0EEF                       u4115 0ED0                       u4051 0DEE  
                     u3331 1BDB                       u3251 1D0F                       u5020 1F42  
                     u5012 1F18                       u3500 15BD                       u5100 1E82  
                     u4220 0F6F                       u4052 0DF5                       u3420 1B32  
                     u3180 1DF4                       u3260 1D1B                       u5021 1F41  
                     u5013 1F1D                       u3501 15BC                       u5101 1E81  
                     u4221 0F6E                       u4141 0F09                       u4061 0E1B  
                     u4053 0DFC                       u4045 0DC8                       u3421 1B31  
                     u3181 1DF3                       u3261 1D1A                       u5014 1F1E  
                     u5030 000D                       u3510 15C3                       u4230 0F75  
                     u4142 0F10                       u4062 0E22                       u3350 1BEE  
                     u3430 1B3C                       u5015 1F23                       u5031 000C  
                     u3511 15C2                       u4231 0F74                       u4143 0F17  
                     u4135 0EF8                       u4063 0E29                       u3351 1BED  
                     u3431 1B3B                       u3415 1B24                       u3175 1DE6  
                     u6000 1326                       u5016 1F24                       u3520 15C8  
                     u5120 1E93                       u5040 1E35                       u5200 1F4C  
                     u4240 0F87                       u3280 1D2D                       u6001 1325  
                     u5025 1F3E                       u3521 15C7                       u5121 1E92  
                     u5041 1E34                       u5201 1F4B                       u4241 0F86  
                     u4081 0E51                       u3345 1BE0                       u4305 1393  
                     u3281 1D2C                       u6010 1343                       u3610 1682  
                     u3530 15E1                       u5130 1E98                       u5050 1E4C  
                     u5210 1F50                       u4250 0F96                       u4170 0F3B  
                     u4082 0E58                       u3370 1BFF                       u3450 1B4F  
                     u4330 1489                       u3290 1D37                       u6011 1342  
                     u3611 1681                       u3531 15E0                       u5131 1E97  
                     u5115 1E85                       u5211 1F4F                       u4171 0F3A  
                     u4155 0F19                       u4091 0E7E                       u4083 0E5F  
                     u4075 0E2B                       u3371 1BFE                       u3451 1B4E  
                     u3435 1B38                       u4331 1488                       u4315 13ED  
                     u3195 1DF5                       u3291 1D36                       u3275 1D1F  
                     u6020 135A                       u3620 1686                       u3540 15E5  
                     u3460 1589                       u5060 1E62                       u5140 1CB4  
                     u5300 1FCD                       u5220 1F70                       u4260 0FB3  
                     u4092 0E85                       u4500 0BEA                       u4420 0A3F  
                     u6021 1359                       u6005 1322                       u3701 16FE  
                     u3621 1685                       u3605 166F                       u3541 15E4  
                     u3461 1588                       u5061 1E61                       u5141 1CB3  
                     u5301 1FCC                       u5221 1F6F                       u4261 0FB2  
                     u4165 0F30                       u4093 0E8C                       u3365 1BEF  
                     u3445 1B43                       u4325 1442                       u4501 0BE9  
                     u4421 0A3E                       u4405 09AC                       u3710 1712  
                     u3702 16FF                       u3630 168B                       u3550 163D  
                     u3470 158F                       u5070 1E69                       u5310 1FE2  
                     u4270 0FCD                       u4190 0F4F                       u3390 1C13  
                     u6030 0040                       u6015 133F                       u3711 1713  
                     u3703 1704                       u3631 168A                       u3551 163C  
                     u3471 158E                       u5071 1E68                       u5055 1E47  
                     u4271 0FCC                       u4255 0F91                       u4191 0F4E  
                     u3391 1C12                       u3375 1BFB                       u3295 1D33  
                     u4415 09F7                       u6031 003F                       u3800 178A  
                     u3720 1730                       u3712 1718                       u3704 1705  
                     u3560 1648                       u3480 1594                       u5160 1CC8  
                     u5320 1FF2                       u5240 1F91                       u4280 0FEB  
                     u5400 01BC                       u6040 00A1                       u3801 1789  
                     u3721 172F                       u3713 1719                       u3705 170A  
                     u3641 169D                       u3561 1646                       u3481 1593  
                     u5161 1CC7                       u5321 1FF1                       u5241 1F90  
                     u4281 0FEA                       u4265 0FAF                       u4185 0F3E  
                     u3385 1C07                       u4345 14A6                       u5401 01BB  
                     u6041 00A0                       u3810 1790                       u3730 1755  
                     u3706 170B                       u3650 16AF                       u3642 16A4  
                     u3570 1649                       u3490 15B2                       u5090 1E7B  
                     u5170 1CDA                       u5330 1FF6                       u4610 1094  
                     u4290 1376                       u4370 0947                       u5410 0200  
                     u6107 1C2B                       u3811 178F                       u3731 1754  
                     u3651 16AE                       u3643 16AB                       u3555 1639  
                     u3491 15B1                       u5091 1E7A                       u5171 1CD9  
                     u5155 1CB9                       u5331 1FF5                       u5315 1FDD  
                     u5235 1F83                       u4611 1093                       u4275 0FC9  
                     u4355 14F3                       u4291 1375                       u4515 0BFD  
                     u4435 0A52                       u4371 0946                       u5411 01FF  
                     u5340 1A9B                       u3900 17ED                       u3820 1797  
                     u3740 175A                       u3660 16B3                       u3580 165D  
                     u5260 1FB3                       u4700 10F3                       u4620 1098  
                     u4540 1A8B                       u4460 0AFB                       u4380 0950  
                     u5500 03F1                       u5420 022F                       u6117 1C37  
                     u5341 1A9A                       u3901 17EC                       u3821 1796  
                     u3741 1759                       u3661 16B2                       u3581 165C  
                     u5085 1E6B                       u5261 1FB2                       u4701 10F2  
                     u4621 1097                       u4605 1087                       u4365 153F  
                     u4541 1A8A                       u4525 0C39                       u4461 0AFA  
                     u4445 0A8E                       u4381 094F                       u5501 03F0  
                     u5421 022E                       u5350 1AA9                       u3910 17FE  
                     u3830 179D                       u3670 16C2                       u3590 166C  
                     u5190 1CF7                       u4630 109F                       u4550 1A91  
                     u5510 040C                       u5430 0233                       u6127 1AC2  
                     u5351 1AA8                       u3911 17FD                       u3831 179C  
                     u3671 16C1                       u3591 166B                       u5191 1CF6  
                     u5175 1CD6                       u5255 1FA5                       u4631 109E  
                     u4551 1A90                       u4535 0C75                       u4455 0ACA  
                     u5511 040B                       u5431 0232                       u5360 1B9F  
                     u3840 17AF                       u3760 1770                       u5280 1FC3  
                     u4720 1134                       u4560 1028                       u3920 0CB0  
                     u5600 0600                       u5520 0433                       u5440 0262  
                     u6137 1ACB                       u3841 17AE                       u3761 176F  
                     u5185 1CE9                       u5281 1FC2                       u4721 1133  
                     u4561 1027                       u3921 0CAF                       u5601 05FF  
                     u5521 0432                       u5505 03ED                       u5441 0261  
                     u6057 0036                       u5370 1BC1                       u3850 17BE  
                     u3770 1775                       u3690 16E7                       u5290 1FC9  
                     u4810 1187                       u4650 10B1                       u4570 1042  
                     u3930 0CB6                       u5610 0621                       u5530 0442  
                     u5450 029C                       u3771 1774                       u3755 1765  
                     u3691 16E6                       u5291 1FC8                       u5275 1FB8  
                     u4811 1186                       u4715 111B                       u4651 10B0  
                     u4571 1041                       u3931 0CB5                       u4475 0B1B  
                     u4395 0970                       u5611 0620                       u5531 0441  
                     u5451 029B                       u6067 0097                       u5380 1BD3  
                     u3860 17CD                       u3780 177F                       u4900 1D98  
                     u4820 1AFB                       u4740 1152                       u4660 10B8  
                     u3940 0CBB                       u5700 07AF                       u5620 0630  
                     u5540 045D                       u5460 02D7                       u5381 1BD2  
                     u3861 17CC                       u3781 177E                       u3693 16E3  
                     u3685 16C5                       u4901 1D97                       u4821 1AFA  
                     u4805 1179                       u4741 1151                       u4725 1130  
                     u4661 10B7                       u4645 10A1                       u3941 0CBA  
                     u4485 0B57                       u5701 07AE                       u5621 062F  
                     u5541 045C                       u5461 02D6                       u6077 018A  
                     u3870 17D6                       u3790 1785                       u4750 1156  
                     u4590 107B                       u3950 0CDC                       u5710 07BF  
                     u5630 064B                       u5470 0360                       u5390 01A2  
                     u6087 100F                       u3871 17D5                       u3855 17B9  
                     u3791 1784                       u4751 1155                       u4735 1145  
                     u4591 107A                       u3951 0CDB                       u4495 0BA2  
                     u5711 07BE                       u5631 064A                       u5615 061D  
                     u5535 043E                       u5471 035F                       u5391 01A1  
                     u5800 11F4                       u3880 17DB                       u4920 1DB6  
                     u4760 115D                       u4680 10C9                       u3960 0CE2  
                     u5720 07CD                       u5560 0570                       u5480 0384  
                     u6097 1C1C                       u5801 11F3                       u3881 17DA  
                     u4921 1DB5                       u4905 1D94                       u4761 115C  
                     u4681 10C8                       u4585 1066                       u3961 0CE1  
                     u5721 07CC                       u5705 07AB                       u5625 062C  
                     u5561 056F                       u5481 0383                       u5810 1212  
                     u4930 1C72                       u3890 17E8                       u4850 1B15  
                     u4690 10DF                       u3970 0CE7                       u5730 07E7  
                     u5570 057B                       u5490 039B                       u5811 1211  
                     u4931 1C71                       u3891 17E7                       u4915 1DA8  
                     u4851 1B14                       u4835 1B02                       u4691 10DE  
                     u4675 10BB                       u4595 1077                       u3971 0CE6  
                     u5731 07E6                       u5715 07BB                       u5571 057A  
                     u5555 053D                       u5491 039A                       u5820 124C  
                     u5740 11A1                       u4940 1C8E                       u4860 1D69  
                     u4780 116F                       u3980 0CFE                       u5660 0777  
                     u5580 0587                       u5821 124B                       u5741 11A0  
                     u4941 1C8D                       u4861 1D68                       u4845 1B09  
                     u4781 116E                       u3981 0CFD                       u5661 0776  
                     u5645 06D2                       u5581 0586                       u5565 056C  
                     u5910 12AE                       u5750 11A7                       u4950 1CA8  
                     u4790 1176                       u3990 0D03                       u5670 078F  
                     u5911 12AD                       u5751 11A6                       u4951 1CA7  
                     u4791 1175                       u4775 115F                       u3991 0D02  
                     u5671 078E                       u5655 0738                       u5495 0397  
                     u5760 11AC                       u4960 1EB8                       u4880 1D7D  
                     u5680 0796                       u5905 12A3                       u5761 11AB  
                     u4961 1EB7                       u4881 1D7C                       u5681 0795  
                     u5930 12C2                       u5850 1262                       u5770 11CE  
                     u4970 1ED4                       u5690 079E                       u5931 12C1  
                     u5851 1261                       u5835 124E                       u5771 11CD  
                     u4955 1CA4                       u4971 1ED3                       u4875 1D6E  
                     u5691 079D                       u5595 0596                       u5940 12C7  
                     u5780 11D4                       u4980 1EE0                       u5941 12C6  
                     u5925 12B1                       u5845 1257                       u5781 11D3  
                     u4981 1EDF                       u5950 12DB                       u5870 127E  
                     u5790 11D9                       u5951 12DA                       u5871 127D  
                     u5791 11D8                       u4991 1EEF                       u4895 1D7F  
                     u5960 12E2                       u5880 1297                       u4992 1EF0  
                     u5961 12E1                       u5881 1296                       u5865 1265  
                     u4993 1EF5                       u5970 12E8                       u5890 129F  
                     u4994 1EF6                       u5971 12E7                       u5891 129E  
                     u5875 127A                       u4995 1EFB                       u5980 12FA  
                     u4996 1EFC                       u5981 12F9                       u5990 1309  
                     u5995 1304               __CFG_WRT$OFF 0000                       _adc1 00DE  
                     _adc2 00DD          ?_Lcd_Write_String 0073                       _main 0010  
                     _ctrl 006F                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075              __CFG_IESO$OFF 0000            ___fldiv@new_exp 0032  
             _sprintf$1130 00AA            __end_of_Lcd_Cmd 1AD1              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070            __end_of___fldiv 136D  
          __end_of___awdiv 1E28            __end_of___flneg 0010              __CFG_WDTE$OFF 0000  
          __end_of___awmod 1D59            __end_of___flmul 1000            __end_of___flsub 1AF5  
          __end_of___fltol 1EA4                      _ANSEL 0188            __end_of___lldiv 1DBF  
          ___awdiv@divisor 0077            __end_of___llmod 1D00            __end_of___lwdiv 1C18  
          __end_of___lwmod 1B54            ___awdiv@counter 0020    __size_of_Lcd_Set_Cursor 001C  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
           __CFG_FCMEN$OFF 0000                      _adc11 00D9                      _adc22 00D5  
          __end_of_dpowers 18A0                      _ctrl2 006E                      _scale 0940  
          __end_of_isdigit 1A95             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07EC  
         __end_of_Lcd_Init 1C5E           __end_of_Lcd_Port 1B92             __CFG_MCLRE$OFF 0000  
          __initialization 07EC               __end_of_main 0194                     ??_main 00C3  
       __size_of_Lcd_Clear 0007       __size_of__tdiv_to_l_ 00BD               ??_ADC_CONFIG 0071  
         ___llmod@dividend 0074                     ?_scale 003E                     _ADRESH 001E  
                   _ADRESL 009E           ___awdiv@dividend 0079                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0015           __end_of___xxtofl 2000  
           __CFG_PWRTE$OFF 0000           __end_of__powers_ 1844                     ___flge 1EA4  
                   ___fleq 1C5E                  ??___fladd 005A         __end_of_ADC_CONFIG 0940  
                   ___wmul 1AF5                  ??___fldiv 0028                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0078                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 136D           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075                     main@s1 00C7                     main@s2 00CE  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_sprintf 00A5  
          Lcd_Set_Cursor@a 0075            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 080E  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 0C9F  
           _Lcd_Set_Cursor 1A95                 __div_to_l_ 10D2                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020                 __pbssBANK0 006E  
               __pbssBANK1 00D5              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 0835                 __pmaintext 0010                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070                    ?_fround 003E  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1AB1                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 1800  
           _Lcd_Write_Char 1000                    _Lcd_Cmd 1AB1          __end_of__npowers_ 1878  
               _scale$1129 004C            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___fldiv 1190                    ___awdiv 1DBF  
                  ___flneg 0005                    ___awmod 1D00                    ___flmul 0C9F  
                  ___flsub 1AD1                    ___fltol 1E28                    ___lldiv 1D59  
          __size_of___wmul 0025                    ___llmod 1CAC                    ___lwdiv 1BD4  
                  ___lwmod 1B1A                  _ANSELbits 0188            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0194                    __ptext2 0940  
                  __ptext3 1D00                    __ptext4 1DBF                    __ptext5 1A83  
                  __ptext6 136D                    __ptext7 1B1A                    __ptext8 1BD4  
                  __ptext9 0C9F                ?__div_to_l_ 0070                    _dpowers 1878  
                  _isdigit 1A83                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 0194     __end_of_Lcd_Write_Char 1015       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 0065              ___xxtofl@sign 0078                  _TRISAbits 0085  
                _TRISBbits 0086                  _TRISEbits 0089                ___fldiv@grs 0034  
              ___fldiv@rem 002D            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                ___flmul@grs 0032        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 0807             __end_of___flge 1F46             __end_of___fleq 1CAC  
           __end_of___wmul 1B1A           _Lcd_Write_String 1B92             __end_of_fround 1578  
      start_initialization 07EC        __end_of__tdiv_to_l_ 10D2          __size_of_Lcd_Init 0046  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0070            ___llmod@counter 0079  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                 ?_Lcd_Clear 0070                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 080E  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00B7  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___fldiv@a 0020                  ___fldiv@b 0024                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070                sprintf@flag 00AF  
              sprintf@eexp 00B5                sprintf@fval 00BE                sprintf@prec 00BC  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___fldiv 0020                   ?___awdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0024                   ?___flsub 0066  
                 ?___fltol 0051                   ?___lldiv 0070                   ?___llmod 0070  
                __npowers_ 1844                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                  __pstrings 1800                __tdiv_to_l_ 1015  
             ??__div_to_l_ 0078                   ?_isdigit 0070           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             ___wmul@product 0074  
                 _PIE1bits 008C                   Lcd_Cmd@a 0073                   _PIR1bits 000C  
       __end_of__div_to_l_ 1190                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 180F                 _ADCON1bits 009F          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                 _ADC_CONFIG 0835                   _Lcd_Init 1C18  
                 _Lcd_Port 1B54   __end_of_Lcd_Write_String 1BD4           __size_of_Lcd_Cmd 0020  
              ??__Umul8_16 0072           __size_of___fladd 0288           __size_of___fldiv 01DD  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0054           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1127 004D                _fround$1128 0049  
       __end_of__stringtab 1810                _isdigit$930 0070                 _ANSELHbits 0189  
               sprintf@val 00B1                   ___xxtofl 1F46           __size_of_isdigit 0012  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 080E  
                 __ptext11 1015                   __ptext20 0005                   __ptext12 10D2  
                 __ptext21 1EA4                   __ptext13 1F46                   __ptext30 1B54  
                 __ptext22 1C5E                   __ptext14 1AF5                   __ptext31 0835  
                 __ptext23 1190                   __ptext15 1CAC                   __ptext24 1B92  
                 __ptext16 1D59                   __ptext25 1000                   __ptext17 1E28  
                 __ptext26 1A95                   __ptext18 1AD1                   __ptext27 1C18  
                 __ptext19 1578                   __ptext28 0807                   __ptext29 1AB1  
        __CFG_BOR4V$BOR40V 0000                   __powers_ 1810           __size_of_sprintf 0658  
            __size_of_main 0184                 _INTCONbits 000B                ?_ADC_CONFIG 0070  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00AE  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00BB  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 180A               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C2                   sprintf@f 00A0           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 180A  
                 stringtab 1800              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
