

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 05 17:01:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001E                     _ADRESH	set	30
   364  000B                     _INTCONbits	set	11
   365  000C                     _PIR1bits	set	12
   366  001F                     _ADCON0bits	set	31
   367  0038                     _RC0	set	56
   368  0039                     _RC1	set	57
   369  002F                     _RA7	set	47
   370  002E                     _RA6	set	46
   371  002D                     _RA5	set	45
   372  002C                     _RA4	set	44
   373  002B                     _RA3	set	43
   374  002A                     _RA2	set	42
   375  0029                     _RA1	set	41
   376  0028                     _RA0	set	40
   377  009E                     _ADRESL	set	158
   378  008C                     _PIE1bits	set	140
   379  0086                     _TRISBbits	set	134
   380  0089                     _TRISEbits	set	137
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1bits	set	159
   383  0087                     _TRISC	set	135
   384  0088                     _TRISD	set	136
   385  0085                     _TRISA	set	133
   386  0189                     _ANSELHbits	set	393
   387  0188                     _ANSELbits	set	392
   388  0188                     _ANSEL	set	392
   389  0189                     _ANSELH	set	393
   390                           
   391                           	psect	strings
   392  0003                     __pstrings:	
   393  0003                     stringtab:	
   394  0003                     __stringtab:	
   395  0003                     stringcode:	
   396                           ;	String table - string pointers are 1 byte each
   397                           
   398  0003                     stringdir:	
   399  0003  3000               	movlw	high stringdir
   400  0004  008A               	movwf	10
   401  0005  0804               	movf	4,w
   402  0006  0A84               	incf	4,f
   403  0007  0782               	addwf	2,f
   404  0008                     __stringbase:	
   405  0008  3400               	retlw	0
   406  0009                     __end_of__stringtab:	
   407  0009                     STR_2:	
   408  0009  3444               	retlw	68	;'D'
   409  000A  3441               	retlw	65	;'A'
   410  000B  3456               	retlw	86	;'V'
   411  000C  3449               	retlw	73	;'I'
   412  000D  3449               	retlw	73	;'I'
   413  000E  3449               	retlw	73	;'I'
   414  000F  3449               	retlw	73	;'I'
   415  0010  3449               	retlw	73	;'I'
   416  0011  3444               	retlw	68	;'D'
   417  0012  3400               	retlw	0
   418  0013                     STR_1:	
   419  0013  3461               	retlw	97	;'a'
   420  0014  3469               	retlw	105	;'i'
   421  0015  3475               	retlw	117	;'u'
   422  0016  3475               	retlw	117	;'u'
   423  0017  3464               	retlw	100	;'d'
   424  0018  3461               	retlw	97	;'a'
   425  0019  3461               	retlw	97	;'a'
   426  001A  3461               	retlw	97	;'a'
   427  001B  3400               	retlw	0
   428                           
   429                           ; #config settings
   430  0000                     
   431                           	psect	cinit
   432  07FC                     start_initialization:	
   433  07FC                     __initialization:	
   434  07FC                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437  07FC                     __end_of__initialization:	
   438  07FC  0183               	clrf	3
   439  07FD  120A  118A  2F75   	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	cstackCOMMON
   442  0070                     __pcstackCOMMON:	
   443  0070                     ?_Lcd_Port:	
   444  0070                     ??_Lcd_Port:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_Lcd_Cmd:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_Lcd_Clear:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_Lcd_Init:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_Lcd_Write_Char:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_Lcd_Write_String:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_main:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     Lcd_Port@a:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0070                     	ds	1
   471  0071                     ??_Lcd_Cmd:	
   472  0071                     ??_Lcd_Write_Char:	
   473                           ; 1 bytes @ 0x1
   474                           
   475                           
   476                           ; 1 bytes @ 0x1
   477  0071                     	ds	1
   478  0072                     Lcd_Write_Char@a:	
   479                           
   480                           ; 1 bytes @ 0x2
   481  0072                     	ds	1
   482  0073                     ??_Lcd_Write_String:	
   483  0073                     Lcd_Cmd@a:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0073                     Lcd_Write_String@i:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0073                     	ds	1
   492  0074                     ??_Lcd_Clear:	
   493  0074                     ?_Lcd_Set_Cursor:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0074                     ??_Lcd_Init:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     Lcd_Set_Cursor@b:	
   500                           ; 1 bytes @ 0x4
   501                           
   502                           
   503                           ; 1 bytes @ 0x4
   504  0074                     	ds	1
   505  0075                     ??_Lcd_Set_Cursor:	
   506  0075                     Lcd_Set_Cursor@a:	
   507                           ; 1 bytes @ 0x5
   508                           
   509  0075                     Lcd_Write_String@a:	
   510                           ; 1 bytes @ 0x5
   511                           
   512                           
   513                           ; 1 bytes @ 0x5
   514  0075                     	ds	1
   515  0076                     ??_main:	
   516                           
   517                           ; 1 bytes @ 0x6
   518  0076                     	ds	3
   519                           
   520                           	psect	maintext
   521  0775                     __pmaintext:	
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 45 in file "Lab3.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  a               2    0        unsigned int 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : B00/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0
   543 ;;      Temps:          3       0       0       0       0
   544 ;;      Totals:         3       0       0       0       0
   545 ;;Total ram usage:        3 bytes
   546 ;; Hardware stack levels required when called:    3
   547 ;; This function calls:
   548 ;;		_Lcd_Clear
   549 ;;		_Lcd_Init
   550 ;;		_Lcd_Set_Cursor
   551 ;;		_Lcd_Write_String
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _main
   559  0775                     _main:	
   560  0775                     l948:	
   561                           ;incstack = 0
   562                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;Lab3.c: 46:     unsigned int a;;Lab3.c: 47:     ANSELH = 0;
   566  0775  1683               	bsf	3,5	;RP0=1, select bank3
   567  0776  1703               	bsf	3,6	;RP1=1, select bank3
   568  0777  0189               	clrf	9	;volatile
   569                           
   570                           ;Lab3.c: 48:     ANSEL = 0;
   571  0778  0188               	clrf	8	;volatile
   572                           
   573                           ;Lab3.c: 49:     TRISA = 0x00;
   574  0779  1683               	bsf	3,5	;RP0=1, select bank1
   575  077A  1303               	bcf	3,6	;RP1=0, select bank1
   576  077B  0185               	clrf	5	;volatile
   577  077C                     l950:	
   578                           
   579                           ;Lab3.c: 50:     TRISD = 0x03;
   580  077C  3003               	movlw	3
   581  077D  0088               	movwf	8	;volatile
   582  077E                     l952:	
   583                           
   584                           ;Lab3.c: 51:     TRISC = 0x00;
   585  077E  0187               	clrf	7	;volatile
   586  077F                     l954:	
   587                           
   588                           ;Lab3.c: 52:     Lcd_Init();
   589  077F  120A  118A  27B6  120A  118A  	fcall	_Lcd_Init
   590  0784                     l956:	
   591                           
   592                           ;Lab3.c: 55:         Lcd_Clear();
   593  0784  120A  118A  26BA  120A  118A  	fcall	_Lcd_Clear
   594  0789                     l958:	
   595                           
   596                           ;Lab3.c: 56:         Lcd_Set_Cursor(1,1);
   597  0789  01F4               	clrf	Lcd_Set_Cursor@b
   598  078A  0AF4               	incf	Lcd_Set_Cursor@b,f
   599  078B  3001               	movlw	1
   600  078C  120A  118A  26D6  120A  118A  	fcall	_Lcd_Set_Cursor
   601  0791                     l960:	
   602                           
   603                           ;Lab3.c: 57:         Lcd_Write_String("aiuudaaa");
   604  0791  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   605  0792  120A  118A  2712  120A  118A  	fcall	_Lcd_Write_String
   606  0797                     l962:	
   607                           
   608                           ;Lab3.c: 58:     Lcd_Set_Cursor(2,1);
   609  0797  01F4               	clrf	Lcd_Set_Cursor@b
   610  0798  0AF4               	incf	Lcd_Set_Cursor@b,f
   611  0799  3002               	movlw	2
   612  079A  120A  118A  26D6  120A  118A  	fcall	_Lcd_Set_Cursor
   613  079F                     l964:	
   614                           
   615                           ;Lab3.c: 59:     Lcd_Write_String("DAVIIIIID");
   616  079F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   617  07A0  120A  118A  2712  120A  118A  	fcall	_Lcd_Write_String
   618                           
   619                           ;Lab3.c: 60:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   620  07A5  300B               	movlw	11
   621  07A6  00F8               	movwf	??_main+2
   622  07A7  3026               	movlw	38
   623  07A8  00F7               	movwf	??_main+1
   624  07A9  305D               	movlw	93
   625  07AA  00F6               	movwf	??_main
   626  07AB                     u157:	
   627  07AB  0BF6               	decfsz	??_main,f
   628  07AC  2FAB               	goto	u157
   629  07AD  0BF7               	decfsz	??_main+1,f
   630  07AE  2FAB               	goto	u157
   631  07AF  0BF8               	decfsz	??_main+2,f
   632  07B0  2FAB               	goto	u157
   633  07B1  2FB2               	nop2
   634  07B2  2F84               	goto	l956
   635  07B3  120A  118A  2800   	ljmp	start
   636  07B6                     __end_of_main:	
   637                           
   638                           	psect	text1
   639  0712                     __ptext1:	
   640 ;; *************** function _Lcd_Write_String *****************
   641 ;; Defined at:
   642 ;;		line 125 in file "LCD.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  a               1    wreg     PTR unsigned char 
   645 ;;		 -> STR_2(10), STR_1(9), 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  a               1    5[COMMON] PTR unsigned char 
   648 ;;		 -> STR_2(10), STR_1(9), 
   649 ;;  i               2    3[COMMON] int 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         3       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0
   662 ;;      Totals:         3       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    2
   666 ;; This function calls:
   667 ;;		_Lcd_Write_Char
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _Lcd_Write_String
   675  0712                     _Lcd_Write_String:	
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   679                           ;Lcd_Write_String@a stored from wreg
   680  0712  00F5               	movwf	Lcd_Write_String@a
   681  0713                     l940:	
   682                           
   683                           ;LCD.c: 125: void Lcd_Write_String(char *a);LCD.c: 126: {;LCD.c: 127:  int i;;LCD.c: 128
      +                          :  for(i=0;a[i]!='\0';i++)
   684  0713  01F3               	clrf	Lcd_Write_String@i
   685  0714  01F4               	clrf	Lcd_Write_String@i+1
   686  0715  2F29               	goto	l946
   687  0716                     l942:	
   688                           
   689                           ;LCD.c: 129:     Lcd_Write_Char(a[i]);
   690  0716  0873               	movf	Lcd_Write_String@i,w
   691  0717  0775               	addwf	Lcd_Write_String@a,w
   692  0718  0084               	movwf	4
   693  0719  120A  118A  2003  120A  118A  	fcall	stringdir
   694  071E  120A  118A  26C1  120A  118A  	fcall	_Lcd_Write_Char
   695  0723                     l944:	
   696  0723  3001               	movlw	1
   697  0724  07F3               	addwf	Lcd_Write_String@i,f
   698  0725  1803               	skipnc
   699  0726  0AF4               	incf	Lcd_Write_String@i+1,f
   700  0727  3000               	movlw	0
   701  0728  07F4               	addwf	Lcd_Write_String@i+1,f
   702  0729                     l946:	
   703  0729  0873               	movf	Lcd_Write_String@i,w
   704  072A  0775               	addwf	Lcd_Write_String@a,w
   705  072B  0084               	movwf	4
   706  072C  120A  118A  2003  120A  118A  	fcall	stringdir
   707  0731  3A00               	xorlw	0
   708  0732  1D03               	skipz
   709  0733  2F35               	goto	u141
   710  0734  2F36               	goto	u140
   711  0735                     u141:	
   712  0735  2F16               	goto	l942
   713  0736                     u140:	
   714  0736                     l65:	
   715  0736  0008               	return
   716  0737                     __end_of_Lcd_Write_String:	
   717                           
   718                           	psect	text2
   719  06C1                     __ptext2:	
   720 ;; *************** function _Lcd_Write_Char *****************
   721 ;; Defined at:
   722 ;;		line 115 in file "LCD.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  a               1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  a               1    2[COMMON] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0
   739 ;;      Totals:         2       0       0       0       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		_Lcd_Port
   745 ;; This function is called by:
   746 ;;		_Lcd_Write_String
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _Lcd_Write_Char
   752  06C1                     _Lcd_Write_Char:	
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   756                           ;Lcd_Write_Char@a stored from wreg
   757  06C1  00F2               	movwf	Lcd_Write_Char@a
   758  06C2                     l774:	
   759                           
   760                           ;LCD.c: 115: void Lcd_Write_Char(char a);LCD.c: 116: {;LCD.c: 118:    RC1 = 1;
   761  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   762  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   763  06C4  1487               	bsf	7,1	;volatile
   764  06C5                     l776:	
   765                           
   766                           ;LCD.c: 119:    Lcd_Port(a);
   767  06C5  0872               	movf	Lcd_Write_Char@a,w
   768  06C6  120A  118A  2737  120A  118A  	fcall	_Lcd_Port
   769  06CB                     l778:	
   770                           
   771                           ;LCD.c: 120:    RC0 = 1;
   772  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   773  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   774  06CD  1407               	bsf	7,0	;volatile
   775  06CE                     l780:	
   776                           
   777                           ;LCD.c: 121:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   778  06CE  300D               	movlw	13
   779  06CF  00F1               	movwf	??_Lcd_Write_Char
   780  06D0                     u167:	
   781  06D0  0BF1               	decfsz	??_Lcd_Write_Char,f
   782  06D1  2ED0               	goto	u167
   783  06D2                     l782:	
   784                           
   785                           ;LCD.c: 122:    RC0 = 0;
   786  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   787  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   788  06D4  1007               	bcf	7,0	;volatile
   789  06D5                     l59:	
   790  06D5  0008               	return
   791  06D6                     __end_of_Lcd_Write_Char:	
   792                           
   793                           	psect	text3
   794  06D6                     __ptext3:	
   795 ;; *************** function _Lcd_Set_Cursor *****************
   796 ;; Defined at:
   797 ;;		line 85 in file "LCD.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  a               1    wreg     unsigned char 
   800 ;;  b               1    4[COMMON] unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  a               1    5[COMMON] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0, pclath, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         1       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0
   815 ;;      Totals:         2       0       0       0       0
   816 ;;Total ram usage:        2 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    2
   819 ;; This function calls:
   820 ;;		_Lcd_Cmd
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _Lcd_Set_Cursor
   828  06D6                     _Lcd_Set_Cursor:	
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   832                           ;Lcd_Set_Cursor@a stored from wreg
   833  06D6  00F5               	movwf	Lcd_Set_Cursor@a
   834  06D7                     l932:	
   835                           
   836                           ;LCD.c: 85: void Lcd_Set_Cursor(char a, char b);LCD.c: 86: {;LCD.c: 87:  if(a == 1)
   837  06D7  0375               	decf	Lcd_Set_Cursor@a,w
   838  06D8  1D03               	btfss	3,2
   839  06D9  2EDB               	goto	u121
   840  06DA  2EDC               	goto	u120
   841  06DB                     u121:	
   842  06DB  2EE4               	goto	l936
   843  06DC                     u120:	
   844  06DC                     l934:	
   845                           
   846                           ;LCD.c: 88:  {;LCD.c: 89:   Lcd_Cmd(0x80 + b - 1);
   847  06DC  0874               	movf	Lcd_Set_Cursor@b,w
   848  06DD  3E7F               	addlw	127
   849  06DE  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   850                           
   851                           ;LCD.c: 90:  }
   852  06E3  2EF1               	goto	l53
   853  06E4                     l936:	
   854  06E4  3002               	movlw	2
   855  06E5  0675               	xorwf	Lcd_Set_Cursor@a,w
   856  06E6  1D03               	btfss	3,2
   857  06E7  2EE9               	goto	u131
   858  06E8  2EEA               	goto	u130
   859  06E9                     u131:	
   860  06E9  2EF1               	goto	l53
   861  06EA                     u130:	
   862  06EA                     l938:	
   863                           
   864                           ;LCD.c: 92:  {;LCD.c: 93:   Lcd_Cmd(0xC0 + b - 1);
   865  06EA  0874               	movf	Lcd_Set_Cursor@b,w
   866  06EB  3EBF               	addlw	191
   867  06EC  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   868  06F1                     l53:	
   869  06F1  0008               	return
   870  06F2                     __end_of_Lcd_Set_Cursor:	
   871                           
   872                           	psect	text4
   873  07B6                     __ptext4:	
   874 ;; *************** function _Lcd_Init *****************
   875 ;; Defined at:
   876 ;;		line 97 in file "LCD.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          2       0       0       0       0
   893 ;;      Totals:         2       0       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    2
   897 ;; This function calls:
   898 ;;		_Lcd_Cmd
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _Lcd_Init
   906  07B6                     _Lcd_Init:	
   907  07B6                     l794:	
   908                           ;incstack = 0
   909                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   910                           
   911                           
   912                           ;LCD.c: 100:    _delay((unsigned long)((15)*(4000000/4000.0)));
   913  07B6  3014               	movlw	20
   914  07B7  00F5               	movwf	??_Lcd_Init+1
   915  07B8  3079               	movlw	121
   916  07B9  00F4               	movwf	??_Lcd_Init
   917  07BA                     u177:	
   918  07BA  0BF4               	decfsz	??_Lcd_Init,f
   919  07BB  2FBA               	goto	u177
   920  07BC  0BF5               	decfsz	??_Lcd_Init+1,f
   921  07BD  2FBA               	goto	u177
   922  07BE  2FBF               	nop2
   923  07BF                     l796:	
   924                           
   925                           ;LCD.c: 101:   Lcd_Cmd(0x030);
   926  07BF  3030               	movlw	48
   927  07C0  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   928  07C5                     l798:	
   929                           
   930                           ;LCD.c: 102:   _delay((unsigned long)((5)*(4000000/4000.0)));
   931  07C5  3007               	movlw	7
   932  07C6  00F5               	movwf	??_Lcd_Init+1
   933  07C7  307D               	movlw	125
   934  07C8  00F4               	movwf	??_Lcd_Init
   935  07C9                     u187:	
   936  07C9  0BF4               	decfsz	??_Lcd_Init,f
   937  07CA  2FC9               	goto	u187
   938  07CB  0BF5               	decfsz	??_Lcd_Init+1,f
   939  07CC  2FC9               	goto	u187
   940                           
   941                           ;LCD.c: 103:   Lcd_Cmd(0x030);
   942  07CD  3030               	movlw	48
   943  07CE  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   944  07D3                     l800:	
   945                           
   946                           ;LCD.c: 104:   _delay((unsigned long)((160)*(4000000/4000000.0)));
   947  07D3  3035               	movlw	53
   948  07D4  00F4               	movwf	??_Lcd_Init
   949  07D5                     u197:	
   950  07D5  0BF4               	decfsz	??_Lcd_Init,f
   951  07D6  2FD5               	goto	u197
   952  07D7                     l802:	
   953                           
   954                           ;LCD.c: 105:   Lcd_Cmd(0x030);
   955  07D7  3030               	movlw	48
   956  07D8  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   957  07DD                     l804:	
   958                           
   959                           ;LCD.c: 107:   Lcd_Cmd(0x38);
   960  07DD  3038               	movlw	56
   961  07DE  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   962  07E3                     l806:	
   963                           
   964                           ;LCD.c: 108:   Lcd_Cmd(0x10);
   965  07E3  3010               	movlw	16
   966  07E4  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   967  07E9                     l808:	
   968                           
   969                           ;LCD.c: 109:   Lcd_Cmd(0x01);
   970  07E9  3001               	movlw	1
   971  07EA  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   972  07EF                     l810:	
   973                           
   974                           ;LCD.c: 110:   Lcd_Cmd(0x06);
   975  07EF  3006               	movlw	6
   976  07F0  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   977  07F5                     l812:	
   978                           
   979                           ;LCD.c: 111:   Lcd_Cmd(0x0F);
   980  07F5  300F               	movlw	15
   981  07F6  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
   982  07FB                     l56:	
   983  07FB  0008               	return
   984  07FC                     __end_of_Lcd_Init:	
   985                           
   986                           	psect	text5
   987  06BA                     __ptext5:	
   988 ;; *************** function _Lcd_Clear *****************
   989 ;; Defined at:
   990 ;;		line 80 in file "LCD.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    2
  1011 ;; This function calls:
  1012 ;;		_Lcd_Cmd
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _Lcd_Clear
  1020  06BA                     _Lcd_Clear:	
  1021  06BA                     l784:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1024                           
  1025                           
  1026                           ;LCD.c: 82:  Lcd_Cmd(1);
  1027  06BA  3001               	movlw	1
  1028  06BB  120A  118A  26F2  120A  118A  	fcall	_Lcd_Cmd
  1029  06C0                     l47:	
  1030  06C0  0008               	return
  1031  06C1                     __end_of_Lcd_Clear:	
  1032                           
  1033                           	psect	text6
  1034  06F2                     __ptext6:	
  1035 ;; *************** function _Lcd_Cmd *****************
  1036 ;; Defined at:
  1037 ;;		line 70 in file "LCD.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  a               1    wreg     unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  a               1    3[COMMON] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0
  1053 ;;      Temps:          2       0       0       0       0
  1054 ;;      Totals:         3       0       0       0       0
  1055 ;;Total ram usage:        3 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		_Lcd_Port
  1060 ;; This function is called by:
  1061 ;;		_Lcd_Clear
  1062 ;;		_Lcd_Set_Cursor
  1063 ;;		_Lcd_Init
  1064 ;;		_Lcd_Shift_Right
  1065 ;;		_Lcd_Shift_Left
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _Lcd_Cmd
  1071  06F2                     _Lcd_Cmd:	
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1075                           ;Lcd_Cmd@a stored from wreg
  1076  06F2  00F3               	movwf	Lcd_Cmd@a
  1077  06F3                     l762:	
  1078                           
  1079                           ;LCD.c: 70: void Lcd_Cmd(char a);LCD.c: 71: {;LCD.c: 72:  RC1 = 0;
  1080  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1081  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1082  06F5  1087               	bcf	7,1	;volatile
  1083  06F6                     l764:	
  1084                           
  1085                           ;LCD.c: 73:  Lcd_Port(a);
  1086  06F6  0873               	movf	Lcd_Cmd@a,w
  1087  06F7  120A  118A  2737  120A  118A  	fcall	_Lcd_Port
  1088  06FC                     l766:	
  1089                           
  1090                           ;LCD.c: 74:  RC0 = 1;
  1091  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1092  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1093  06FE  1407               	bsf	7,0	;volatile
  1094  06FF                     l768:	
  1095                           
  1096                           ;LCD.c: 75:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1097  06FF  3007               	movlw	7
  1098  0700  00F2               	movwf	??_Lcd_Cmd+1
  1099  0701  307D               	movlw	125
  1100  0702  00F1               	movwf	??_Lcd_Cmd
  1101  0703                     u207:	
  1102  0703  0BF1               	decfsz	??_Lcd_Cmd,f
  1103  0704  2F03               	goto	u207
  1104  0705  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1105  0706  2F03               	goto	u207
  1106  0707                     l770:	
  1107                           
  1108                           ;LCD.c: 76:     RC0 = 0;
  1109  0707  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0708  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0709  1007               	bcf	7,0	;volatile
  1112  070A                     l772:	
  1113                           
  1114                           ;LCD.c: 77:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1115  070A  30C7               	movlw	199
  1116  070B  00F1               	movwf	??_Lcd_Cmd
  1117  070C                     u217:	
  1118  070C  2F0D               	nop2
  1119  070D  0BF1               	decfsz	??_Lcd_Cmd,f
  1120  070E  2F0C               	goto	u217
  1121  070F  2F10               	nop2
  1122  0710  2F11               	nop2
  1123  0711                     l44:	
  1124  0711  0008               	return
  1125  0712                     __end_of_Lcd_Cmd:	
  1126                           
  1127                           	psect	text7
  1128  0737                     __ptext7:	
  1129 ;; *************** function _Lcd_Port *****************
  1130 ;; Defined at:
  1131 ;;		line 27 in file "LCD.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  a               1    wreg     unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  a               1    0[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         1       0       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_Lcd_Cmd
  1155 ;;		_Lcd_Write_Char
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _Lcd_Port
  1161  0737                     _Lcd_Port:	
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _Lcd_Port: [wreg]
  1165                           ;Lcd_Port@a stored from wreg
  1166  0737  00F0               	movwf	Lcd_Port@a
  1167  0738                     l744:	
  1168                           
  1169                           ;LCD.c: 27: void Lcd_Port(char a);LCD.c: 28: {;LCD.c: 29:     if(a & 1)
  1170  0738  1C70               	btfss	Lcd_Port@a,0
  1171  0739  2F3B               	goto	u11
  1172  073A  2F3C               	goto	u10
  1173  073B                     u11:	
  1174  073B  2F40               	goto	l25
  1175  073C                     u10:	
  1176  073C                     l746:	
  1177                           
  1178                           ;LCD.c: 30:   RA0 = 1;
  1179  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1180  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1181  073E  1405               	bsf	5,0	;volatile
  1182  073F  2F43               	goto	l26
  1183  0740                     l25:	
  1184                           ;LCD.c: 31:  else
  1185                           
  1186                           
  1187                           ;LCD.c: 32:   RA0 = 0;
  1188  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0742  1005               	bcf	5,0	;volatile
  1191  0743                     l26:	
  1192                           
  1193                           ;LCD.c: 34:  if(a & 2)
  1194  0743  1CF0               	btfss	Lcd_Port@a,1
  1195  0744  2F46               	goto	u21
  1196  0745  2F47               	goto	u20
  1197  0746                     u21:	
  1198  0746  2F49               	goto	l27
  1199  0747                     u20:	
  1200  0747                     l748:	
  1201                           
  1202                           ;LCD.c: 35:   RA1 = 1;
  1203  0747  1485               	bsf	5,1	;volatile
  1204  0748  2F4A               	goto	l28
  1205  0749                     l27:	
  1206                           ;LCD.c: 36:  else
  1207                           
  1208                           
  1209                           ;LCD.c: 37:   RA1 = 0;
  1210  0749  1085               	bcf	5,1	;volatile
  1211  074A                     l28:	
  1212                           
  1213                           ;LCD.c: 39:  if(a & 4)
  1214  074A  1D70               	btfss	Lcd_Port@a,2
  1215  074B  2F4D               	goto	u31
  1216  074C  2F4E               	goto	u30
  1217  074D                     u31:	
  1218  074D  2F50               	goto	l29
  1219  074E                     u30:	
  1220  074E                     l750:	
  1221                           
  1222                           ;LCD.c: 40:   RA2 = 1;
  1223  074E  1505               	bsf	5,2	;volatile
  1224  074F  2F51               	goto	l30
  1225  0750                     l29:	
  1226                           ;LCD.c: 41:  else
  1227                           
  1228                           
  1229                           ;LCD.c: 42:   RA2 = 0;
  1230  0750  1105               	bcf	5,2	;volatile
  1231  0751                     l30:	
  1232                           
  1233                           ;LCD.c: 44:  if(a & 8)
  1234  0751  1DF0               	btfss	Lcd_Port@a,3
  1235  0752  2F54               	goto	u41
  1236  0753  2F55               	goto	u40
  1237  0754                     u41:	
  1238  0754  2F57               	goto	l31
  1239  0755                     u40:	
  1240  0755                     l752:	
  1241                           
  1242                           ;LCD.c: 45:   RA3 = 1;
  1243  0755  1585               	bsf	5,3	;volatile
  1244  0756  2F58               	goto	l32
  1245  0757                     l31:	
  1246                           ;LCD.c: 46:  else
  1247                           
  1248                           
  1249                           ;LCD.c: 47:   RA3 = 0;
  1250  0757  1185               	bcf	5,3	;volatile
  1251  0758                     l32:	
  1252                           
  1253                           ;LCD.c: 49:  if(a & 16)
  1254  0758  1E70               	btfss	Lcd_Port@a,4
  1255  0759  2F5B               	goto	u51
  1256  075A  2F5C               	goto	u50
  1257  075B                     u51:	
  1258  075B  2F5E               	goto	l33
  1259  075C                     u50:	
  1260  075C                     l754:	
  1261                           
  1262                           ;LCD.c: 50:   RA4 = 1;
  1263  075C  1605               	bsf	5,4	;volatile
  1264  075D  2F5F               	goto	l34
  1265  075E                     l33:	
  1266                           ;LCD.c: 51:  else
  1267                           
  1268                           
  1269                           ;LCD.c: 52:   RA4 = 0;
  1270  075E  1205               	bcf	5,4	;volatile
  1271  075F                     l34:	
  1272                           
  1273                           ;LCD.c: 54:  if(a & 32)
  1274  075F  1EF0               	btfss	Lcd_Port@a,5
  1275  0760  2F62               	goto	u61
  1276  0761  2F63               	goto	u60
  1277  0762                     u61:	
  1278  0762  2F65               	goto	l35
  1279  0763                     u60:	
  1280  0763                     l756:	
  1281                           
  1282                           ;LCD.c: 55:   RA5 = 1;
  1283  0763  1685               	bsf	5,5	;volatile
  1284  0764  2F66               	goto	l36
  1285  0765                     l35:	
  1286                           ;LCD.c: 56:  else
  1287                           
  1288                           
  1289                           ;LCD.c: 57:   RA5 = 0;
  1290  0765  1285               	bcf	5,5	;volatile
  1291  0766                     l36:	
  1292                           
  1293                           ;LCD.c: 59:  if(a & 64)
  1294  0766  1F70               	btfss	Lcd_Port@a,6
  1295  0767  2F69               	goto	u71
  1296  0768  2F6A               	goto	u70
  1297  0769                     u71:	
  1298  0769  2F6C               	goto	l37
  1299  076A                     u70:	
  1300  076A                     l758:	
  1301                           
  1302                           ;LCD.c: 60:   RA6 = 1;
  1303  076A  1705               	bsf	5,6	;volatile
  1304  076B  2F6D               	goto	l38
  1305  076C                     l37:	
  1306                           ;LCD.c: 61:  else
  1307                           
  1308                           
  1309                           ;LCD.c: 62:   RA6 = 0;
  1310  076C  1305               	bcf	5,6	;volatile
  1311  076D                     l38:	
  1312                           
  1313                           ;LCD.c: 64:  if(a & 128)
  1314  076D  1FF0               	btfss	Lcd_Port@a,7
  1315  076E  2F70               	goto	u81
  1316  076F  2F71               	goto	u80
  1317  0770                     u81:	
  1318  0770  2F73               	goto	l39
  1319  0771                     u80:	
  1320  0771                     l760:	
  1321                           
  1322                           ;LCD.c: 65:   RA7 = 1;
  1323  0771  1785               	bsf	5,7	;volatile
  1324  0772  2F74               	goto	l41
  1325  0773                     l39:	
  1326                           ;LCD.c: 66:  else
  1327                           
  1328                           
  1329                           ;LCD.c: 67:   RA7 = 0;
  1330  0773  1385               	bcf	5,7	;volatile
  1331  0774                     l41:	
  1332  0774  0008               	return
  1333  0775                     __end_of_Lcd_Port:	
  1334  007E                     btemp	set	126	;btemp
  1335  007E                     wtemp0	set	126


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     936
                                              6 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     291
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     135
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     375
                                              4 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 05 17:01:05 2020

                        pc 0002                __CFG_CP$OFF 0000                         l30 0751  
                       l31 0757                         l32 0758                         l41 0774  
                       l33 075E                         l25 0740                         l34 075F  
                       l26 0743                         l35 0765                         l27 0749  
                       l36 0766                         l28 074A                         l44 0711  
                       l37 076C                         l29 0750                         l53 06F1  
                       l38 076D                         l39 0773                         l47 06C0  
                       l56 07FB                         l65 0736                         l59 06D5  
                       u10 073C                         u11 073B                         u20 0747  
                       u21 0746                         u30 074E                         u31 074D  
                       u40 0755                         u41 0754                         u50 075C  
                       u51 075B                         u60 0763                         u61 0762  
                       u70 076A                         u71 0769                         u80 0771  
                       u81 0770                         fsr 0004                        l800 07D3  
                      l810 07EF                        l802 07D7                        l812 07F5  
                      l804 07DD                        l750 074E                        l806 07E3  
                      l760 0771                        l752 0755                        l744 0738  
                      l808 07E9                        l754 075C                        l746 073C  
                      l770 0707                        l762 06F3                        l756 0763  
                      l748 0747                        l772 070A                        l764 06F6  
                      l932 06D7                        l780 06CE                        l940 0713  
                      l758 076A                        l766 06FC                        l934 06DC  
                      l782 06D2                        l774 06C2                        l942 0716  
                      l950 077C                        l768 06FF                        l784 06BA  
                      l936 06E4                        l776 06C5                        l944 0723  
                      l960 0791                        l952 077E                        l794 07B6  
                      l938 06EA                        l778 06CB                        l946 0729  
                      l962 0797                        l954 077F                        l796 07BF  
                      l964 079F                        l956 0784                        l948 0775  
                      l798 07C5                        l958 0789                        _RA0 0028  
                      _RA1 0029                        _RA2 002A                        _RA3 002B  
                      _RA4 002C                        _RC0 0038                        _RA5 002D  
                      _RC1 0039                        _RA6 002E                        _RA7 002F  
                      u120 06DC                        u121 06DB                        u130 06EA  
                      u131 06E9                        u140 0736                        u141 0735  
                      u207 0703                        u217 070C                        u157 07AB  
                      u167 06D0                        u177 07BA               __CFG_CPD$OFF 0000  
                      u187 07C9                        u197 07D5                        fsr0 0004  
             __CFG_LVP$OFF 0000                       STR_1 0013                       STR_2 0009  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070                       _main 0775  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
            __CFG_IESO$OFF 0000            __end_of_Lcd_Cmd 0712                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188    __size_of_Lcd_Set_Cursor 001C  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
           __CFG_FCMEN$OFF 0000             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 07FC  
         __end_of_Lcd_Port 0775             __CFG_MCLRE$OFF 0000            __initialization 07FC  
             __end_of_main 07B6                     ??_main 0076         __size_of_Lcd_Clear 0007  
                   _ADRESH 001E                     _ADRESL 009E                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0015             __CFG_PWRTE$OFF 0000  
          Lcd_Set_Cursor@a 0075            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 06C1             __pcstackCOMMON 0070             _Lcd_Set_Cursor 06D6  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 0775  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 06F2                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 06C1  
                  _Lcd_Cmd 06F2                  _ANSELbits 0188            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0712                    __ptext2 06C1                    __ptext3 06D6  
                  __ptext4 07B6                    __ptext5 06BA                    __ptext6 06F2  
                  __ptext7 0737     __end_of_Lcd_Write_Char 06D6       end_of_initialization 07FC  
                Lcd_Port@a 0070                  _TRISAbits 0085                  _TRISBbits 0086  
                _TRISEbits 0089            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0073                  _Lcd_Clear 06BA           _Lcd_Write_String 0712  
      start_initialization 07FC          __size_of_Lcd_Init 0046          __size_of_Lcd_Port 003E  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                __pstrings 0003                   _PIE1bits 008C                   Lcd_Cmd@a 0073  
                 _PIR1bits 000C                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0008                 _ADCON1bits 009F           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 07B6                   _Lcd_Port 0737   __end_of_Lcd_Write_String 0737  
         __size_of_Lcd_Cmd 0020         __end_of__stringtab 0009                 _ANSELHbits 0189  
        __CFG_BOR4V$BOR40V 0000              __size_of_main 0041                 _INTCONbits 000B  
                stringcode 0003                   stringdir 0003                   stringtab 0003  
